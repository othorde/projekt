{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\User\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Api from \"../../api\";\nimport { Content, UserInfo } from \"./Form.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data = [{\n  id: \"1\",\n  tag: \"customer\",\n  firstName: \"Johanna\",\n  sirName: \"Persson\",\n  email: \"johanna@example.se\",\n  trips: [{\n    id: \"1\",\n    date: \"2021-11-08\",\n    price: \"25\",\n    start: {\n      position: {\n        lat: \"56.164527\",\n        long: \"15.584790\"\n      },\n      time: \"16:08\"\n    },\n    stop: {\n      position: {\n        lat: \"56.164527\",\n        long: \"15.584790\"\n      },\n      time: \"16:22\"\n    }\n  }, {\n    id: \"2\",\n    date: \"2021-11-09\",\n    price: \"55\",\n    start: {\n      position: {\n        lat: \"56.164527\",\n        long: \"15.584790\"\n      },\n      time: \"12:04\"\n    },\n    stop: {\n      position: {\n        lat: \"56.164527\",\n        long: \"15.584790\"\n      },\n      time: \"12:44\"\n    }\n  }],\n  balance: \"500\"\n}];\nconst initialValue = {\n  username: \"Could not get information\",\n  email: \"\",\n  totalCost: \"\",\n  firstTrip: \"\",\n  lastTrip: \"\"\n};\nexport default function User() {\n  _s();\n\n  // get user by username\n  // Kanske får hämta data redan vid inlogg, \n  // ska ändå hämtas för att kolla om user eller admin\n  const [userInfo, setUserInfo] = useState(initialValue);\n  useEffect(() => {\n    if (data[0]) {\n      data = data[0];\n    }\n\n    if (data && data.trips.length > 0) {\n      let totalCost = 0;\n      let firstTrip;\n      let totalNumberOfTrips;\n      let lastTrip;\n      data.trips.forEach(elem => {\n        totalCost += parseInt(elem.price);\n      });\n      firstTrip = data.trips[0].date;\n      totalNumberOfTrips = data.trips.length;\n      lastTrip = data.trips[totalNumberOfTrips - 1].date;\n      setUserInfo({\n        username: data.firstName + \" \" + data.sirName,\n        email: data.email,\n        totalCost: totalCost,\n        firstTrip: firstTrip,\n        totalNumberOfTrips: totalNumberOfTrips,\n        lastTrip: lastTrip\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Mouse over me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(User, \"Ph34tpQTHQ6PERcEhfj4LrcPgyM=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/User/index.js"],"names":["React","useEffect","useState","Api","Content","UserInfo","data","id","tag","firstName","sirName","email","trips","date","price","start","position","lat","long","time","stop","balance","initialValue","username","totalCost","firstTrip","lastTrip","User","userInfo","setUserInfo","length","totalNumberOfTrips","forEach","elem","parseInt"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from \"react\";\nimport Api from \"../../api\";\nimport {Content, UserInfo} from \"./Form.style\"\n\nlet data = [\n    {\n        id: \"1\",\n        tag: \"customer\",\n        firstName: \"Johanna\",\n        sirName: \"Persson\",\n        email: \"johanna@example.se\",\n        trips: [\n            {\n                id: \"1\",\n                date: \"2021-11-08\",\n                price: \"25\",\n                start: {\n                    position: {\n                        lat: \"56.164527\",\n                        long: \"15.584790\"\n                    },\n                    time: \"16:08\"\n                },\n                stop: {\n                    position: {\n                        lat: \"56.164527\",\n                        long: \"15.584790\"\n                    },\n                    time: \"16:22\"\n                }\n            },\n            {\n                id: \"2\",\n                date: \"2021-11-09\",\n                price: \"55\",\n                start: {\n                    position: {\n                        lat: \"56.164527\",\n                        long: \"15.584790\"\n                    },\n                    time: \"12:04\"\n                },\n                stop: {\n                    position: {\n                        lat: \"56.164527\",\n                        long: \"15.584790\"\n                    },\n                    time: \"12:44\"\n                }\n            }\n        ],\n        balance: \"500\"\n    }\n]\n\n\nconst initialValue = {\n    username: \"Could not get information\",\n    email: \"\",\n    totalCost: \"\",\n    firstTrip: \"\",\n    lastTrip: \"\"\n}\n\n\n\nexport default function User() {\n    // get user by username\n    // Kanske får hämta data redan vid inlogg, \n    // ska ändå hämtas för att kolla om user eller admin\n\n    const [userInfo, setUserInfo] = useState(initialValue);\n\n    useEffect(() => {\n        \n        if (data[0]) {\n            data = data[0];\n        }\n        if(data && data.trips.length > 0) {\n            let totalCost = 0;\n            let firstTrip;\n            let totalNumberOfTrips;\n            let lastTrip;\n\n            data.trips.forEach(elem => {\n                totalCost += parseInt(elem.price);\n            });\n            \n            firstTrip = data.trips[0].date;\n            totalNumberOfTrips = data.trips.length;\n            lastTrip = data.trips[totalNumberOfTrips-1].date;\n            \n            setUserInfo(({\n                username: data.firstName + \" \" + data.sirName,\n                email: data.email,\n                totalCost: totalCost,\n                firstTrip: firstTrip,\n                totalNumberOfTrips: totalNumberOfTrips,\n                lastTrip: lastTrip\n            }));\n        } \n    }, [])\n\n\n\n\treturn (\n        <Content>   \n            <span>Mouse over me</span>\n\n            <UserInfo>     <p>Hello World!</p>\n</UserInfo>\n            \n        </Content>\n\t);\n}"]},"metadata":{},"sourceType":"module"}