{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState,useEffect}from'react';import Api from\"../Api\";// hämtar alla användare som finns registrerade vid mount\n// retunerar alla och error\nexport var useFetchAllCustomers=function useFetchAllCustomers(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allCustomers=_useState2[0],setAllCustomers=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),errorAllCustomers=_useState4[0],setErrorAllCustomers=_useState4[1];// hämtar, sparar till state\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setErrorAllCustomers(false);_context.next=4;return Api.getAllUsers();case 4:res=_context.sent;res.data&&setAllCustomers(res.data);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);setErrorAllCustomers(true);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();/* Hämtar endast vid mount */useEffect(function(){fetchData();},[]);return{allCustomers:allCustomers,errorAllCustomers:errorAllCustomers};};","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/Hooks/useFetchAllCustomers.js"],"names":["useState","useEffect","Api","useFetchAllCustomers","allCustomers","setAllCustomers","errorAllCustomers","setErrorAllCustomers","fetchData","getAllUsers","res","data"],"mappings":"8bAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CAEA;AACA;AACA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAEtC,cAAwCH,QAAQ,CAAC,EAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eACA,eAAkDL,QAAQ,CAAC,KAAD,CAA1D,yCAAOM,iBAAP,eAA0BC,oBAA1B,eAEA;AACA,GAAMC,CAAAA,SAAS,0FAAG,2JAEVD,oBAAoB,CAAC,KAAD,CAApB,CAFU,sBAGML,CAAAA,GAAG,CAACO,WAAJ,EAHN,QAGNC,GAHM,eAIVA,GAAG,CAACC,IAAJ,EAAYN,eAAe,CAACK,GAAG,CAACC,IAAL,CAA3B,CAJU,+EAMVJ,oBAAoB,CAAC,IAAD,CAApB,CANU,oEAAH,kBAATC,CAAAA,SAAS,0CAAf,CAUA,6BACAP,SAAS,CAAC,UAAM,CACZO,SAAS,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA,MAAO,CAACJ,YAAY,CAAZA,YAAD,CAAeE,iBAAiB,CAAjBA,iBAAf,CAAP,CACH,CAtBM","sourcesContent":["import {useState, useEffect} from 'react';\nimport Api from \"../Api\";\n\n// hämtar alla användare som finns registrerade vid mount\n// retunerar alla och error\nexport const useFetchAllCustomers = () => {\n\n    const [allCustomers, setAllCustomers] = useState([]);\n    const [errorAllCustomers, setErrorAllCustomers] = useState(false);\n\n    // hämtar, sparar till state\n    const fetchData = async () => {\n        try {\n            setErrorAllCustomers(false)\n            let res = await Api.getAllUsers();\n            res.data && setAllCustomers(res.data);\n        } catch (error) {\n            setErrorAllCustomers(true)\n        }\n    }\n\n    /* Hämtar endast vid mount */\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    return {allCustomers, errorAllCustomers}\n}"]},"metadata":{},"sourceType":"module"}