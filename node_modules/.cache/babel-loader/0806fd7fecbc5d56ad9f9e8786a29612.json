{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Payment\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext, useEffect } from \"react\"; //components\n\nimport User from \"../../components/User/index.js\";\nimport Api from \"../../api.js\";\nimport AppContext from \"../../AppContext.js\"; //styles\n\nimport { Content, Delimiter, StylePayment, StylePayment2, Subscription } from \"./Form.styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  showMsgSubs: false,\n  showMsgOnePay: false,\n  msg: \"\"\n};\n\nconst Payment = () => {\n  _s();\n\n  const myContext = useContext(AppContext);\n  const [msgForUser, setMsgForUser] = useState(initialValue);\n  const [subscription, setSubscription] = useState(0);\n  const [onePayment, setOnePayment] = useState(0);\n  const [IfUserHasSubsc, setIfUserHasSubsc] = useState(\"\");\n  const [msgForUnsubscribe, setMsgForUnsubscribe] = useState({\n    showMsg: false,\n    msg: \"\"\n  });\n\n  const checkIfSubscription = async () => {//setIfUserHasSubs(myContext.user.subscription)\n    //setIfUserHasSubsc()\n  };\n\n  let userName = myContext.user.username;\n\n  const handleUnSubscribe = async event => {\n    event.preventDefault();\n    let result = await Api.updateUserSubsc();\n    let msg;\n    console.log(result);\n\n    if (result == \"OK\") {\n      msg = \"Prenumerationen avslutad\";\n      setIfUserHasSubsc(false);\n    } else {\n      msg = \"Prenumerationen gick ej att avsluta\";\n    }\n\n    setMsgForUnsubscribe({\n      showMsg: true,\n      msg: msg\n    });\n  }; // KOLLA vad meddelandena blir från backend\n\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let showMsgSubs = false;\n    let showMsgOnePay = false;\n    let msg = \"\";\n    let result;\n\n    if (subscription !== 0) {\n      showMsgSubs = true;\n      result = await Api.updateUserSubsc(subscription, userName);\n      msg = \"Din prenumeration är nu godkänd\";\n      setIfUserHasSubsc(true);\n    } else if (onePayment) {\n      showMsgOnePay = true;\n\n      if (onePayment) {\n        result = await Api.updateUserFunds(onePayment, userName);\n        msg = \"Din insättning har gått igenom\";\n      }\n    }\n\n    if (result != \"OK\") {\n      msg = \"Något gick fel... testa igen senare\";\n    }\n\n    setMsgForUser({\n      showMsgSubs: showMsgSubs,\n      showMsgOnePay: showMsgOnePay,\n      msg: msg\n    });\n    setOnePayment(0);\n    setSubscription(0);\n  };\n\n  useEffect(() => {\n    checkIfSubscription();\n  }, [setMsgForUser, msgForUser]);\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: /*#__PURE__*/_jsxDEV(StylePayment, {\n      children: [msgForUser.showMsgOnePay ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msgForUser.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"Minsta möjliga insättning (100:-) \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Belopp att s\\xE4tta in\",\n            type: \"number\",\n            name: \"onepayment\",\n            required: true,\n            value: onePayment || \"\",\n            onChange: e => setOnePayment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Delimiter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"S\\xE4tt in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Payment, \"umoN+ghYg4o5Pw897be9Em64iIc=\");\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Payment/index.js"],"names":["React","useState","useContext","useEffect","User","Api","AppContext","Content","Delimiter","StylePayment","StylePayment2","Subscription","initialValue","showMsgSubs","showMsgOnePay","msg","Payment","myContext","msgForUser","setMsgForUser","subscription","setSubscription","onePayment","setOnePayment","IfUserHasSubsc","setIfUserHasSubsc","msgForUnsubscribe","setMsgForUnsubscribe","showMsg","checkIfSubscription","userName","user","username","handleUnSubscribe","event","preventDefault","result","updateUserSubsc","console","log","handleSubmit","updateUserFunds","e","target","value"],"mappings":"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","sourcesContent":["import {React, useState, useContext, useEffect} from \"react\";\n//components\nimport User from \"../../components/User/index.js\";\nimport Api from \"../../api.js\";\nimport AppContext from \"../../AppContext.js\";\n//styles\nimport { Content, Delimiter, StylePayment, StylePayment2, Subscription} from \"./Form.styles.js\";\n\nconst initialValue = {\n    showMsgSubs: false,\n    showMsgOnePay: false,\n    msg: \"\"\n}\n\n\n\nconst Payment = () => {\n    const myContext = useContext(AppContext);\n    const [msgForUser, setMsgForUser] = useState(initialValue);\n    const [subscription, setSubscription] = useState(0);\n    const [onePayment, setOnePayment] = useState(0);\n    const [IfUserHasSubsc, setIfUserHasSubsc] = useState(\"\");\n    const [msgForUnsubscribe, setMsgForUnsubscribe] = useState({showMsg: false, msg: \"\"});\n\n    const checkIfSubscription = async() => {\n        //setIfUserHasSubs(myContext.user.subscription)\n        //setIfUserHasSubsc()\n    }\n\n    let userName = myContext.user.username;\n\n\n    const handleUnSubscribe = async(event) => {\n        event.preventDefault();\n\n       let result = await Api.updateUserSubsc();\n       let msg;\n        console.log(result)\n       if(result == \"OK\") {\n           msg = \"Prenumerationen avslutad\";\n           setIfUserHasSubsc(false)\n       } else {\n            msg = \"Prenumerationen gick ej att avsluta\";\n\n       }\n       setMsgForUnsubscribe({showMsg: true, msg: msg})\n    }\n\n    // KOLLA vad meddelandena blir från backend\n    const handleSubmit = async (event)  => {\n        event.preventDefault();\n\n        let showMsgSubs = false;\n        let showMsgOnePay = false;\n        let msg = \"\";\n        let result;\n\n        if (subscription !== 0) {\n            showMsgSubs = true;\n            result = await Api.updateUserSubsc(subscription, userName);\n            msg = \"Din prenumeration är nu godkänd\"\n            setIfUserHasSubsc(true);\n\n        } else if (onePayment) {\n            showMsgOnePay = true;\n            if (onePayment) {\n                result = await Api.updateUserFunds(onePayment, userName);\n                msg = \"Din insättning har gått igenom\";\n            }\n        } \n        if (result != \"OK\") {\n            msg = \"Något gick fel... testa igen senare\"\n        } \n        setMsgForUser({ \n            showMsgSubs: showMsgSubs,\n            showMsgOnePay: showMsgOnePay,\n            msg: msg,\n        })\n        setOnePayment(0);\n        setSubscription(0);\n    }\n\n    useEffect(() => {\n        checkIfSubscription()\n    }, [setMsgForUser, msgForUser])\n\n\treturn (\n        <Content>\n            <StylePayment>\n            {msgForUser.showMsgOnePay ? <p>{msgForUser.msg}</p> : (<p> {\"Minsta möjliga insättning (100:-) \"}</p>)}\n            <form onSubmit={handleSubmit} className = \"register\">\n                <label>\n                <input\n                    placeholder=\"Belopp att sätta in\"\n                    type=\"number\" \n                    name=\"onepayment\"\n                    required\n                    value={onePayment || \"\"} \n                    onChange={(e) => setOnePayment(e.target.value)}\n                />\n                </label>\n                <Delimiter></Delimiter>\n                <input type=\"submit\" value=\"Sätt in\" />\n            </form>\n            </StylePayment>\n\n        </Content>\n\t);\n}\n\nexport default Payment\n\n"]},"metadata":{},"sourceType":"module"}