{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //components\n\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster'; //styles\n\nimport { Style, BtnStyle } from './Form.styles';\nimport scooter from '../../images/scooter.png';\nimport useSwr from \"swr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n}; // style annorlunda jmf med komponenter. Se form.styles,  \n\nexport default function MapContainer() {\n  _s();\n\n  const {\n    location,\n    err\n  } = useCurrentLocation(options);\n  console.log(location);\n  const mapRef = useRef();\n  return /*#__PURE__*/_jsxDEV(Style, {\n    children: location ? /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      },\n      defaultCenter: {\n        lat: location.latitude,\n        lng: location.longitude\n      },\n      defaultZoom: 4,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref => {\n        let {\n          map\n        } = _ref;\n        mapRef.current = map;\n      },\n      onChange: _ref2 => {\n        let {\n          zoom,\n          bounds\n        } = _ref2;\n        setZoom(zoom);\n        setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n      },\n      children: clusters.map(cluster => {\n        const [longitude, latitude] = cluster.geometry.coordinates;\n        const {\n          cluster: isCluster,\n          point_count: pointCount\n        } = cluster.properties;\n\n        if (isCluster) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            lat: latitude,\n            lng: longitude,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cluster-marker\",\n              style: {\n                width: `${10 + pointCount / points.length * 20}px`,\n                height: `${10 + pointCount / points.length * 20}px`\n              },\n              onClick: () => {\n                const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 30);\n                mapRef.current.setZoom(expansionZoom); //zoomar in om man klickar på en cluster\n\n                mapRef.current.panTo({\n                  lat: latitude,\n                  lng: longitude\n                }); //sätter zoom till rätt koordinat\n              },\n              children: pointCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this)\n          }, cluster.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          lat: latitude,\n          lng: longitude,\n          children: /*#__PURE__*/_jsxDEV(BtnStyle, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                /*#__PURE__*/\n                _jsxDEV(\"div\", {\n                  children: \"HEJ\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 9\n                }, this);\n              },\n              className: \"crime-marker\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"scooter\",\n                src: scooter,\n                alt: \"scooter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 6\n          }, this)\n        }, cluster.properties.crimeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"j01HGJfwEP14qCyajit6qxHC7Ts=\", false, function () {\n  return [useCurrentLocation];\n});\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","useCurrentLocation","useSuperCluster","Style","BtnStyle","scooter","useSwr","options","enableHighAccuracy","timeout","maximumAge","MapContainer","location","err","console","log","mapRef","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","lat","latitude","lng","longitude","map","current","zoom","bounds","setZoom","setBounds","nw","se","clusters","cluster","geometry","coordinates","isCluster","point_count","pointCount","properties","width","points","length","height","expansionZoom","Math","min","supercluster","getClusterExpansionZoom","id","panTo","crimeId"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster';\n//styles\nimport {Style, BtnStyle} from './Form.styles'\nimport scooter from '../../images/scooter.png'\nimport useSwr from \"swr\";\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n  };\n\n\n\n// style annorlunda jmf med komponenter. Se form.styles,  \nexport default function MapContainer() {\n\tconst { location, err } = useCurrentLocation(options);\n\tconsole.log(location)\n\n\tconst mapRef = useRef();\n\t\n\treturn (\n\t\t<Style>\n\t\t\t{location ? (\n\n\t\t\t<GoogleMapReact \n\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\tdefaultCenter={{ lat: location.latitude, lng: location.longitude}}\n\t\t\t\tdefaultZoom={4}\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\tonGoogleApiLoaded= {({map}) => {\n\t\t\t\t\tmapRef.current = map;\n\t\t\t\t}}\n\t\t\t\tonChange={({zoom, bounds}) => {\n\t\t\t\t\tsetZoom(zoom)\n\t\t\t\t\tsetBounds([\n\t\t\t\t\t\tbounds.nw.lng,\n\t\t\t\t\t\tbounds.se.lat,\n\t\t\t\t\t\tbounds.se.lng,\n\t\t\t\t\t\tbounds.nw.lat\n\t\t\t\t\t])\n\t\t\t\t}}\n\t\t\t\t\n\t\t\t>\n\t\t\t{clusters.map(cluster => {\n\t\t\t\tconst[longitude, latitude] = cluster.geometry.coordinates;\n\t\t\t\tconst {cluster : isCluster, point_count: pointCount} = cluster.properties;\n\t\t\t\tif (isCluster) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Marker key={cluster.id} \n\t\t\t\t\t\t\tlat={latitude} \n\t\t\t\t\t\t\tlng={longitude}>\n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tclassName=\"cluster-marker\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: `${10 + (pointCount/points.length)* 20}px`,\n\t\t\t\t\t\t\t\t\t\theight: `${10 + (pointCount/points.length)* 20}px`\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick= {() => {\n\t\t\t\t\t\t\t\t\t\tconst expansionZoom = Math.min(\n\t\t\t\t\t\t\t\t\t\t\tsupercluster.getClusterExpansionZoom(cluster.id),\n\t\t\t\t\t\t\t\t\t\t\t30\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tmapRef.current.setZoom(expansionZoom) //zoomar in om man klickar på en cluster\n\t\t\t\t\t\t\t\t\t\tmapRef.current.panTo({lat: latitude, lng: longitude});  //sätter zoom till rätt koordinat\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{pointCount}</div>\n\t\t\t\t\t\t</Marker>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t<Marker \n\t\t\t\t\tkey={cluster.properties.crimeId} \n\t\t\t\t\tlat={latitude} \n\t\t\t\t\tlng={longitude}>\n\t\t\t\t\t\t\n\t\t\t\t\t<BtnStyle>\n\t\t\t\t\t\t<button onClick= {() => {\n\t\t\t\t\t\t\t\t<div>HEJ</div>\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"crime-marker\">\n\t\t\t\t\t\t\t<img className = \"scooter\" src={scooter} alt=\"scooter\"/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</BtnStyle>\n\t\t\t\t</Marker>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t\n\t\t\t</GoogleMapReact>\n\t\t\t\n\t\t\t):(<p>Loading...</p> )}\n\t\t</Style>\t\n\n\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}