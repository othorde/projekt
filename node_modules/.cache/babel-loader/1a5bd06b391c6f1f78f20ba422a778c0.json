{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\MoveBike\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoveBike(props) {\n  _s();\n\n  const [colorCharg_post, setColorCharg_post] = useState([]);\n  const [moveBikeTo, setMoveBikeTo] = useState(\"\");\n  console.log(props); // Här måste jag hämta på riktigt, nu laddas endast hårdkodade värde in\n\n  async function getLoadStationsForMovingBike() {\n    let citys = await Api.getAllCitys();\n    citys.forEach(city => {\n      console.log(city);\n      city.charging_posts.map(chargePost => {\n        setColorCharg_post([\"red\", \"green\", \"purple\"]);\n      });\n    });\n  } // Vad behöver uppdateras?\n  // Scooterns plats ny long lat\n  // Uppdatera hur många som finns i föregående zon\n  // uppdatera hur många som finns i den nya zonen\n\n\n  const handleSubmit = () => {\n    if (moveBikeTo != \"noValue\") {\n      // var lat = 59.2933 + (Math.random() * (59.3831 -59.2933)); // lat = y\n      // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n      // var lat = y_min + (Math.random() * (y_max - y_min)); // lat = y\n      // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n      console.log(\"MOVE BIKE \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: getLoadStationsForMovingBike,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"bbb\",\n      \"data-testid\": \"dropdown\",\n      onChange: e => {\n        setMoveBikeTo(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'noValue',\n        children: \"-- V\\xE4lj vart cykeln ska f\\xF6rflyttas --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), colorCharg_post.map(color => color !== null && /*#__PURE__*/_jsxDEV(\"option\", {\n        value: color,\n        children: color + \" zon\"\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \" F\\xF6rflytta cykel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoveBike, \"jxeIjUw95/RuxSxL8SmRO0yNm+o=\");\n\n_c = MoveBike;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveBike\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/MoveBike/index.js"],"names":["React","useState","Api","MoveBike","props","colorCharg_post","setColorCharg_post","moveBikeTo","setMoveBikeTo","console","log","getLoadStationsForMovingBike","citys","getAllCitys","forEach","city","charging_posts","map","chargePost","handleSubmit","e","target","value","color"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EALoC,CAMpC;;AACA,iBAAeO,4BAAf,GAA8C;AAC1C,QAAIC,KAAK,GAAG,MAAMV,GAAG,CAACW,WAAJ,EAAlB;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAA,MAAAA,IAAI,CAACC,cAAL,CAAoBC,GAApB,CAAwBC,UAAU,IAAI;AAClCZ,QAAAA,kBAAkB,CAAC,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,CAAD,CAAlB;AACH,OAFD;AAGH,KALD;AAMH,GAfmC,CAkBpC;AACA;AACA;AACA;;;AACA,QAAMa,YAAY,GAAG,MAAM;AACvB,QAAIZ,UAAU,IAAI,SAAlB,EAA6B;AAGzB;AACA;AAIA;AACA;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AACJ,GAjBD;;AAmBH,sBACO;AAAK,IAAA,OAAO,EAAIC,4BAAhB;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAmB,qBAAY,UAA/B;AAA0C,MAAA,QAAQ,EAAGS,CAAD,IAAO;AAC3DZ,QAAAA,aAAa,CAAEY,CAAC,CAACC,MAAF,CAASC,KAAX,CAAb;AACC,OAFD;AAAA,8BAGI;AAAQ,QAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKjB,eAAe,CAACY,GAAhB,CAAoBM,KAAK,IAAIA,KAAK,KAAK,IAAV,iBAC1B;AAEI,QAAA,KAAK,EAAEA,KAFX;AAAA,kBAIKA,KAAK,GAAG;AAJb,SACSA,KADT;AAAA;AAAA;AAAA;AAAA,cADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAA,mCAAM;AAAQ,QAAA,OAAO,EAAEJ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAiBA;;GA1DuBhB,Q;;KAAAA,Q","sourcesContent":["import {React, useState} from \"react\";\nimport Api from \"../../api\";\nexport default function MoveBike(props) {\n\n    const [colorCharg_post, setColorCharg_post] = useState([])\n    const [moveBikeTo, setMoveBikeTo] = useState(\"\")\n\n    console.log(props)\n    // Här måste jag hämta på riktigt, nu laddas endast hårdkodade värde in\n    async function getLoadStationsForMovingBike() {\n        let citys = await Api.getAllCitys();\n        citys.forEach(city => { \n            console.log(city)\n            city.charging_posts.map(chargePost => {\n                setColorCharg_post([\"red\", \"green\", \"purple\"])\n            })\n        })\n    }\n\n\n    // Vad behöver uppdateras?\n    // Scooterns plats ny long lat\n    // Uppdatera hur många som finns i föregående zon\n    // uppdatera hur många som finns i den nya zonen\n    const handleSubmit = () => {\n        if (moveBikeTo != \"noValue\") {\n\n              \n            // var lat = 59.2933 + (Math.random() * (59.3831 -59.2933)); // lat = y\n            // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n\n\n\n            // var lat = y_min + (Math.random() * (y_max - y_min)); // lat = y\n            // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n\n            \n\n\n            console.log(\"MOVE BIKE \")\n        }\n    }\n\n\treturn (\n        <div onClick = {getLoadStationsForMovingBike}>\n            <select name=\"bbb\" data-testid=\"dropdown\" onChange={(e) => {\n            setMoveBikeTo((e.target.value))\n            }}>\n                <option value={'noValue'}>-- Välj vart cykeln ska förflyttas --</option>\n                {colorCharg_post.map(color => color !== null &&\n                    <option \n                        key={color}\n                        value={color}\n                        >\n                        {color + \" zon\"}\n                    </option> )}\n            </select>\n            <div> <button onClick={handleSubmit}> Förflytta cykel </button> </div>\n        </div>\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}