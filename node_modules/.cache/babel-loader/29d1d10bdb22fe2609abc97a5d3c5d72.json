{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\MapForUser\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //components\n//styles & img\n\nimport { Style } from './Form.styles';\nimport person from '../../images/person.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapContainer(_ref) {\n  _s();\n\n  let {\n    showMapForUser\n  } = _ref;\n\n  const Marker = _ref2 => {\n    let {\n      children\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }, this);\n  };\n\n  const mapRef = useRef();\n  const [coordinates, setCoordinates] = useState({\n    start: {},\n    stop: {}\n  });\n  useEffect(async () => {\n    function setCoord() {\n      setCoordinates({\n        startLat: parseFloat(props.showMapForUser.startCoord[0]),\n        startLng: parseFloat(props.showMapForUser.startCoord[1]),\n        stopLat: parseFloat(props.showMapForUser.stopCoord[0]),\n        stopLng: parseFloat(props.showMapForUser.stopCoord[1])\n      });\n    }\n\n    setCoord();\n  }, []);\n\n  function placePolyLine() {\n    const polyCoordinates = [{\n      lat: coordinates.startLat,\n      lng: coordinates.startLng\n    }, {\n      lat: coordinates.stopLat,\n      lng: coordinates.stopLng\n    }];\n    const lineSymbol = {\n      path: mapRef.current.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n      strokeColor: \"#DC143C\",\n      scale: 4\n    };\n    const polyLine = new mapRef.current.maps.Polyline({\n      path: polyCoordinates,\n      icons: [{\n        icon: lineSymbol,\n        offset: \"100%\"\n      }],\n      geodesic: true,\n      strokeColor: \"black\",\n      strokeOpacity: 1.0,\n      strokeWeight: 2\n    });\n    polyLine.setMap(mapRef.current.map);\n    animateCircle(polyLine);\n  }\n\n  function animateCircle(polyLine) {\n    let count = 0;\n    window.setInterval(() => {\n      count = (count + 1) % 200;\n      const icons = polyLine.get(\"icons\");\n      icons[0].offset = count / 2 + \"%\";\n      polyLine.set(\"icons\", icons);\n    }, 20);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Style, {\n    children: coordinates ? /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      },\n      defaultCenter: {\n        lat: coordinates.startLat,\n        lng: coordinates.startLng\n      },\n      defaultZoom: 15,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref3 => {\n        let {\n          map,\n          maps\n        } = _ref3;\n        mapRef.current = {\n          map,\n          maps\n        };\n        placePolyLine();\n      },\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        lat: coordinates.startLat,\n        lng: coordinates.startLng,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"crime-marker\",\n            src: person,\n            alt: \"person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }, this)\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"n+pkZBsNlM9ufocGhSY4XnqFoho=\");\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/MapForUser/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","Style","person","MapContainer","showMapForUser","Marker","children","mapRef","coordinates","setCoordinates","start","stop","setCoord","startLat","parseFloat","props","startCoord","startLng","stopLat","stopCoord","stopLng","placePolyLine","polyCoordinates","lat","lng","lineSymbol","path","current","maps","SymbolPath","FORWARD_CLOSED_ARROW","strokeColor","scale","polyLine","Polyline","icons","icon","offset","geodesic","strokeOpacity","strokeWeight","setMap","map","animateCircle","count","window","setInterval","get","set","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\n\n//styles & img\nimport {Style} from './Form.styles'\nimport person from '../../images/person.png'\n\nexport default function MapContainer({showMapForUser}) {\n\n\tconst Marker = ({ children }) => <div>{children}</div>;\n\tconst mapRef = useRef();\n\tconst [coordinates, setCoordinates] = useState({start: {}, stop: {}})\n\n\tuseEffect(async() => {\n\t\tfunction setCoord () {\n\t\t\tsetCoordinates({\n\t\t\t\tstartLat: parseFloat(props.showMapForUser.startCoord[0]),\n\t\t\t\tstartLng: parseFloat(props.showMapForUser.startCoord[1]),\n\t\t\t\tstopLat: parseFloat(props.showMapForUser.stopCoord[0]),\n\t\t\t\tstopLng: parseFloat(props.showMapForUser.stopCoord[1]),\n\t\t\t})\n\t\t}\n\t\tsetCoord()\n\t}, [])\n\n\n\tfunction placePolyLine() {\n\t\t\n\t\tconst polyCoordinates = [\n\t\t  { lat: coordinates.startLat, lng: coordinates.startLng },\n\t\t  { lat: coordinates.stopLat, lng: coordinates.stopLng },\n\t\t];\n\n\t\tconst lineSymbol = {\n\t\tpath: mapRef.current.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n\t\tstrokeColor: \"#DC143C\",\n\t\tscale: 4,\n\t\t  };\n\t\tconst polyLine = new mapRef.current.maps.Polyline({\n\t\t  path: polyCoordinates,\n\t\t  icons:[{\n\t\t\t  \ticon: lineSymbol,\n\t\t\t\toffset: \"100%\",\n\t\t\t}],\n\t\t  geodesic: true,\n\t\t  strokeColor: \"black\",\n\t\t  strokeOpacity: 1.0,\n\t\t  strokeWeight: 2,\n\t\t});\n\t\tpolyLine.setMap(mapRef.current.map);\n\t\tanimateCircle(polyLine);\n\n\t}\n\n\n\tfunction animateCircle(polyLine) {\n\t\tlet count = 0;\n\t  \n\t\twindow.setInterval(() => {\n\t\t  count = (count + 1) % 200;\n\t\t  const icons = polyLine.get(\"icons\");\n\t\t  icons[0].offset = count / 2 + \"%\";\n\t\t  polyLine.set(\"icons\", icons);\n\t\t}, 20);\n\t  }\n\t  \n\n\treturn (\n\t\t<Style>\n\t\t\t{coordinates ? \n\t\t\t<GoogleMapReact \n\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\tdefaultCenter={{ \n\t\t\t\t\tlat: coordinates.startLat, \n\t\t\t\t\tlng: coordinates.startLng\n\t\t\t\t}}\n\t\t\t\tdefaultZoom={15}\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\tonGoogleApiLoaded= {({map, maps}) => {\n\t\t\t\t\tmapRef.current = {map, maps};\n\t\t\t\t\tplacePolyLine()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t<Marker\n\t\t\t\tkey={1} \n\t\t\t\tlat={coordinates.startLat}\n\t\t\t\tlng={coordinates.startLng}\n\t\t\t>\n\t\t\t\t<div >\n\t\t\t\t\t<img className = \"crime-marker\" src={person} alt=\"person\" />\n\t\t\t\t</div>\t\n\t\t\t</Marker>\n\t\t\t</GoogleMapReact>\n\t\t\t: null}\n\t\t</Style>\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}