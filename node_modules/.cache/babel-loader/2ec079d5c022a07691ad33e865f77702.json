{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Payment\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\"; //components\n\nimport Api from \"../../api.js\"; //styles\n\nimport { Content, Delimiter, StylePayment } from \"./Form.styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  showMsgOnePay: false,\n  msg: \"\"\n};\n\nconst Payment = props => {\n  _s();\n\n  const [msgForUser, setMsgForUser] = useState(initialValue);\n  const [onePayment, setOnePayment] = useState(0);\n  const [adminOrNot, setAdminOrNot] = useState(false);\n  useEffect(() => {\n    /* Om det är admin som ska göra justeringen på saldot */\n    if (props && props.customer) {\n      setAdminOrNot(true);\n    }\n  }, [props]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let showMsgOnePay = false;\n    let msg = \"\";\n    let result;\n    let id;\n    let currentBalance;\n    let newBalance;\n\n    if (onePayment && props) {\n      id = props.customer.id; // om admin justerar blir det det belopp man skriver in.\n\n      newBalance = onePayment;\n\n      if (!adminOrNot) {\n        id = props.userDetails.data._id;\n        currentBalance = props.userDetails.data.balance;\n        newBalance = parseInt(currentBalance) + parseInt(onePayment);\n        showMsgOnePay = true;\n      }\n\n      try {\n        result = await Api.updateUserFunds(newBalance, id);\n\n        if (result === true) {\n          msgForUser.msg = \"Din insättning har gått igenom\";\n\n          if (adminOrNot) {\n            msgForUser.msg = \"Saldot är justerat\";\n          }\n        }\n      } catch (error) {\n        msgForUser.msg = \"Något gick fel. Beror på servern.\";\n      }\n    }\n\n    setMsgForUser({\n      showMsgOnePay: showMsgOnePay,\n      msg: msg\n    });\n    setOnePayment(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: /*#__PURE__*/_jsxDEV(StylePayment, {\n      children: [msgForUser.showMsgOnePay ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msgForUser.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", adminOrNot ? `VARNING! \\n Du justerar kunds saldo` : \"Sätt in valfritt belopp \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: adminOrNot ? \"Nytt saldo\" : \"Belopp att sätta in\",\n            type: \"number\",\n            name: \"onepayment\",\n            required: true,\n            value: onePayment || \"\",\n            onChange: e => setOnePayment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Delimiter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: adminOrNot ? \"Ändra saldo\" : \"Sätt in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Payment, \"iB/3o+UyJKMlEmWJMEUkPHTO49o=\");\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Payment/index.js"],"names":["React","useState","useEffect","Api","Content","Delimiter","StylePayment","initialValue","showMsgOnePay","msg","Payment","props","msgForUser","setMsgForUser","onePayment","setOnePayment","adminOrNot","setAdminOrNot","customer","handleSubmit","event","preventDefault","result","id","currentBalance","newBalance","userDetails","data","_id","balance","parseInt","updateUserFunds","error","e","target","value"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from \"react\";\n//components\nimport Api from \"../../api.js\";\n//styles\nimport { Content, Delimiter, StylePayment} from \"./Form.styles.js\";\n\nconst initialValue = {\n    showMsgOnePay: false,\n    msg: \"\"\n}\n\nconst Payment = (props) => {\n    const [msgForUser, setMsgForUser] = useState(initialValue);\n    const [onePayment, setOnePayment] = useState(0);\n    const [adminOrNot, setAdminOrNot] = useState(false);\n\n    useEffect(() => { /* Om det är admin som ska göra justeringen på saldot */\n        if (props && props.customer) {\n            setAdminOrNot(true)\n        }\n    }, [props])\n\n\n    const handleSubmit = async (event)  => {\n        event.preventDefault();\n\n        let showMsgOnePay = false;\n        let msg = \"\";\n        let result;\n        let id;\n        let currentBalance;\n        let newBalance;\n\n        if (onePayment && props) {\n            id = props.customer.id;  // om admin justerar blir det det belopp man skriver in.\n            newBalance = onePayment; \n    \n            if(!adminOrNot) {\n                id = props.userDetails.data._id;\n                currentBalance = props.userDetails.data.balance;\n                newBalance = parseInt(currentBalance) + parseInt(onePayment);\n                showMsgOnePay = true;\n            }\n\n            try {\n                result = await Api.updateUserFunds(newBalance, id);\n                if(result === true) {\n                    msgForUser.msg = \"Din insättning har gått igenom\";\n                    if(adminOrNot) {\n                        msgForUser.msg = \"Saldot är justerat\";\n                    }\n                }\n            } catch (error) {\n                msgForUser.msg = \"Något gick fel. Beror på servern.\";\n            }\n        } \n        setMsgForUser({ \n            showMsgOnePay: showMsgOnePay,\n            msg: msg,\n        })\n        setOnePayment(0);\n    }\n\n\treturn (\n        <Content>\n            <StylePayment>\n            {msgForUser.showMsgOnePay ? <p>{msgForUser.msg}</p> : (<p> {adminOrNot ? (`VARNING! \\n Du justerar kunds saldo`) : (\"Sätt in valfritt belopp \")}</p>)}\n            <form onSubmit={handleSubmit} className = \"register\">\n                <label>\n                <input\n                    placeholder={adminOrNot ? (\"Nytt saldo\") : (\"Belopp att sätta in\")}\n                    type=\"number\" \n                    name=\"onepayment\"\n                    required\n                    value={onePayment || \"\"} \n                    onChange={(e) => setOnePayment(e.target.value)}\n                />\n                </label>\n                <Delimiter></Delimiter>\n                <input type=\"submit\" value={adminOrNot ? (\"Ändra saldo\") : (\"Sätt in\")} />\n            </form>\n            </StylePayment>\n\n        </Content>\n\t);\n}\n\nexport default Payment\n\n"]},"metadata":{},"sourceType":"module"}