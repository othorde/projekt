{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //hooks\n\nimport useCurrentLocation from \"../../Hooks/useCurrentPosition\";\nimport useDisplayPolyChargeStation from \"../../Hooks/useDisplayPolyChargeStation\";\nimport useDisplayPolyParkZone from \"../../Hooks/useDisplayPolyParkZone\";\nimport useDisplayPolyCities from \"../../Hooks/useDisplayPolyCities\"; //components\n\nimport PopUp from \"../PopUp\";\nimport Logg from \"../Logg\";\nimport Loader from \"../Loader\"; //styles & img\n\nimport { Container, StyleMap, Main } from './Form.styles';\nimport bikeimg from '../../images/bike.png';\nimport personimg from '../../images/person.png';\nimport fullyChargedBike from '../../images/fullyChargedBike.png';\nimport halfChargedBike from '../../images/halfchargedbike.png';\nimport noChargeBike from '../../images/noChargeBike.png'; // options till userLocation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n};\n/* Denna komponent är kartan till admin.\n   Populerar kartan genom att hämta från api. Scootrar hämtas direkt\n   från props(Admin route). För att kunna lägga till polygons hämtas dessa med \n   Hooks, se mappen hooks.\n*/\n\nexport default function MapContainer(props) {\n  _s();\n\n  //hooks\n  const mapRef = useRef();\n  const {\n    loadStationContent\n  } = useDisplayPolyChargeStation(mapRef, props);\n  const {\n    cityContent\n  } = useDisplayPolyCities(mapRef, props);\n  const {\n    parkingZoneContent\n  } = useDisplayPolyParkZone(mapRef, props);\n  const {\n    location\n  } = useCurrentLocation(options); //State\n\n  const [scooter, setScooter] = useState([]);\n  const [PopupInfo, setPopupInfo] = useState(null); ///Variabel\n\n  const loadScooters = props.ifToShowScooter;\n  const ScooterArray = props.ifToShowScooter.content; // Marker på kartan 1 person\n\n  const Marker = _ref => {\n    let {\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 35\n    }, this);\n  };\n  /*  Dessa useEffect sätter de andra värdet så att rätt info visas i rutan för innehåll (PopUp)\n  \tBeroende på vad användaren vill se.\n  */\n\n\n  useEffect(() => {\n    scooter.showScooter && setPopupInfo({\n      content: scooter.scooter,\n      whatToShow: \"Scooter\"\n    });\n  }, [scooter.showScooter, scooter, setScooter]);\n  useEffect(() => {\n    loadStationContent.showLoadStations && setPopupInfo({\n      content: loadStationContent.loadStations,\n      whatToShow: \"LoadStation\"\n    });\n  }, [loadStationContent.showLoadStations, loadStationContent.loadStations]);\n  useEffect(() => {\n    cityContent.showLoadCitys && setPopupInfo({\n      content: cityContent.city,\n      whatToShow: \"City\"\n    });\n  }, [cityContent.showLoadCitys, cityContent.city]);\n  useEffect(() => {\n    parkingZoneContent.showParkingZone && setPopupInfo({\n      content: parkingZoneContent.loadParkingZone,\n      whatToShow: \"ParkingZone\"\n    });\n  }, [parkingZoneContent.showParkingZone, parkingZoneContent.loadParkingZone]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(StyleMap, {\n        children: location ? /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          bootstrapURLKeys: {\n            key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n          },\n          defaultCenter: {\n            lat: location.latitude,\n            lng: location.longitude\n          },\n          defaultZoom: 10,\n          yesIWantToUseGoogleMapApiInternals: true,\n          onGoogleApiLoaded: _ref2 => {\n            let {\n              map,\n              maps\n            } = _ref2;\n            mapRef.current = {\n              map,\n              maps\n            };\n          },\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            lat: location.latitude,\n            lng: location.longitude,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"crime-marker\",\n                src: personimg,\n                alt: \"person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 7\n            }, this)\n          }, 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 6\n          }, this), loadScooters.loadScooters && ScooterArray.map(scooter => {\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              lat: scooter.position.lat,\n              lng: scooter.position.lng,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => setScooter({\n                  scooter,\n                  showScooter: true\n                }),\n                className: \"crime-marker\",\n                children: scooter.battery < 24 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"scooter\",\n                  src: noChargeBike,\n                  alt: \"scooter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this) : scooter.battery < 75 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"scooter\",\n                  src: halfChargedBike,\n                  alt: \"scooter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"scooter\",\n                  src: fullyChargedBike,\n                  alt: \"scooter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 8\n              }, this)\n            }, scooter._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 7\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }, this), scooter || cityContent || loadStationContent ? /*#__PURE__*/_jsxDEV(PopUp, {\n        PopupInfo: PopupInfo\n      }, \"popupkey\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Logg, {\n      scooter: scooter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"vlQRUyQyILFll0WjCc2meDcHzqI=\", false, function () {\n  return [useDisplayPolyChargeStation, useDisplayPolyCities, useDisplayPolyParkZone, useCurrentLocation];\n});\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","useCurrentLocation","useDisplayPolyChargeStation","useDisplayPolyParkZone","useDisplayPolyCities","PopUp","Logg","Loader","Container","StyleMap","Main","bikeimg","personimg","fullyChargedBike","halfChargedBike","noChargeBike","options","enableHighAccuracy","timeout","maximumAge","MapContainer","props","mapRef","loadStationContent","cityContent","parkingZoneContent","location","scooter","setScooter","PopupInfo","setPopupInfo","loadScooters","ifToShowScooter","ScooterArray","content","Marker","children","showScooter","whatToShow","showLoadStations","loadStations","showLoadCitys","city","showParkingZone","loadParkingZone","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","lat","latitude","lng","longitude","map","maps","current","position","battery","_id"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAkD,OAAlD,C,CACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,2BAAP,MAAwC,yCAAxC;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;AACA,OAAOC,oBAAP,MAAiC,kCAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA4BC,IAA5B,QAAuC,eAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB,C,CAEA;;;AACA,MAAMC,OAAO,GAAG;AACfC,EAAAA,kBAAkB,EAAE,IADL;AAEfC,EAAAA,OAAO,EAAE,OAAO,EAAP,GAAY,CAFN;AAES;AACxBC,EAAAA,UAAU,EAAE,OAAO,EAAP,GAAY,EAHT,CAGa;;AAHb,CAAhB;AAMA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3C;AACA,QAAMC,MAAM,GAAGvB,MAAM,EAArB;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAyBrB,2BAA2B,CAACoB,MAAD,EAASD,KAAT,CAA1D;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBpB,oBAAoB,CAACkB,MAAD,EAASD,KAAT,CAA5C;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAyBtB,sBAAsB,CAACmB,MAAD,EAASD,KAAT,CAArD;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAezB,kBAAkB,CAACe,OAAD,CAAvC,CAN2C,CAO3C;;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,IAAD,CAA1C,CAT2C,CAU3C;;AACA,QAAMiC,YAAY,GAAGV,KAAK,CAACW,eAA3B;AACA,QAAMC,YAAY,GAAGZ,KAAK,CAACW,eAAN,CAAsBE,OAA3C,CAZ2C,CAa3C;;AACA,QAAMC,MAAM,GAAG;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,wBAAkB;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAlB;AAAA,GAAf;AAEA;AACD;AACA;;;AACCvC,EAAAA,SAAS,CAAC,MAAM;AACf8B,IAAAA,OAAO,CAACU,WAAR,IAAuBP,YAAY,CAAC;AAACI,MAAAA,OAAO,EAAEP,OAAO,CAACA,OAAlB;AAA2BW,MAAAA,UAAU,EAAE;AAAvC,KAAD,CAAnC;AACA,GAFQ,EAEP,CAACX,OAAO,CAACU,WAAT,EAAsBV,OAAtB,EAA+BC,UAA/B,CAFO,CAAT;AAIA/B,EAAAA,SAAS,CAAC,MAAM;AACf0B,IAAAA,kBAAkB,CAACgB,gBAAnB,IAAuCT,YAAY,CAAC;AAACI,MAAAA,OAAO,EAAEX,kBAAkB,CAACiB,YAA7B;AAA2CF,MAAAA,UAAU,EAAE;AAAvD,KAAD,CAAnD;AACA,GAFQ,EAEP,CAACf,kBAAkB,CAACgB,gBAApB,EAAsChB,kBAAkB,CAACiB,YAAzD,CAFO,CAAT;AAIA3C,EAAAA,SAAS,CAAC,MAAM;AACf2B,IAAAA,WAAW,CAACiB,aAAZ,IAA6BX,YAAY,CAAC;AAACI,MAAAA,OAAO,EAAEV,WAAW,CAACkB,IAAtB;AAA4BJ,MAAAA,UAAU,EAAE;AAAxC,KAAD,CAAzC;AACA,GAFQ,EAEP,CAACd,WAAW,CAACiB,aAAb,EAA4BjB,WAAW,CAACkB,IAAxC,CAFO,CAAT;AAIA7C,EAAAA,SAAS,CAAC,MAAM;AACf4B,IAAAA,kBAAkB,CAACkB,eAAnB,IAAsCb,YAAY,CAAC;AAACI,MAAAA,OAAO,EAAET,kBAAkB,CAACmB,eAA7B;AAA8CN,MAAAA,UAAU,EAAE;AAA1D,KAAD,CAAlD;AACA,GAFQ,EAEP,CAACb,kBAAkB,CAACkB,eAApB,EAAqClB,kBAAkB,CAACmB,eAAxD,CAFO,CAAT;AAIA,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACA,QAAC,QAAD;AAAA,kBAEElB,QAAQ,gBACT,QAAC,cAAD;AACC,UAAA,gBAAgB,EAAE;AAACmB,YAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAlB,WADnB;AAEC,UAAA,aAAa,EAAE;AAAEC,YAAAA,GAAG,EAAEvB,QAAQ,CAACwB,QAAhB;AAA0BC,YAAAA,GAAG,EAAEzB,QAAQ,CAAC0B;AAAxC,WAFhB;AAGC,UAAA,WAAW,EAAE,EAHd;AAIC,UAAA,kCAAkC,MAJnC;AAKC,UAAA,iBAAiB,EAAG,SAAiB;AAAA,gBAAhB;AAACC,cAAAA,GAAD;AAAMC,cAAAA;AAAN,aAAgB;AACpChC,YAAAA,MAAM,CAACiC,OAAP,GAAiB;AAACF,cAAAA,GAAD;AAAMC,cAAAA;AAAN,aAAjB;AACA,WAPF;AAAA,kCAUC,QAAC,MAAD;AAEC,YAAA,GAAG,EAAE5B,QAAQ,CAACwB,QAFf;AAGC,YAAA,GAAG,EAAExB,QAAQ,CAAC0B,SAHf;AAAA,mCAKC;AAAA,qCACC;AAAK,gBAAA,SAAS,EAAG,cAAjB;AAAgC,gBAAA,GAAG,EAAExC,SAArC;AAAgD,gBAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AALD,aACM,CADN;AAAA;AAAA;AAAA;AAAA,kBAVD,EAqBEmB,YAAY,CAACA,YAAb,IACDE,YAAY,CAACoB,GAAb,CAAiB1B,OAAO,IAAI;AAC3B,gCACA,QAAC,MAAD;AAEC,cAAA,GAAG,EAAEA,OAAO,CAAC6B,QAAR,CAAiBP,GAFvB;AAGC,cAAA,GAAG,EAAEtB,OAAO,CAAC6B,QAAR,CAAiBL,GAHvB;AAAA,qCAKC;AAAK,gBAAA,OAAO,EAAE,MAAMvB,UAAU,CAAC;AAACD,kBAAAA,OAAD;AAAUU,kBAAAA,WAAW,EAAE;AAAvB,iBAAD,CAA9B;AAA6D,gBAAA,SAAS,EAAC,cAAvE;AAAA,0BAGCV,OAAO,CAAC8B,OAAR,GAAkB,EAAlB,gBAAwB;AAAK,kBAAA,SAAS,EAAG,SAAjB;AAA2B,kBAAA,GAAG,EAAE1C,YAAhC;AAA8C,kBAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,wBAAxB,GACEY,OAAO,CAAC8B,OAAR,GAAkB,EAAlB,gBAAwB;AAAK,kBAAA,SAAS,EAAG,SAAjB;AAA2B,kBAAA,GAAG,EAAE3C,eAAhC;AAAiD,kBAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,wBAAxB,gBACA;AAAK,kBAAA,SAAS,EAAG,SAAjB;AAA2B,kBAAA,GAAG,EAAED,gBAAhC;AAAkD,kBAAA,GAAG,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AALH;AAAA;AAAA;AAAA;AAAA;AALD,eACMc,OAAO,CAAC+B,GADd;AAAA;AAAA;AAAA;AAAA,oBADA;AAeC,WAhBF,CAtBD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS,gBA0CN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AA5CJ;AAAA;AAAA;AAAA;AAAA,cADA,EAiDC/B,OAAO,IAAIH,WAAX,IAA0BD,kBAA1B,gBACA,QAAC,KAAD;AAAwB,QAAA,SAAS,EAAEM;AAAnC,SAAY,UAAZ;AAAA;AAAA;AAAA;AAAA,cADA,GAEG,IAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAsDC,QAAC,IAAD;AAAM,MAAA,OAAO,EAAGF;AAAhB;AAAA;AAAA;AAAA;AAAA,YAtDD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0DA;;GA7FuBP,Y;UAGQlB,2B,EACPE,oB,EACOD,sB,EACVF,kB;;;KANEmB,Y","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//hooks\nimport useCurrentLocation from \"../../Hooks/useCurrentPosition\";\nimport useDisplayPolyChargeStation from \"../../Hooks/useDisplayPolyChargeStation\";\nimport useDisplayPolyParkZone from \"../../Hooks/useDisplayPolyParkZone\";\nimport useDisplayPolyCities from \"../../Hooks/useDisplayPolyCities\";\n//components\nimport PopUp from \"../PopUp\";\nimport Logg from \"../Logg\";\nimport Loader from \"../Loader\"\n//styles & img\nimport {Container,StyleMap, Main} from './Form.styles'\nimport bikeimg from '../../images/bike.png'\nimport personimg from '../../images/person.png'\nimport fullyChargedBike from '../../images/fullyChargedBike.png';\nimport halfChargedBike from '../../images/halfchargedbike.png';\nimport noChargeBike from '../../images/noChargeBike.png';\n\n// options till userLocation\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n};\n\n/* Denna komponent är kartan till admin.\n   Populerar kartan genom att hämta från api. Scootrar hämtas direkt\n   från props(Admin route). För att kunna lägga till polygons hämtas dessa med \n   Hooks, se mappen hooks.\n*/\nexport default function MapContainer(props) {\n\t//hooks\n\tconst mapRef = useRef();\n\tconst { loadStationContent } = useDisplayPolyChargeStation(mapRef, props);\n\tconst { cityContent } = useDisplayPolyCities(mapRef, props);\n\tconst { parkingZoneContent } = useDisplayPolyParkZone(mapRef, props);\n\tconst { location } = useCurrentLocation(options);\n\t//State\n\tconst [scooter, setScooter] = useState([]);\n\tconst [PopupInfo, setPopupInfo] = useState(null);\n\t///Variabel\n\tconst loadScooters = props.ifToShowScooter;\n\tconst ScooterArray = props.ifToShowScooter.content;\n\t// Marker på kartan 1 person\n\tconst Marker = ({ children }) => <div>{children}</div>;\n\n\t/*  Dessa useEffect sätter de andra värdet så att rätt info visas i rutan för innehåll (PopUp)\n\t\tBeroende på vad användaren vill se.\n\t*/ \n\tuseEffect(() => {\n\t\tscooter.showScooter && setPopupInfo({content: scooter.scooter, whatToShow: \"Scooter\"});\n\t},[scooter.showScooter, scooter, setScooter])\n\n\tuseEffect(() => {\n\t\tloadStationContent.showLoadStations && setPopupInfo({content: loadStationContent.loadStations, whatToShow: \"LoadStation\"});\n\t},[loadStationContent.showLoadStations, loadStationContent.loadStations])\n\n\tuseEffect(() => {\n\t\tcityContent.showLoadCitys && setPopupInfo({content: cityContent.city, whatToShow: \"City\"});\n\t},[cityContent.showLoadCitys, cityContent.city])\n\n\tuseEffect(() => {\n\t\tparkingZoneContent.showParkingZone && setPopupInfo({content: parkingZoneContent.loadParkingZone, whatToShow: \"ParkingZone\"});\n\t},[parkingZoneContent.showParkingZone, parkingZoneContent.loadParkingZone])\n\n\treturn (\n\t\t<Container>\n\t\t\t<Main> \n\t\t\t<StyleMap>\n\t\t\t\t{/* Visar karta */}\n\t\t\t\t{location ? (\n\t\t\t\t<GoogleMapReact \n\t\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\t\tdefaultCenter={{ lat: location.latitude, lng: location.longitude}}\n\t\t\t\t\tdefaultZoom={10}\n\t\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\t\tonGoogleApiLoaded= {({map, maps}) => {\n\t\t\t\t\t\tmapRef.current = {map, maps};\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{/*Visar användaren på kartan */}\n\t\t\t\t\t<Marker \n\t\t\t\t\t\tkey={1} \n\t\t\t\t\t\tlat={location.latitude} \n\t\t\t\t\t\tlng={location.longitude}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<img className = \"crime-marker\" src={personimg} alt=\"person\" />\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t</Marker>\n\n\t\t\t\t\t{/*Visar alla scootrar*/}\n\t\t\t\t\t{loadScooters.loadScooters && (\n\t\t\t\t\tScooterArray.map(scooter => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t<Marker \n\t\t\t\t\t\t\tkey={scooter._id} \n\t\t\t\t\t\t\tlat={scooter.position.lat} \n\t\t\t\t\t\t\tlng={scooter.position.lng}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div onClick={() => setScooter({scooter, showScooter: true})}className=\"crime-marker\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\tscooter.battery < 24  ? <img className = \"scooter\" src={noChargeBike} alt=\"scooter\"/> \n\t\t\t\t\t\t\t\t: scooter.battery < 75  ? <img className = \"scooter\" src={halfChargedBike} alt=\"scooter\"/> \n\t\t\t\t\t\t\t\t: <img className = \"scooter\" src={fullyChargedBike} alt=\"scooter\"/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Marker>)\n\t\t\t\t\t\t})\n\t\t\t\t\t)}\n\t\t\t\t</GoogleMapReact>\n\t\t\t\t):(<Loader/> )}\n\t\t\t</StyleMap>\n\n\t\t\t{/*Visar POPUP fönster, info skickas hit beroende på vad användaren vill se*/}\n\t\t\t{scooter || cityContent || loadStationContent ? (\n\t\t\t\t<PopUp key={\"popupkey\"} PopupInfo={PopupInfo}></PopUp>\n\t\t\t): (null) }\n\t\t\t</Main>\n\t\t\t<Logg scooter= {scooter}/>\t\n\t\t</Container>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}