{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\popup.js\",\n    _s = $RefreshSig$();\n\n//  fungerar som REACt component till kartan\n// import React from \"react\";\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n// export default PopUp;\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //components\n\nimport useCurrentLocation from \"../../Hooks/currentPosition\"; //styles\n\nimport { Style, BtnStyle } from './Form.styles';\nimport bikeimg from '../../images/bike.png';\nimport personimg from '../../images/person.png';\nimport PopUp from \"./popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n};\nexport default function MapContainer(props) {\n  _s();\n\n  const {\n    location,\n    err\n  } = useCurrentLocation(options);\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null);\n  const showBikesOrNot = props.bikes.getbike;\n  var bikeArray = props.bikes.content;\n  bikeArray = bikeArray.slice(0, 200); // innan jag fixar med cluster\n  //const Marker = ({children}) => children;\n\n  const [popupInfo, setPopupInfo] = useState(\"\");\n\n  const Marker = _ref => {\n    let {\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 35\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Style, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"FjUY3q5psQWsGht+RXfWHmLXO6Y=\", false, function () {\n  return [useCurrentLocation];\n});\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/popup.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","useCurrentLocation","Style","BtnStyle","bikeimg","personimg","PopUp","options","enableHighAccuracy","timeout","maximumAge","MapContainer","props","location","err","mapRef","zoom","setZoom","bounds","setBounds","showBikesOrNot","bikes","getbike","bikeArray","content","slice","popupInfo","setPopupInfo","Marker","children"],"mappings":";;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAkD,OAAlD,C,CACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,6BAA/B,C,CACA;;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,eAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAIA,MAAMC,OAAO,GAAG;AACfC,EAAAA,kBAAkB,EAAE,IADL;AAEfC,EAAAA,OAAO,EAAE,OAAO,EAAP,GAAY,CAFN;AAES;AACxBC,EAAAA,UAAU,EAAE,OAAO,EAAP,GAAY,EAHT,CAGa;;AAHb,CAAhB;AAMA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAoBb,kBAAkB,CAACM,OAAD,CAA5C;AACA,QAAMQ,MAAM,GAAGhB,MAAM,EAArB;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMsB,cAAc,GAAGR,KAAK,CAACS,KAAN,CAAYC,OAAnC;AACA,MAAIC,SAAS,GAAGX,KAAK,CAACS,KAAN,CAAYG,OAA5B;AACAD,EAAAA,SAAS,GAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,GAAnB,CAAb,CAP2C,CAOL;AACtC;;AACA,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA6B7B,QAAQ,CAAC,EAAD,CAA3C;;AAIA,QAAM8B,MAAM,GAAG;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,wBAAkB;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAlB;AAAA,GAAf;;AAKA,sBACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;GAzBuBlB,Y;UACGV,kB;;;KADHU,Y","sourcesContent":["\n//  fungerar som REACt component till kartan\n\n// import React from \"react\";\n\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n\n// export default PopUp;\n\n\nimport {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\n//styles\nimport {Style, BtnStyle} from './Form.styles'\nimport bikeimg from '../../images/bike.png'\nimport personimg from '../../images/person.png'\nimport PopUp from \"./popup\";\n\n\n\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n  };\n\nexport default function MapContainer(props) {\n\tconst { location, err } = useCurrentLocation(options);\n\tconst mapRef = useRef();\n\tconst [zoom, setZoom] = useState(10);\n\tconst [bounds, setBounds] = useState(null);\n\tconst showBikesOrNot = props.bikes.getbike;\n\tvar bikeArray = props.bikes.content;\n\tbikeArray =  bikeArray.slice(0, 200); // innan jag fixar med cluster\n\t//const Marker = ({children}) => children;\n\tconst [popupInfo , setPopupInfo] = useState(\"\");\n\n\n\n\tconst Marker = ({ children }) => <div>{children}</div>;\n\n\n\n\n\treturn (\n\t\t<Style>\n\t\t\n\n\t\t</Style>\t\n\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}