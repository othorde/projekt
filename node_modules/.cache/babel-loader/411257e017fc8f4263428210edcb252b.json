{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //components\n\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster'; //styles\n\nimport { Style, BtnStyle } from './Form.styles';\nimport scooter from '../../images/scooter.png';\nimport useSwr from \"swr\";\nimport Cluster from './cluster';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n}; // style annorlunda jmf med komponenter. Se form.styles,  \n\nexport default function MapContainer() {\n  _s();\n\n  const {\n    location,\n    err\n  } = useCurrentLocation(options);\n  console.log(location);\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null);\n  const [stateForMarker, setStateForMarker] = useState(bounds, zoom, mapRef);\n  const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\";\n\n  const fetcher = function () {\n    return fetch(...arguments).then(response => response.json());\n  }; //gör om denna sen\n\n\n  const Marker = _ref => {\n    let {\n      children\n    } = _ref;\n    return children;\n  };\n\n  const {\n    data,\n    error\n  } = useSwr(url, fetcher); //gör om denna sen\n\n  const crimes = data && !error ? data : []; //clusters\n\n  return /*#__PURE__*/_jsxDEV(Style, {\n    children: location ? /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      },\n      defaultCenter: {\n        lat: location.latitude,\n        lng: location.longitude\n      },\n      defaultZoom: 4,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref2 => {\n        let {\n          map\n        } = _ref2;\n        mapRef.current = map;\n      },\n      onChange: _ref3 => {\n        let {\n          zoom,\n          bounds\n        } = _ref3;\n        setZoom(zoom);\n        setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n      },\n      children: /*#__PURE__*/_jsxDEV(Cluster, {\n        stateForMarker: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"uUd8LJ0yOKWj2wsx8gFBbK1P5EE=\", false, function () {\n  return [useCurrentLocation, useSwr];\n});\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","useCurrentLocation","useSuperCluster","Style","BtnStyle","scooter","useSwr","Cluster","options","enableHighAccuracy","timeout","maximumAge","MapContainer","location","err","console","log","mapRef","zoom","setZoom","bounds","setBounds","stateForMarker","setStateForMarker","url","fetcher","fetch","then","response","json","Marker","children","data","error","crimes","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","lat","latitude","lng","longitude","map","current","nw","se"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster';\n//styles\nimport {Style, BtnStyle} from './Form.styles'\nimport scooter from '../../images/scooter.png'\nimport useSwr from \"swr\";\nimport Cluster from './cluster';\n\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n  };\n\n\n\n// style annorlunda jmf med komponenter. Se form.styles,  \nexport default function MapContainer() {\n\tconst { location, err } = useCurrentLocation(options);\n\tconsole.log(location)\n\n\tconst mapRef = useRef();\n\tconst [zoom, setZoom] = useState(10);\n\tconst [bounds, setBounds] = useState(null);\n\tconst [stateForMarker, setStateForMarker] = useState(bounds, zoom, mapRef)\n\n\n\tconst url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n\n\tconst fetcher = (...args) => fetch(...args).then(response => response.json()); //gör om denna sen\n\tconst Marker = ({children}) => children;\n\n\tconst {data, error} = useSwr(url, fetcher) //gör om denna sen\n\tconst crimes = data && !error ? data : [];\n\n\t//clusters\n\n\treturn (\n\t\t<Style>\n\t\t\t{location ? (\n\n\t\t\t<GoogleMapReact \n\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\tdefaultCenter={{ lat: location.latitude, lng: location.longitude}}\n\t\t\t\tdefaultZoom={4}\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\tonGoogleApiLoaded= {({map}) => {\n\t\t\t\t\tmapRef.current = map;\n\t\t\t\t}}\n\t\t\t\tonChange={({zoom, bounds}) => {\n\t\t\t\t\tsetZoom(zoom)\n\t\t\t\t\tsetBounds([\n\t\t\t\t\t\tbounds.nw.lng,\n\t\t\t\t\t\tbounds.se.lat,\n\t\t\t\t\t\tbounds.se.lng,\n\t\t\t\t\t\tbounds.nw.lat\n\t\t\t\t\t])\n\t\t\t\t}}\n\t\t\t\t\n\t\t\t>\n\t\t\t<Cluster stateForMarker></Cluster>\n\t\t\t\n\t\t\t</GoogleMapReact>\n\t\t\t\n\t\t\t):(<p>Loading...</p> )}\n\t\t</Style>\t\n\n\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}