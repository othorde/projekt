{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Oauth\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Wrapper } from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config(); // clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n// clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n// accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n// authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n// redirectUri: \"http://localhost:3000/login/home\",\n// scopes: [\"identity\"],\n\n\nexport default function Logins() {\n  _s();\n\n  const [data, setData] = useState({\n    errorMessage: \"\",\n    isLoading: false\n  });\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\");\n    console.log(hasCode); // If Github API returns the code parameter\n\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      console.log((\"HÄÄÄÄÄÄÄÄR, \", hasCode));\n      window.history.pushState({}, null, newUrl[0]);\n      setData({ ...data,\n        isLoading: true\n      });\n      const requestData = {\n        client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n        client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n        code: newUrl[1],\n        redirect_uri: \"http://localhost:3000/loggin/oauth\"\n      };\n      console.log(requestData);\n      const postUrl = \"https://github.com/login/oauth/access_token\";\n\n      async function hej() {\n        const endpoint = `${postUrl}`;\n        const document = await (await fetch(endpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": \"*\"\n          },\n          body: JSON.stringify({\n            client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n            client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n            code: newUrl[1],\n            redirect_uri: \"http://localhost:3000/loggin/oauth\"\n          })\n        })).json();\n      }\n\n      fetch(postUrl, {\n        method: \"POST\",\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(error => {\n        setData({\n          isLoading: false,\n          errorMessage: \"Sorry! Login failed\"\n        });\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"HEJDU\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Logins, \"+o/aPN0HmoOh/R4RFDKbirQwrBY=\");\n\n_c = Logins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logins\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Oauth/index.js"],"names":["React","useState","useEffect","useContext","Navigate","Wrapper","AppContext","Api","require","config","Logins","data","setData","errorMessage","isLoading","url","window","location","href","hasCode","includes","console","log","newUrl","split","history","pushState","requestData","client_id","process","env","REACT_APP_GITHUB_CLIENT_ID","client_secret","REACT_APP_GITHUB_CLIENT_SECRET","code","redirect_uri","postUrl","hej","endpoint","document","fetch","method","headers","body","JSON","stringify","json","Accept","then","response","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAGI;AACA;AACA;AACA;AACA;AACA;;;AAKJ,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAAD,CAAhC;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACE,UAAMa,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,UAAMC,OAAO,GAAGJ,GAAG,CAACK,QAAJ,CAAa,QAAb,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAJY,CAMd;;AACA,QAAIA,OAAJ,EAAa;AACX,YAAMI,MAAM,GAAGR,GAAG,CAACS,KAAJ,CAAU,QAAV,CAAf;AACAH,MAAAA,OAAO,CAACC,GAAR,EAAa,gBAAgBH,OAA7B;AACAH,MAAAA,MAAM,CAACS,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,IAA7B,EAAmCH,MAAM,CAAC,CAAD,CAAzC;AACAX,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,QAAAA,SAAS,EAAE;AAAtB,OAAD,CAAP;AAGA,YAAMa,WAAW,GAAG;AAChBC,QAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADP;AAEhBC,QAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFX;AAGhBC,QAAAA,IAAI,EAAEX,MAAM,CAAC,CAAD,CAHI;AAIhBY,QAAAA,YAAY,EAAE;AAJE,OAApB;AAOAd,MAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AAEA,YAAMS,OAAO,GAAG,6CAAhB;;AAEA,qBAAeC,GAAf,GAAoB;AAEZ,cAAMC,QAAQ,GAAI,GAAEF,OAAQ,EAA5B;AACA,cAAMG,QAAQ,GAAG,MAAM,CACnB,MAAMC,KAAK,CAACF,QAAD,EAAW;AACtBG,UAAAA,MAAM,EAAE,MADc;AAEtBC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAEL,2CAA+B;AAF1B,WAFa;AAMtBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB;AAClBjB,YAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADL;AAElBC,YAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFT;AAGlBC,YAAAA,IAAI,EAAEX,MAAM,CAAC,CAAD,CAHM;AAIlBY,YAAAA,YAAY,EAAE;AAJI,WAAhB;AANgB,SAAX,CADQ,EAcrBW,IAdqB,EAAvB;AAeP;;AAEDN,MAAAA,KAAK,CAACJ,OAAD,EAAU;AACXK,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACLK,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFE;AAMXJ,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,WAAf;AANK,OAAV,CAAL,CAQKqB,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACH,IAAT,EARtB,EASKE,IATL,CASUrC,IAAI,IAAI;AACVU,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACH,OAXL,EAYKuC,KAZL,CAYWC,KAAK,IAAI;AACZvC,QAAAA,OAAO,CAAC;AACRE,UAAAA,SAAS,EAAE,KADH;AAERD,UAAAA,YAAY,EAAE;AAFN,SAAD,CAAP;AAIH,OAjBL;AAmBC;AACF,GAjEM,EAiEJ,CAACF,IAAD,CAjEI,CAAT;AAsEA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlFqBD,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport {Wrapper} from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\n\nrequire('dotenv').config()\n\n\n    // clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n    // clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n    // accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n    // authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n    // redirectUri: \"http://localhost:3000/login/home\",\n    // scopes: [\"identity\"],\n\n\n\n\nexport default function Logins() {\n    const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n\n  \n    useEffect(() => {\n      // After requesting Github access, Github redirects back to your app with a code parameter\n        const url = window.location.href;\n        const hasCode = url.includes(\"?code=\");\n        console.log(hasCode);\n\n      // If Github API returns the code parameter\n      if (hasCode) {\n        const newUrl = url.split(\"?code=\");\n        console.log((\"HÄÄÄÄÄÄÄÄR, \", hasCode))\n        window.history.pushState({}, null, newUrl[0]);\n        setData({ ...data, isLoading: true });\n\n        \n        const requestData = {\n            client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n            client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n            code: newUrl[1],\n            redirect_uri: \"http://localhost:3000/loggin/oauth\"\n        };\n        \n        console.log(requestData)\n\n        const postUrl = \"https://github.com/login/oauth/access_token\";\n\n        async function hej(){\n            \n                const endpoint = `${postUrl}`\n                const document = await (\n                    await fetch(endpoint, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        \"Access-Control-Allow-Origin\": \"*\"\n                    },\n                    body: JSON.stringify( {\n                        client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n                        client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n                        code: newUrl[1],\n                        redirect_uri: \"http://localhost:3000/loggin/oauth\"\n                        })\n                    })\n                ).json();\n        }\n\n        fetch(postUrl, {\n            method: \"POST\",\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n            })\n            .catch(error => {\n                setData({\n                isLoading: false,\n                errorMessage: \"Sorry! Login failed\"\n                });\n            }); \n            \n        }\n      }, [data]);\n\n\n  \n  \n    return (\n      <Wrapper>\n        <>\n           HEJDU\n        </>\n       \n      </Wrapper>\n    );\n  }\n  \n"]},"metadata":{},"sourceType":"module"}