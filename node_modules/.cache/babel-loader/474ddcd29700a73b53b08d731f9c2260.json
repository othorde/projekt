{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //components\n\nimport useCurrentLocation from \"../../Hooks/currentPosition\"; //styles\n\nimport { Style, BtnStyle } from './Form.styles';\nimport bikeimg from '../../images/bike.png';\nimport personimg from '../../images/person.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n};\nexport default function MapContainer(props) {\n  _s();\n\n  const {\n    location,\n    err\n  } = useCurrentLocation(options);\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null);\n  const showBikesOrNot = props.bikes.getbike;\n  var bikeArray = props.bikes.content;\n  bikeArray = bikeArray.slice(0, 200); // innan jag fixar med cluster\n\n  const Marker = _ref => {\n    let {\n      text\n    } = _ref;\n    return v;\n  };\n\n  const [mouseOverOrNot, setmouseOverOrNot] = useState(10);\n\n  const AnyReactComponent = _ref2 => {\n    let {\n      text\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }, this);\n  }; // const mouseOver = () => {\n  // \tconsole.log(\"HEJ\")\n  // \tsetmouseOverOrNot({showInfo: true})\n  // }\n\n\n  function mouseOver() {\n    console.log(\"asdsadsd\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Style, {\n    children: location ? /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      },\n      defaultCenter: {\n        lat: location.latitude,\n        lng: location.longitude\n      },\n      defaultZoom: 3,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref3 => {\n        let {\n          map\n        } = _ref3;\n        mapRef.current = map;\n      },\n      onChange: _ref4 => {\n        let {\n          zoom,\n          bounds\n        } = _ref4;\n        setZoom(zoom);\n        setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        lat: location.latitude,\n        lng: location.longitude,\n        showInfo: true,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"crime-marker\",\n          src: personimg,\n          alt: \"scooter\",\n          onClick: e => {\n            mouseOver(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this)\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }, this), showBikesOrNot ? bikeArray.map(bike => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          lat: bike.location.latitude,\n          lng: bike.location.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crime-marker\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"scooter\",\n              src: bikeimg,\n              alt: \"scooter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 5\n          }, this)\n        }, bike.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 4\n        }, this);\n      }) : console.log(\"HE\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"KmN2RDVws/wyCiKkPDmgWre78XE=\", false, function () {\n  return [useCurrentLocation];\n});\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","useCurrentLocation","Style","BtnStyle","bikeimg","personimg","options","enableHighAccuracy","timeout","maximumAge","MapContainer","props","location","err","mapRef","zoom","setZoom","bounds","setBounds","showBikesOrNot","bikes","getbike","bikeArray","content","slice","Marker","text","v","mouseOverOrNot","setmouseOverOrNot","AnyReactComponent","mouseOver","console","log","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","lat","latitude","lng","longitude","map","current","nw","se","e","bike","id"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\n//styles\nimport {Style, BtnStyle} from './Form.styles'\nimport bikeimg from '../../images/bike.png'\nimport personimg from '../../images/person.png'\n\n\n\n\n\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n  };\n\nexport default function MapContainer(props) {\n\tconst { location, err } = useCurrentLocation(options);\n\tconst mapRef = useRef();\n\tconst [zoom, setZoom] = useState(10);\n\tconst [bounds, setBounds] = useState(null);\n\tconst showBikesOrNot = props.bikes.getbike;\n\tvar bikeArray = props.bikes.content;\n\tbikeArray =  bikeArray.slice(0, 200); // innan jag fixar med cluster\n\tconst Marker = ({text}) => v;\n\tconst [mouseOverOrNot, setmouseOverOrNot] = useState(10);\n\tconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\n\t// const mouseOver = () => {\n\t// \tconsole.log(\"HEJ\")\n\t// \tsetmouseOverOrNot({showInfo: true})\n\t// }\n\tfunction mouseOver() {\n\t\tconsole.log(\"asdsadsd\")\n\n\t}\n\n\treturn (\n\t\t<Style>\n\t\t\t{location ? (\n\t\t\t<GoogleMapReact \n\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\tdefaultCenter={{ lat: location.latitude, lng: location.longitude}}\n\t\t\t\tdefaultZoom={3}\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\tonGoogleApiLoaded= {({map}) => {\n\t\t\t\t\tmapRef.current = map;\n\t\t\t\t}}\n\t\t\t\tonChange={({zoom, bounds}) => {\n\t\t\t\t\tsetZoom(zoom)\n\t\t\t\t\tsetBounds([\n\t\t\t\t\t\tbounds.nw.lng,\n\t\t\t\t\t\tbounds.se.lat,\n\t\t\t\t\t\tbounds.se.lng,\n\t\t\t\t\t\tbounds.nw.lat\n\t\t\t\t\t])\n\t\t\t\t}}\n\t\t\t\t\n\t\t\t>\n\t\t\t{/* 1 Person */}\n\t\t\t<Marker \n\t\t\t\tkey={1} \n\t\t\t\tlat={location.latitude} \n\t\t\t\tlng={location.longitude}\n\t\t\t\tshowInfo={ true}\n\t\t\t\t>\t\n\t\t\t\t<img className = \"crime-marker\" src={personimg} alt=\"scooter\" onClick= {(e) => {\n\t\t\t\t\tmouseOver(e)\n\t\t\t\t}}/>\n\t\t\t</Marker>\n\t\t\t{/* Alla cyklar */}\n\t\t\t{showBikesOrNot ? (\n\t\t\tbikeArray.map(bike => {\n\t\t\treturn (\n\t\t\t<Marker \n\t\t\t\tkey={bike.id} \n\t\t\t\tlat={bike.location.latitude} \n\t\t\t\tlng={bike.location.longitude}>\t\n\t\t\t\t<div\n\t\t\t\n\t\t\t\tclassName=\"crime-marker\">\n\t\t\t\t<img className = \"scooter\" src={bikeimg} alt=\"scooter\"/>\n\t\t\t\t</div>\n\t\t\t</Marker>\n\t\t\t)\n\t\t\t})\n\t\t\t) : (console.log(\"HE\"))}\n\t\t\t\n\t\t\t</GoogleMapReact>\n\t\t\t):(<p>Loading...</p> )}\n\t\t</Style>\t\n\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}