{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\History\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\"; //components\n\nimport MapForUser from '../../components/MapForUser/index';\nimport Loader from '../../components/Loader'; // hook\n\nimport { useFetchAUser } from '../../Hooks/useFetchAUser';\nimport { useFetchAllCities } from '../../Hooks/useFetchAllCities'; //styles\n\nimport { Container, Main, UserHistory, MapContainer } from './Form.styles'; //other\n\nimport { checkIfCoordInParkingZone, checkIfCoordInChargingPost } from '../../helperfunction/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  v4: uuidv4\n} = require('uuid');\n\nconst initialValue = {\n  showMap: false,\n  startCoord: \"\",\n  stopCoord: \"\"\n};\n/* Tar props, använder id för att hämta info om användare.  */\n\nconst History = _ref => {\n  _s();\n\n  let {\n    user,\n    customer\n  } = _ref;\n  let theUser;\n  let id; // Kollar om props finns, skickar in props från två olika komponenter, sätter alltid id.     \n\n  if (user) {\n    theUser = user;\n    id = user.value.id;\n  } else {\n    id = customer.id;\n  }\n\n  const {\n    aUser,\n    aUserMessage,\n    aUserLoading\n  } = useFetchAUser(id);\n  const {\n    cities,\n    messageCities,\n    loadingCities\n  } = useFetchAllCities();\n  const [showMapForUser, setShowMapForUser] = useState(initialValue);\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering \n\n  const [allParkingZones, setAllParkingZones] = useState([]); // laddstationer\n\n  const [userInvoice, setUserInvoice] = useState([]); // Alla uppg som visas\n\n  /* Kollar om cities är satt, Loopa städer, sätt värden till state */\n\n  const getAllCities = async () => {\n    cities && cities.forEach(city => {\n      city.charging_posts.length > 0 && setAllCharging_posts(city.charging_posts);\n      city.parking_zones.length > 0 && setAllParkingZones(city.parking_zones);\n    });\n  };\n  /* Rendera och kör funktioner vid mount och om något i arrayn ändras */\n\n\n  useEffect(() => {\n    getAllCities();\n    checkAllUsersTrips();\n  }, [theUser, aUser, aUserMessage, cities, loadingCities, aUserLoading]);\n  /* rita om, om något i arrayn ändras */\n\n  useEffect(() => {}, [setUserInvoice, userInvoice, showMapForUser, setShowMapForUser]);\n  /* \"huvudfunktion\" Loopar igenom alla användarens resor och \n      kontrollerar resedetaljer mha de andra funktionerna\n      för att skapa invoice/info om resa\n  */\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    let time;\n    let tripEnded;\n    let tripStarted;\n    let startAtParkingZone;\n    let endedAtParkingZone;\n    let startChargePoint;\n    let endedAtChargePoint;\n    let prices;\n    aUser.forEach(trip => {\n      time = getTimeOfTrip(trip.start.time, trip.stop.time);\n      tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      tripStarted = [trip.start.position.lat, trip.start.position.lng];\n      startAtParkingZone = checkIfCoordInParkingZone(tripStarted, allParkingZones);\n      endedAtParkingZone = checkIfCoordInParkingZone(tripEnded, allParkingZones);\n      startChargePoint = checkIfCoordInChargingPost(tripStarted, allCharging_posts);\n      endedAtChargePoint = checkIfCoordInChargingPost(tripEnded, allCharging_posts);\n      prices = checkUserPrices(startAtParkingZone, startChargePoint, endedAtParkingZone, endedAtChargePoint, time);\n      const atrip = {\n        tripId: trip.id,\n        date: trip.date,\n        startTime: trip.start.time,\n        stopTime: trip.stop.time,\n        tripStartedPos: tripStarted,\n        tripEndedPos: tripEnded,\n        startAtParkingZone: startAtParkingZone,\n        endedAtParkingZone: endedAtParkingZone,\n        startChargePoint: startChargePoint,\n        endedAtChargePoint: endedAtChargePoint,\n        timeOfTrip: time,\n        startFee: prices.startFee,\n        timeFee: prices.minFee,\n        discount: prices.discount,\n        totalCost: prices.minFee + prices.startFee\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips);\n  }\n  /* Räknar ut kunds pris */\n\n\n  const checkUserPrices = (startAtParkingZone, startChargePoint, endedAtParkingZone, endedAtChargePoint, time) => {\n    let prices = {\n      startFee: 10,\n      discount: 0,\n      minFee: 2.5 * time\n    };\n    /* Om en resa startar i fri parkering och slutar på en definerad blir startavg lägre */\n\n    if (startAtParkingZone && startAtParkingZone.returned === false || startChargePoint && startChargePoint.returned === false) {\n      if (endedAtParkingZone && endedAtParkingZone.returned === true || endedAtChargePoint && endedAtChargePoint.returned === true) {\n        prices.startFee = 8;\n        prices.discount = 2;\n        return prices;\n      }\n    }\n    /* startavg högre (12:-) om man friparkerar dvs ej lämnar inom park eller laddstation */\n\n\n    if (endedAtParkingZone && endedAtParkingZone.returned === false && endedAtChargePoint && endedAtChargePoint.returned === false) {\n      prices.startFee = 12;\n      return prices;\n    }\n\n    return prices;\n  };\n  /* Räknar ut tiden för resan, gör om till sekunder \n     subtraherar och dividerar för att få ut minuter\n  */\n\n\n  const getTimeOfTrip = (starttime, stoptime) => {\n    var arrStarttime;\n    var arrStoptime;\n    var stopTime;\n    var startTime;\n    var time;\n    arrStarttime = starttime.split(\".\");\n    arrStoptime = stoptime.split(\".\");\n    arrStarttime[0] = arrStarttime[0] * 60 * 60;\n    arrStarttime[1] = arrStarttime[1] * 60;\n    arrStoptime[0] = arrStoptime[0] * 60 * 60;\n    arrStoptime[1] = arrStoptime[1] * 60;\n    stopTime = arrStoptime[0] + arrStoptime[1];\n    startTime = arrStarttime[0] + arrStarttime[1];\n    time = (stopTime - startTime) / 60;\n    return time;\n  };\n  /*\n      Tar props som visar var användaren trycker på skärmen med musen.\n      Sparar koordinaterna för att visa upp kartan i närheten där man tryckte.\n      Då ser man enkelt kartan vid ex mobilläge.\n      (om props finns)\n  */\n\n\n  const showMap = (startCoord, stopCoord, e) => {\n    let pageY = e.pageY;\n    customer && (pageY = pageY - 200);\n    setShowMapForUser({\n      showMap: !showMapForUser.showMap,\n      startCoord: startCoord,\n      stopCoord: stopCoord,\n      pageY: pageY\n    });\n  };\n  /* Retunerar table, men visar loading komponent om loadingCities eller aUserLoading ej är klar */\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      showMap: showMapForUser.showMap,\n      children: /*#__PURE__*/_jsxDEV(UserHistory, {\n        children: !loadingCities && !aUserLoading ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n            children: \" Historik \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Starttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Sluttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Total tid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Visa f\\xE4rd p\\xE5 karta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Start avgift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Rabatt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Tid avgift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Total kostnad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userInvoice.length > 0 ? userInvoice.map(elem => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Datum\",\n                children: [\" \", elem.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Starttid\",\n                children: elem.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Sluttid\",\n                children: elem.stopTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Visa f\\xE4rd p\\xE5 karta\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button vertical-align:middle\",\n                  onClick: e => showMap(elem.tripStartedPos, elem.tripEndedPos, e),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"F\\xE4rd \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Total tid\",\n                children: [elem.timeOfTrip, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Start avgift\",\n                children: [elem.startFee, \":-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Rabatt\",\n                children: [elem.discount, \":-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Minutpris\",\n                children: [elem.timeFee, \":-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Total kostnad\",\n                children: [elem.totalCost, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)]\n            }, elem._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  margin: \"1em\",\n                  fontSize: \"1.1em\"\n                },\n                children: \" Det finns inga tidigare resor att visa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this)\n            }, uuidv4, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: aUserMessage || messageCities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 36\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      showMap: showMapForUser.showMap,\n      pageY: showMapForUser.pageY,\n      children: showMapForUser.showMap && /*#__PURE__*/_jsxDEV(MapForUser, {\n        showMapForUser: showMapForUser,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n\n_s(History, \"rESNwoGm9ATJl4vmJamcMEyoKSo=\", false, function () {\n  return [useFetchAUser, useFetchAllCities];\n});\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/History/index.js"],"names":["React","useState","useEffect","MapForUser","Loader","useFetchAUser","useFetchAllCities","Container","Main","UserHistory","MapContainer","checkIfCoordInParkingZone","checkIfCoordInChargingPost","v4","uuidv4","require","initialValue","showMap","startCoord","stopCoord","History","user","customer","theUser","id","value","aUser","aUserMessage","aUserLoading","cities","messageCities","loadingCities","showMapForUser","setShowMapForUser","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userInvoice","setUserInvoice","getAllCities","forEach","city","charging_posts","length","parking_zones","checkAllUsersTrips","arrayOfTrips","time","tripEnded","tripStarted","startAtParkingZone","endedAtParkingZone","startChargePoint","endedAtChargePoint","prices","trip","getTimeOfTrip","start","stop","position","lat","lng","checkUserPrices","atrip","tripId","date","startTime","stopTime","tripStartedPos","tripEndedPos","timeOfTrip","startFee","timeFee","minFee","discount","totalCost","push","returned","starttime","stoptime","arrStarttime","arrStoptime","split","e","pageY","map","elem","_id","margin","fontSize"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CACA;;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC,C,CACA;;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,WAAzB,EAAsCC,YAAtC,QAAyD,eAAzD,C,CACA;;AACA,SAAQC,yBAAR,EAAmCC,0BAAnC,QAAqE,8BAArE;;;AACA,MAAM;AAAEC,EAAAA,EAAE,EAAEC;AAAN,IAAiBC,OAAO,CAAC,MAAD,CAA9B;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;AAMA;;AACA,MAAMC,OAAO,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAsB;AAEnC,MAAIC,OAAJ;AACA,MAAIC,EAAJ,CAHmC,CAKnC;;AACA,MAAGH,IAAH,EAAS;AACLE,IAAAA,OAAO,GAAGF,IAAV;AACAG,IAAAA,EAAE,GAAGH,IAAI,CAACI,KAAL,CAAWD,EAAhB;AACH,GAHD,MAGO;AACHA,IAAAA,EAAE,GAAGF,QAAQ,CAACE,EAAd;AACH;;AAED,QAAM;AAACE,IAAAA,KAAD;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,MAAsCvB,aAAa,CAACmB,EAAD,CAAzD;AACA,QAAM;AAACK,IAAAA,MAAD;AAASC,IAAAA,aAAT;AAAwBC,IAAAA;AAAxB,MAAyCzB,iBAAiB,EAAhE;AACA,QAAM,CAAC0B,cAAD,EAAiBC,iBAAjB,IAAsChC,QAAQ,CAACe,YAAD,CAApD;AACA,QAAM,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4ClC,QAAQ,CAAC,EAAD,CAA1D,CAhBmC,CAgB6B;;AAChE,QAAM,CAACmC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC,EAAD,CAAtD,CAjBmC,CAiByB;;AAC5D,QAAM,CAACqC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAAC,EAAD,CAA9C,CAlBmC,CAkBiB;;AAGpD;;AACA,QAAMuC,YAAY,GAAG,YAAY;AAE7BX,IAAAA,MAAM,IAAIA,MAAM,CAACY,OAAP,CAAeC,IAAI,IAAI;AAC7BA,MAAAA,IAAI,CAACC,cAAL,CAAoBC,MAApB,GAA6B,CAA7B,IAAmCT,oBAAoB,CAACO,IAAI,CAACC,cAAN,CAAvD;AACAD,MAAAA,IAAI,CAACG,aAAL,CAAmBD,MAAnB,GAA4B,CAA5B,IAAkCP,kBAAkB,CAACK,IAAI,CAACG,aAAN,CAApD;AACH,KAHS,CAAV;AAIH,GAND;AAQA;;;AACA3C,EAAAA,SAAS,CAAC,MAAM;AACZsC,IAAAA,YAAY;AACZM,IAAAA,kBAAkB;AACrB,GAHQ,EAGN,CAACvB,OAAD,EAAUG,KAAV,EAAiBC,YAAjB,EAA+BE,MAA/B,EAAuCE,aAAvC,EAAsDH,YAAtD,CAHM,CAAT;AAKA;;AACA1B,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACqC,cAAD,EAAiBD,WAAjB,EAA8BN,cAA9B,EAA8CC,iBAA9C,CADM,CAAT;AAIA;AACJ;AACA;AACA;;AACI,WAASa,kBAAT,GAA8B;AAE1B,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,IAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,kBAAJ;AACA,QAAIC,kBAAJ;AACA,QAAIC,gBAAJ;AACA,QAAIC,kBAAJ;AACA,QAAIC,MAAJ;AAEA7B,IAAAA,KAAK,CAACe,OAAN,CAAce,IAAI,IAAI;AAClBR,MAAAA,IAAI,GAAGS,aAAa,CAACD,IAAI,CAACE,KAAL,CAAWV,IAAZ,EAAkBQ,IAAI,CAACG,IAAL,CAAUX,IAA5B,CAApB;AACAC,MAAAA,SAAS,GAAG,CAACO,IAAI,CAACG,IAAL,CAAUC,QAAV,CAAmBC,GAApB,EAAyBL,IAAI,CAACG,IAAL,CAAUC,QAAV,CAAmBE,GAA5C,CAAZ;AACAZ,MAAAA,WAAW,GAAG,CAACM,IAAI,CAACE,KAAL,CAAWE,QAAX,CAAoBC,GAArB,EAA0BL,IAAI,CAACE,KAAL,CAAWE,QAAX,CAAoBE,GAA9C,CAAd;AACAX,MAAAA,kBAAkB,GAAGxC,yBAAyB,CAACuC,WAAD,EAAcd,eAAd,CAA9C;AACAgB,MAAAA,kBAAkB,GAAGzC,yBAAyB,CAACsC,SAAD,EAAYb,eAAZ,CAA9C;AACAiB,MAAAA,gBAAgB,GAAGzC,0BAA0B,CAACsC,WAAD,EAAchB,iBAAd,CAA7C;AACAoB,MAAAA,kBAAkB,GAAG1C,0BAA0B,CAACqC,SAAD,EAAYf,iBAAZ,CAA/C;AACAqB,MAAAA,MAAM,GAAGQ,eAAe,CAACZ,kBAAD,EAAqBE,gBAArB,EAAuCD,kBAAvC,EAA2DE,kBAA3D,EAA+EN,IAA/E,CAAxB;AACA,YAAMgB,KAAK,GAAG;AACVC,QAAAA,MAAM,EAAET,IAAI,CAAChC,EADH;AAEV0C,QAAAA,IAAI,EAAEV,IAAI,CAACU,IAFD;AAGVC,QAAAA,SAAS,EAAEX,IAAI,CAACE,KAAL,CAAWV,IAHZ;AAIVoB,QAAAA,QAAQ,EAAEZ,IAAI,CAACG,IAAL,CAAUX,IAJV;AAKVqB,QAAAA,cAAc,EAAEnB,WALN;AAMVoB,QAAAA,YAAY,EAAErB,SANJ;AAOVE,QAAAA,kBAAkB,EAAEA,kBAPV;AAQVC,QAAAA,kBAAkB,EAAEA,kBARV;AASVC,QAAAA,gBAAgB,EAAEA,gBATR;AAUVC,QAAAA,kBAAkB,EAAEA,kBAVV;AAWViB,QAAAA,UAAU,EAAEvB,IAXF;AAYVwB,QAAAA,QAAQ,EAAEjB,MAAM,CAACiB,QAZP;AAaVC,QAAAA,OAAO,EAAElB,MAAM,CAACmB,MAbN;AAcVC,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QAdP;AAeVC,QAAAA,SAAS,EAAGrB,MAAM,CAACmB,MAAP,GAAgBnB,MAAM,CAACiB;AAfzB,OAAd;AAiBAzB,MAAAA,YAAY,CAAC8B,IAAb,CAAkBb,KAAlB;AACH,KA3BD;AA4BAzB,IAAAA,cAAc,CAACQ,YAAD,CAAd;AACH;AAED;;;AACA,QAAMgB,eAAe,GAAG,CAACZ,kBAAD,EAAqBE,gBAArB,EAAuCD,kBAAvC,EAA2DE,kBAA3D,EAA+EN,IAA/E,KAAwF;AAE5G,QAAIO,MAAM,GAAG;AACTiB,MAAAA,QAAQ,EAAE,EADD;AAETG,MAAAA,QAAQ,EAAE,CAFD;AAGTD,MAAAA,MAAM,EAAE,MAAM1B;AAHL,KAAb;AAKA;;AACA,QAAIG,kBAAkB,IAAIA,kBAAkB,CAAC2B,QAAnB,KAAgC,KAAvD,IACCzB,gBAAgB,IAAIA,gBAAgB,CAACyB,QAAjB,KAA8B,KADtD,EAC8D;AAC1D,UAAK1B,kBAAkB,IAAIA,kBAAkB,CAAC0B,QAAnB,KAAgC,IAAvD,IACAxB,kBAAkB,IAAIA,kBAAkB,CAACwB,QAAnB,KAAgC,IAD1D,EACiE;AAC7DvB,QAAAA,MAAM,CAACiB,QAAP,GAAkB,CAAlB;AACAjB,QAAAA,MAAM,CAACoB,QAAP,GAAkB,CAAlB;AACA,eAAOpB,MAAP;AACH;AACJ;AACD;;;AACA,QAAIH,kBAAkB,IAAIA,kBAAkB,CAAC0B,QAAnB,KAAgC,KAAvD,IACKxB,kBAAkB,IAAIA,kBAAkB,CAACwB,QAAnB,KAAgC,KAD9D,EACsE;AAC9DvB,MAAAA,MAAM,CAACiB,QAAP,GAAkB,EAAlB;AACA,aAAOjB,MAAP;AACH;;AACL,WAAOA,MAAP;AACH,GAxBD;AA0BA;AACJ;AACA;;;AACI,QAAME,aAAa,GAAG,CAACsB,SAAD,EAAYC,QAAZ,KAAyB;AAE3C,QAAIC,YAAJ;AACA,QAAIC,WAAJ;AACA,QAAId,QAAJ;AACA,QAAID,SAAJ;AACA,QAAInB,IAAJ;AAEAiC,IAAAA,YAAY,GAAGF,SAAS,CAACI,KAAV,CAAgB,GAAhB,CAAf;AACAD,IAAAA,WAAW,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAd;AACAF,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkB,EAAlB,GAAuB,EAAzC;AACAA,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkB,EAApC;AACAC,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAAX,GAAiB,EAAjB,GAAsB,EAAvC;AACAA,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAAX,GAAiB,EAAlC;AACAd,IAAAA,QAAQ,GAAGc,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAAvC;AACAf,IAAAA,SAAS,GAAGc,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAA1C;AACAjC,IAAAA,IAAI,GAAG,CAACoB,QAAQ,GAAGD,SAAZ,IAAyB,EAAhC;AAEA,WAAOnB,IAAP;AACH,GAnBD;AAqBA;AACJ;AACA;AACA;AACA;AACA;;;AACI,QAAM/B,OAAO,GAAG,CAACC,UAAD,EAAaC,SAAb,EAAwBiE,CAAxB,KAA8B;AAE1C,QAAIC,KAAK,GAAGD,CAAC,CAACC,KAAd;AACA/D,IAAAA,QAAQ,KAAK+D,KAAK,GAAGA,KAAK,GAAG,GAArB,CAAR;AAEApD,IAAAA,iBAAiB,CAAC;AACdhB,MAAAA,OAAO,EAAE,CAACe,cAAc,CAACf,OADX;AAEdC,MAAAA,UAAU,EAAEA,UAFE;AAGdC,MAAAA,SAAS,EAAEA,SAHG;AAIdkE,MAAAA,KAAK,EAAEA;AAJO,KAAD,CAAjB;AAMH,GAXD;AAaA;;;AACH,sBACO,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAIrD,cAAc,CAACf,OAAhC;AAAA,6BACI,QAAC,WAAD;AAAA,kBACM,CAACc,aAAD,IAAkB,CAACH,YAAnB,gBACE;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCACI;AAAA,sCACI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA,eAASd,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAeI;AAAA,sBACKwB,WAAW,CAACM,MAAZ,GAAqB,CAArB,GAAyBN,WAAW,CAACgD,GAAZ,CAAgBC,IAAI,iBAC9C;AAAA,sCACI;AAAI,8BAAW,OAAf;AAAA,gCAAyBA,IAAI,CAACrB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,8BAAW,UAAf;AAAA,0BAA2BqB,IAAI,CAACpB;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAI,8BAAW,SAAf;AAAA,0BAA0BoB,IAAI,CAACnB;AAA/B;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAI,8BAAW,0BAAf;AAAA,uCACE;AAAQ,kBAAA,SAAS,EAAC,8BAAlB;AAAiD,kBAAA,OAAO,EAAGgB,CAAD,IACxDnE,OAAO,CAACsE,IAAI,CAAClB,cAAN,EAAsBkB,IAAI,CAACjB,YAA3B,EAAyCc,CAAzC,CADT;AAAA,yCACsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAQI;AAAI,8BAAW,WAAf;AAAA,2BAA4BG,IAAI,CAAChB,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AAAI,8BAAW,cAAf;AAAA,2BAAgCgB,IAAI,CAACf,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,eAUI;AAAI,8BAAW,QAAf;AAAA,2BAAyBe,IAAI,CAACZ,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAWI;AAAI,8BAAW,WAAf;AAAA,2BAA4BY,IAAI,CAACd,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ,eAYI;AAAI,8BAAW,eAAf;AAAA,2BAAgCc,IAAI,CAACX,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZJ;AAAA,eAASW,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,oBAD0B,CAAzB,gBAgBD;AAAA,qCACI;AAAI,gBAAA,KAAK,EAAE;AAACC,kBAAAA,MAAM,EAAE,KAAT;AAAgBC,kBAAAA,QAAQ,EAAE;AAA1B,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,eAAS5E,MAAT;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,gBAsCI,QAAC,MAAD;AAAA,uCAAS;AAAA,sBAAIa,YAAY,IAAIG;AAApB;AAAA;AAAA;AAAA;AAAA,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA4CI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAIE,cAAc,CAACf,OAAxC;AAAiD,MAAA,KAAK,EAAEe,cAAc,CAACqD,KAAvE;AAAA,gBACKrD,cAAc,CAACf,OAAf,iBAA0B,QAAC,UAAD;AAAY,QAAA,cAAc,EAAIe,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD/B;AAAA;AAAA;AAAA;AAAA,YA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAkDA,CAjND;;GAAMZ,O;UAa0Cf,a,EACGC,iB;;;KAd7Cc,O;AAmNN,eAAeA,OAAf","sourcesContent":["import {React, useState, useEffect} from \"react\";\n\n//components\nimport MapForUser from '../../components/MapForUser/index'\nimport Loader from '../../components/Loader'\n// hook\nimport {useFetchAUser} from '../../Hooks/useFetchAUser'\nimport {useFetchAllCities} from '../../Hooks/useFetchAllCities'\n//styles\nimport {Container, Main, UserHistory, MapContainer} from './Form.styles'\n//other\nimport {checkIfCoordInParkingZone, checkIfCoordInChargingPost } from '../../helperfunction/helpers'\nconst { v4: uuidv4 } = require('uuid');\n\nconst initialValue = {\n    showMap: false,\n    startCoord: \"\",\n    stopCoord: \"\",\n}\n\n/* Tar props, använder id för att hämta info om användare.  */\nconst History = ({user, customer})  => {\n\n    let theUser;\n    let id;\n \n    // Kollar om props finns, skickar in props från två olika komponenter, sätter alltid id.     \n    if(user) {\n        theUser = user;\n        id = user.value.id\n    } else {\n        id = customer.id;\n    }\n\n    const {aUser, aUserMessage, aUserLoading} = useFetchAUser(id);\n    const {cities, messageCities, loadingCities} = useFetchAllCities(); \n    const [showMapForUser, setShowMapForUser] = useState(initialValue);\n    const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering \n    const [allParkingZones, setAllParkingZones] = useState([]); // laddstationer\n    const [userInvoice, setUserInvoice] = useState([]); // Alla uppg som visas\n\n\n    /* Kollar om cities är satt, Loopa städer, sätt värden till state */\n    const getAllCities = async () => {\n\n        cities && cities.forEach(city => {\n            city.charging_posts.length > 0 && (setAllCharging_posts(city.charging_posts));\n            city.parking_zones.length > 0 && (setAllParkingZones(city.parking_zones));\n        });\n    }\n\n    /* Rendera och kör funktioner vid mount och om något i arrayn ändras */\n    useEffect(() => {\n        getAllCities()\n        checkAllUsersTrips()\n    }, [theUser, aUser, aUserMessage, cities, loadingCities, aUserLoading])\n\n    /* rita om, om något i arrayn ändras */\n    useEffect(() => {\n    }, [setUserInvoice, userInvoice, showMapForUser, setShowMapForUser])\n\n\n    /* \"huvudfunktion\" Loopar igenom alla användarens resor och \n        kontrollerar resedetaljer mha de andra funktionerna\n        för att skapa invoice/info om resa\n    */\n    function checkAllUsersTrips() {\n\n        let arrayOfTrips = [];\n        let time;\n        let tripEnded;\n        let tripStarted;\n        let startAtParkingZone;\n        let endedAtParkingZone;\n        let startChargePoint;\n        let endedAtChargePoint;\n        let prices;\n\n        aUser.forEach(trip => {\n            time = getTimeOfTrip(trip.start.time, trip.stop.time)\n            tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            tripStarted = [trip.start.position.lat, trip.start.position.lng];\n            startAtParkingZone = checkIfCoordInParkingZone(tripStarted, allParkingZones);\n            endedAtParkingZone = checkIfCoordInParkingZone(tripEnded, allParkingZones);\n            startChargePoint = checkIfCoordInChargingPost(tripStarted, allCharging_posts);\n            endedAtChargePoint = checkIfCoordInChargingPost(tripEnded, allCharging_posts);\n            prices = checkUserPrices(startAtParkingZone, startChargePoint, endedAtParkingZone, endedAtChargePoint, time);\n            const atrip = { \n                tripId: trip.id,\n                date: trip.date,\n                startTime: trip.start.time,\n                stopTime: trip.stop.time,\n                tripStartedPos: tripStarted,\n                tripEndedPos: tripEnded,\n                startAtParkingZone: startAtParkingZone,\n                endedAtParkingZone: endedAtParkingZone,\n                startChargePoint: startChargePoint,\n                endedAtChargePoint: endedAtChargePoint,\n                timeOfTrip: time,\n                startFee: prices.startFee,\n                timeFee: prices.minFee,\n                discount: prices.discount,\n                totalCost: (prices.minFee + prices.startFee)\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n    }\n\n    /* Räknar ut kunds pris */\n    const checkUserPrices = (startAtParkingZone, startChargePoint, endedAtParkingZone, endedAtChargePoint, time) => {\n\n        let prices = {\n            startFee: 10,\n            discount: 0,\n            minFee: 2.5 * time,\n        }\n        /* Om en resa startar i fri parkering och slutar på en definerad blir startavg lägre */\n        if((startAtParkingZone && startAtParkingZone.returned === false)\n        || (startChargePoint && startChargePoint.returned === false)) {\n            if ((endedAtParkingZone && endedAtParkingZone.returned === true) \n            || (endedAtChargePoint && endedAtChargePoint.returned === true)) {\n                prices.startFee = 8;\n                prices.discount = 2;\n                return prices\n            }\n        }\n        /* startavg högre (12:-) om man friparkerar dvs ej lämnar inom park eller laddstation */\n        if((endedAtParkingZone && endedAtParkingZone.returned === false)\n            && (endedAtChargePoint && endedAtChargePoint.returned === false)) {\n                prices.startFee = 12;\n                return prices\n            }\n        return prices\n    }\n\n    /* Räknar ut tiden för resan, gör om till sekunder \n       subtraherar och dividerar för att få ut minuter\n    */\n    const getTimeOfTrip = (starttime, stoptime) => {\n        \n        var arrStarttime;\n        var arrStoptime;\n        var stopTime;\n        var startTime;\n        var time;\n   \n        arrStarttime = starttime.split(\".\");\n        arrStoptime = stoptime.split(\".\"); \n        arrStarttime[0] = arrStarttime[0] * 60 * 60;\n        arrStarttime[1] = arrStarttime[1] * 60;\n        arrStoptime[0] = arrStoptime[0] * 60 * 60;\n        arrStoptime[1] = arrStoptime[1] * 60;\n        stopTime = arrStoptime[0] + arrStoptime[1];\n        startTime = arrStarttime[0] + arrStarttime[1];\n        time = (stopTime - startTime) / 60;\n\n        return time\n    }\n\n    /*\n        Tar props som visar var användaren trycker på skärmen med musen.\n        Sparar koordinaterna för att visa upp kartan i närheten där man tryckte.\n        Då ser man enkelt kartan vid ex mobilläge.\n        (om props finns)\n    */\n    const showMap = (startCoord, stopCoord, e) => {\n\n        let pageY = e.pageY;\n        customer && (pageY = pageY - 200);\n        \n        setShowMapForUser({\n            showMap: !showMapForUser.showMap,\n            startCoord: startCoord,\n            stopCoord: stopCoord,\n            pageY: pageY\n        })\n    }\n\n    /* Retunerar table, men visar loading komponent om loadingCities eller aUserLoading ej är klar */\n\treturn (\n        <Container>  \n            <Main showMap = {showMapForUser.showMap} >\n                <UserHistory> \n                    { !loadingCities && !aUserLoading ? (\n                        <table>\n                            <caption> Historik </caption>\n                            <thead>\n                                <tr key={uuidv4()}>\n                                    <th scope=\"col\">Datum</th>\n                                    <th scope=\"col\">Starttid</th>\n                                    <th scope=\"col\">Sluttid</th>\n                                    <th scope=\"col\">Total tid</th>\n                                    <th scope=\"col\">Visa färd på karta</th>\n                                    <th scope=\"col\">Start avgift</th>\n                                    <th scope=\"col\">Rabatt</th>\n                                    <th scope=\"col\">Tid avgift</th>\n                                    <th scope=\"col\">Total kostnad</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {userInvoice.length > 0 ? userInvoice.map(elem => \n                                <tr key={elem._id}>\n                                    <td data-label=\"Datum\"> {elem.date}</td>\n                                    <td data-label=\"Starttid\">{elem.startTime}</td>\n                                    <td data-label=\"Sluttid\">{elem.stopTime}</td>\n                                    <td data-label=\"Visa färd på karta\">\n                                    { <button className=\"button vertical-align:middle\" onClick={(e) => \n                                        showMap(elem.tripStartedPos, elem.tripEndedPos, e)}><span>Färd </span></button>}\n                                    </td>\n                                    <td data-label=\"Total tid\">{elem.timeOfTrip} min</td>\n                                    <td data-label=\"Start avgift\" >{elem.startFee}:-</td>\n                                    <td data-label=\"Rabatt\">{elem.discount}:-</td>\n                                    <td data-label=\"Minutpris\">{elem.timeFee}:-</td>\n                                    <td data-label=\"Total kostnad\">{elem.totalCost}:- </td>\n                                </tr>\n                                ):  \n                                <tr key={uuidv4}>\n                                    <td style={{margin: \"1em\", fontSize: \"1.1em\"}}> Det finns inga tidigare resor att visa</td>\n                                </tr>}\n                            </tbody>\n                        </table>\n                    ) : ( <Loader> <p>{aUserMessage || messageCities}</p> </Loader> )}\n                </UserHistory>\n            </Main>\n            <MapContainer showMap = {showMapForUser.showMap} pageY={showMapForUser.pageY} >\n                {showMapForUser.showMap && <MapForUser showMapForUser = {showMapForUser}> </MapForUser>}\n            </MapContainer>\n        </Container>\n    )\n}\n\nexport default History\n"]},"metadata":{},"sourceType":"module"}