{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{React,useEffect,useState}from\"react\";import{Content,UserInfo}from\"./Form.style\";/* sätter alla värden initialt till loading, i väntan på att den ska bli klar */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialValue={username:\"Loading...\",email:\"Loading...\",totalCost:\"Loading...\",firstTrip:\"Loading...\",totalNumberOfTrips:\"Loading...\",lastTrip:\"Loading...\",balance:\"Loading...\"};export default function User(_ref){var userDetails=_ref.userDetails;var _useState=useState(initialValue),_useState2=_slicedToArray(_useState,2),userInfo=_useState2[0],setUserInfo=_useState2[1];/* vid mount och om userDetails ändras så sätt värden. \n       Sätter generaliserade värden och senare specifika om användaren gjort resor\n    */useEffect(function(){var data;if(userDetails){data=userDetails.data;setUserInfo({username:data.username,totalCost:\"0\",firstTrip:\"Du har ännu inte gjort någon resa\",totalNumberOfTrips:\"Du har ännu inte gjort någon resa \",lastTrip:\"Du har ännu inte gjort någon resa \",balance:data.balance});}if(data&&data.trips.length>0){var totalCost=0;var firstTrip;var totalNumberOfTrips;var lastTrip;data.trips.forEach(function(elem){totalCost+=parseInt(elem.price);});firstTrip=data.trips[0].date;totalNumberOfTrips=data.trips.length;lastTrip=data.trips[totalNumberOfTrips-1].date;setUserInfo({username:data.username,totalCost:totalCost,firstTrip:firstTrip,totalNumberOfTrips:totalNumberOfTrips,lastTrip:lastTrip,balance:data.balance});}},[userDetails]);/* Populerar tabell */return/*#__PURE__*/_jsx(Content,{children:/*#__PURE__*/_jsx(UserInfo,{children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"caption\",{children:\"Dina uppgifter\"}),/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Anv\\xE4ndarnamn\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"F\\xF6rsta resan\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Senaste resan\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Antal resor\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"P\\xE5 kontot\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Anv\\xE4ndarnamn\",children:[\" \",userInfo.username,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"F\\xF6rsta resan\",children:[\" \",userInfo.firstTrip,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Senaste resan\",children:[\" \",userInfo.lastTrip,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Antal resor\",children:[userInfo.totalNumberOfTrips,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"P\\xE5 kontot\",children:[userInfo.balance,\":- \"]})]},userInfo.username)})]})})});}","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/User/index.js"],"names":["React","useEffect","useState","Content","UserInfo","initialValue","username","email","totalCost","firstTrip","totalNumberOfTrips","lastTrip","balance","User","userDetails","userInfo","setUserInfo","data","trips","length","forEach","elem","parseInt","price","date"],"mappings":"oJAAA,OAAQA,KAAR,CAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,OAAR,CAAiBC,QAAjB,KAAgC,cAAhC,CAEA,gF,wFACA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAE,YADO,CAEjBC,KAAK,CAAE,YAFU,CAGjBC,SAAS,CAAE,YAHM,CAIjBC,SAAS,CAAE,YAJM,CAKjBC,kBAAkB,CAAE,YALH,CAMjBC,QAAQ,CAAE,YANO,CAOjBC,OAAO,CAAE,YAPQ,CAArB,CAUA,cAAe,SAASC,CAAAA,IAAT,MAA6B,IAAdC,CAAAA,WAAc,MAAdA,WAAc,CAExC,cAAgCZ,QAAQ,CAACG,YAAD,CAAxC,wCAAOU,QAAP,eAAiBC,WAAjB,eACA;AACJ;AACA,MACIf,SAAS,CAAC,UAAM,CACZ,GAAIgB,CAAAA,IAAJ,CACA,GAAIH,WAAJ,CAAiB,CACbG,IAAI,CAAGH,WAAW,CAACG,IAAnB,CACAD,WAAW,CAAE,CACTV,QAAQ,CAAEW,IAAI,CAACX,QADN,CAETE,SAAS,CAAE,GAFF,CAGTC,SAAS,CAAE,mCAHF,CAITC,kBAAkB,CAAE,oCAJX,CAKTC,QAAQ,CAAE,oCALD,CAMTC,OAAO,CAAEK,IAAI,CAACL,OANL,CAAF,CAAX,CAQH,CACD,GAAGK,IAAI,EAAIA,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAoB,CAA/B,CAAkC,CAC9B,GAAIX,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAIC,CAAAA,SAAJ,CACA,GAAIC,CAAAA,kBAAJ,CACA,GAAIC,CAAAA,QAAJ,CAEAM,IAAI,CAACC,KAAL,CAAWE,OAAX,CAAmB,SAAAC,IAAI,CAAI,CACvBb,SAAS,EAAIc,QAAQ,CAACD,IAAI,CAACE,KAAN,CAArB,CACH,CAFD,EAIAd,SAAS,CAAGQ,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcM,IAA1B,CACAd,kBAAkB,CAAGO,IAAI,CAACC,KAAL,CAAWC,MAAhC,CACAR,QAAQ,CAAGM,IAAI,CAACC,KAAL,CAAWR,kBAAkB,CAAC,CAA9B,EAAiCc,IAA5C,CAEAR,WAAW,CAAE,CACTV,QAAQ,CAAEW,IAAI,CAACX,QADN,CAETE,SAAS,CAAEA,SAFF,CAGTC,SAAS,CAAEA,SAHF,CAITC,kBAAkB,CAAEA,kBAJX,CAKTC,QAAQ,CAAEA,QALD,CAMTC,OAAO,CAAEK,IAAI,CAACL,OANL,CAAF,CAAX,CAQH,CACJ,CApCQ,CAoCN,CAACE,WAAD,CApCM,CAAT,CAsCA,sBACH,mBACO,KAAC,OAAD,wBAEI,KAAC,QAAD,wBACI,sCACA,2CADA,cAEA,oCACI,mCACI,WAAI,KAAK,CAAC,KAAV,6BADJ,cAEI,WAAI,KAAK,CAAC,KAAV,6BAFJ,cAGI,WAAI,KAAK,CAAC,KAAV,2BAHJ,cAII,WAAI,KAAK,CAAC,KAAV,yBAJJ,cAKI,WAAI,KAAK,CAAC,KAAV,0BALJ,GADJ,EAFA,cAWA,oCACI,mCACA,YAAI,aAAW,iBAAf,eAAgCC,QAAQ,CAACT,QAAzC,OADA,cAEA,YAAI,aAAW,iBAAf,eAAgCS,QAAQ,CAACN,SAAzC,OAFA,cAGA,YAAI,aAAW,eAAf,eAAiCM,QAAQ,CAACJ,QAA1C,OAHA,cAIA,YAAI,aAAW,aAAf,WAA8BI,QAAQ,CAACL,kBAAvC,OAJA,cAKA,YAAI,aAAW,cAAf,WAA4BK,QAAQ,CAACH,OAArC,SALA,GAASG,QAAQ,CAACT,QAAlB,CADJ,EAXA,GADJ,EAFJ,EADP,CA6BA","sourcesContent":["import {React, useEffect, useState} from \"react\";\nimport {Content, UserInfo} from \"./Form.style\"\n\n/* sätter alla värden initialt till loading, i väntan på att den ska bli klar */\nconst initialValue = {\n    username: \"Loading...\",\n    email: \"Loading...\",\n    totalCost: \"Loading...\",\n    firstTrip: \"Loading...\",\n    totalNumberOfTrips: \"Loading...\",\n    lastTrip: \"Loading...\",\n    balance: \"Loading...\"\n}\n\nexport default function User({userDetails}) {\n\n    const [userInfo, setUserInfo] = useState(initialValue);\n    /* vid mount och om userDetails ändras så sätt värden. \n       Sätter generaliserade värden och senare specifika om användaren gjort resor\n    */\n    useEffect(() => {\n        let data;\n        if (userDetails) {\n            data = userDetails.data;\n            setUserInfo(({\n                username: data.username,\n                totalCost: \"0\",\n                firstTrip: \"Du har ännu inte gjort någon resa\",\n                totalNumberOfTrips: \"Du har ännu inte gjort någon resa \",\n                lastTrip: \"Du har ännu inte gjort någon resa \",\n                balance: data.balance\n            }));\n        }\n        if(data && data.trips.length > 0) {\n            let totalCost = 0;\n            let firstTrip;\n            let totalNumberOfTrips;\n            let lastTrip;\n\n            data.trips.forEach(elem => {\n                totalCost += parseInt(elem.price);\n            });\n            \n            firstTrip = data.trips[0].date;\n            totalNumberOfTrips = data.trips.length;\n            lastTrip = data.trips[totalNumberOfTrips-1].date;\n\n            setUserInfo(({\n                username: data.username,\n                totalCost: totalCost,\n                firstTrip: firstTrip,\n                totalNumberOfTrips: totalNumberOfTrips,\n                lastTrip: lastTrip,\n                balance: data.balance\n            }));\n        } \n    }, [userDetails])\n\n    /* Populerar tabell */\n\treturn (\n        <Content>\n            {\n            <UserInfo> \n                <table>\n                <caption>Dina uppgifter</caption>\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Användarnamn</th>\n                        <th scope=\"col\">Första resan</th>\n                        <th scope=\"col\">Senaste resan</th>\n                        <th scope=\"col\">Antal resor</th>\n                        <th scope=\"col\">På kontot</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr key={userInfo.username}>\n                    <td data-label=\"Användarnamn\"> {userInfo.username} </td>\n                    <td data-label=\"Första resan\"> {userInfo.firstTrip} </td>\n                    <td data-label=\"Senaste resan\"> {userInfo.lastTrip} </td>\n                    <td data-label=\"Antal resor\">{userInfo.totalNumberOfTrips} </td>\n                    <td data-label=\"På kontot\">{userInfo.balance}:- </td>\n                    </tr>\n                </tbody>\n                </table>\n            </UserInfo>\n            }\n        </Content>\n\t);\n}"]},"metadata":{},"sourceType":"module"}