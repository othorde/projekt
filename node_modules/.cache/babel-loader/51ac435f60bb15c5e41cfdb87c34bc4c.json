{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState,useEffect}from\"react\";import Api from\"../Api\";/* Hämtar en användare, tar mot ett id. Retunerar användaren, meddelande, om den laddar. */export var useFetchAUser=function useFetchAUser(id){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),aUser=_useState2[0],setAUser=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),aUserLoading=_useState4[0],setUserLoading=_useState4[1];var _useState5=useState(\"Loading...\"),_useState6=_slicedToArray(_useState5,2),aUserMessage=_useState6[0],setUserMessage=_useState6[1];// hämt funktion. Sätter states\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var data,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setUserLoading(true);_context.next=4;return Api.getAUser(id);case 4:res=_context.sent;data=res.data;data.trips.length>0?setAUser(data.trips):setUserMessage(\"Ingen resa gjord\");_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);setUserMessage(\"Något gick fel vid hämtningen från servern\");case 12:setUserLoading(false);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();// hämta endast vid mount\nuseEffect(function(){fetchData(id);},[id]);return{aUser:aUser,aUserLoading:aUserLoading,aUserMessage:aUserMessage};};","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/Hooks/useFetchAUser.js"],"names":["useState","useEffect","Api","useFetchAUser","id","aUser","setAUser","aUserLoading","setUserLoading","aUserMessage","setUserMessage","fetchData","getAUser","res","data","trips","length"],"mappings":"8bAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CAEA,2FACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,CAAQ,CACjC,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAAuCN,QAAQ,CAAC,KAAD,CAA/C,yCAAOO,YAAP,eAAqBC,cAArB,eACA,eAAuCR,QAAQ,CAAC,YAAD,CAA/C,yCAAOS,YAAP,eAAqBC,cAArB,eAEA;AACA,GAAMC,CAAAA,SAAS,0FAAG,iBAAOP,EAAP,+IAGVI,cAAc,CAAC,IAAD,CAAd,CAHU,sBAIQN,CAAAA,GAAG,CAACU,QAAJ,CAAaR,EAAb,CAJR,QAIJS,GAJI,eAKVC,IAAI,CAAGD,GAAG,CAACC,IAAX,CACAA,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAoB,CAApB,CAAwBV,QAAQ,CAACQ,IAAI,CAACC,KAAN,CAAhC,CAA+CL,cAAc,CAAC,kBAAD,CAA7D,CANU,+EASVA,cAAc,CAAC,4CAAD,CAAd,CATU,QAWdF,cAAc,CAAC,KAAD,CAAd,CAXc,oEAAH,kBAATG,CAAAA,SAAS,4CAAf,CAcA;AACAV,SAAS,CAAC,UAAM,CACZU,SAAS,CAACP,EAAD,CAAT,CACH,CAFQ,CAEP,CAACA,EAAD,CAFO,CAAT,CAIA,MAAO,CAACC,KAAK,CAALA,KAAD,CAAQE,YAAY,CAAZA,YAAR,CAAsBE,YAAY,CAAZA,YAAtB,CAAP,CACH,CA1BM","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Api from \"../Api\";\n\n/* Hämtar en användare, tar mot ett id. Retunerar användaren, meddelande, om den laddar. */\nexport const useFetchAUser = (id) => {\n    const [aUser, setAUser] = useState([]);\n    const [aUserLoading, setUserLoading] = useState(false);\n    const [aUserMessage, setUserMessage] = useState(\"Loading...\");\n\n    // hämt funktion. Sätter states\n    const fetchData = async (id) => {\n        let data;\n        try {\n            setUserLoading(true)\n            const res = await Api.getAUser(id)\n            data = res.data;\n            data.trips.length > 0 ? setAUser(data.trips) : setUserMessage(\"Ingen resa gjord\");\n            \n        } catch (error) {\n            setUserMessage(\"Något gick fel vid hämtningen från servern\")\n        }\n        setUserLoading(false)\n    }\n\n    // hämta endast vid mount\n    useEffect(() => {\n        fetchData(id);\n    },[id]);\n\n    return {aUser, aUserLoading, aUserMessage}\n}\n\n"]},"metadata":{},"sourceType":"module"}