{"ast":null,"code":"import { React, useState } from \"react\";\nexport default function handleApiLoaded(mapRef, props) {\n  if (props.content.length > 0 && mapRef.map !== null) {\n    var area;\n    const map = mapRef.map;\n    const maps = mapRef.maps;\n    const cityState = mapRef.maps;\n    props.content.map(coords => {\n      let polyGon = [coords.position.polygonePart1, coords.position.polygonePart2, coords.position.polygonePart3, coords.position.polygonePart4];\n      area = new maps.Polygon({\n        paths: polyGon,\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#FF0000\",\n        fillOpacity: 0.35\n      });\n\n      if (props.getStations === false) {\n        area.setMap(null); // måste nog spara i state för att nå det. \n      } else {\n        area.setMap(map); // infoWindow = new google.maps.InfoWindow();\n      }\n    });\n  }\n\n  return null;\n} //  fungerar som REACt component till kartan\n// import React from \"react\";\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n// export default PopUp;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/helperFunctions/loadingStations.js"],"names":["React","useState","handleApiLoaded","mapRef","props","content","length","map","area","maps","cityState","coords","polyGon","position","polygonePart1","polygonePart2","polygonePart3","polygonePart4","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","getStations","setMap"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA+B,OAA/B;AAGA,eAAe,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,KAAjC,EAAwC;AAEtD,MAAIA,KAAK,CAACC,OAAN,CAAcC,MAAd,GAAuB,CAAvB,IAA4BH,MAAM,CAACI,GAAP,KAAe,IAA/C,EAAqD;AACpD,QAAIC,IAAJ;AACA,UAAMD,GAAG,GAAGJ,MAAM,CAACI,GAAnB;AACA,UAAME,IAAI,GAAGN,MAAM,CAACM,IAApB;AACA,UAAMC,SAAS,GAAGP,MAAM,CAACM,IAAzB;AAECL,IAAAA,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAkBI,MAAM,IACvB;AACA,UAAIC,OAAO,GACT,CAACD,MAAM,CAACE,QAAP,CAAgBC,aAAjB,EACAH,MAAM,CAACE,QAAP,CAAgBE,aADhB,EAEAJ,MAAM,CAACE,QAAP,CAAgBG,aAFhB,EAGAL,MAAM,CAACE,QAAP,CAAgBI,aAHhB,CADF;AAOCT,MAAAA,IAAI,GAAG,IAAIC,IAAI,CAACS,OAAT,CAAiB;AACxBC,QAAAA,KAAK,EAAEP,OADiB;AAExBQ,QAAAA,WAAW,EAAE,SAFW;AAGxBC,QAAAA,aAAa,EAAE,GAHS;AAIxBC,QAAAA,YAAY,EAAE,CAJU;AAKxBC,QAAAA,SAAS,EAAE,SALa;AAMxBC,QAAAA,WAAW,EAAE;AANW,OAAjB,CAAP;;AAQA,UAAIpB,KAAK,CAACqB,WAAN,KAAsB,KAA1B,EAAiC;AAChCjB,QAAAA,IAAI,CAACkB,MAAL,CAAY,IAAZ,EADgC,CAEhC;AACA,OAHD,MAGO;AAENlB,QAAAA,IAAI,CAACkB,MAAL,CAAYnB,GAAZ,EAFM,CAKN;AAEA;AACF,KA5BD;AA6BA;;AACF,SAAO,IAAP;AACA,C,CAKD;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import {React, useState } from \"react\";\n\n\nexport default function handleApiLoaded(mapRef, props) {\n\n\tif (props.content.length > 0 && mapRef.map !== null) {\n\t\tvar area;\n\t\tconst map = mapRef.map;\n\t\tconst maps = mapRef.maps;\n\t\tconst cityState = mapRef.maps;\n\n\t\t\tprops.content.map(coords => \n\t\t\t\t{\n\t\t\t\tlet polyGon = \n\t\t\t\t\t([coords.position.polygonePart1,\n\t\t\t\t\t\tcoords.position.polygonePart2,\n\t\t\t\t\t\tcoords.position.polygonePart3,\n\t\t\t\t\t\tcoords.position.polygonePart4\n\t\t\t\t\t]);\n\t\n\t\t\t\t\tarea = new maps.Polygon({\n\t\t\t\t\tpaths: polyGon,\n\t\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\t\tstrokeOpacity: 0.8,\n\t\t\t\t\tstrokeWeight: 2,\n\t\t\t\t\tfillColor: \"#FF0000\",\n\t\t\t\t\tfillOpacity: 0.35,\n\t\t\t\t\t});\n\t\t\t\t\tif (props.getStations === false) { \n\t\t\t\t\t\tarea.setMap(null);\n\t\t\t\t\t\t// måste nog spara i state för att nå det. \n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tarea.setMap(map);\n\n\n\t\t\t\t\t\t// infoWindow = new google.maps.InfoWindow();\n\n\t\t\t\t\t}\n\t\t\t})\n\t\t}\n\treturn null\n}\n\n\n\n\n//  fungerar som REACt component till kartan\n\n// import React from \"react\";\n\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n\n// export default PopUp;\n\n"]},"metadata":{},"sourceType":"module"}