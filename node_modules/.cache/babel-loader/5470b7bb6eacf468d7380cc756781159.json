{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Invoice\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport PDF from '../../PDF'; //components\n\nimport Api from '../../api'; //styles & img\n\nimport { Container } from './Form.styles'; //other\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar pointInPolygon = require('point-in-polygon');\n\nconst userInvoiceInitialValue = {\n  tripId: \"\",\n  endedAtChargePoint: false,\n  endedAtLoadStation: \"\",\n  timeOfTrip: \"\",\n  startFee: 10,\n  discountStartFee: \"\",\n  fromFreePark2Defined: \"\"\n};\nexport default function Invoice(props) {\n  _s();\n\n  //hooks\n  // måste ha resan och koordinaterna\n  // måste senare räkna ut var koordinaterna ligger och jmföra\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n  const [userInvoice, setUserInvoice] = useState([]);\n  /* Sparara alla laddning och parkeringszoner i state */\n\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    setUserTrips(props);\n  }, [props]);\n  useEffect(() => {\n    console.log(\"IGÅMGM\", userInvoice);\n  }, [setUserInvoice, userInvoice]);\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    userTrips.props.forEach(trip => {\n      var startFee = 10;\n      var discount = 0;\n      let time = getTimeOfTrip(trip.start.time, trip.stop.time);\n      let timeFee = 2.5 * time;\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n      var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n      var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n      var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n      var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n      /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n\n      if (startAtParkingZone === undefined || startChargePoint === undefined) {\n        if (endedAtParkingZone === true || endedAtChargePoint === true) {\n          startFee = startFee * 0.85;\n          discount = 10 - startFee;\n        }\n      }\n\n      const atrip = {\n        tripId: trip.id,\n        date: trip.date,\n        startTime: trip.start.time,\n        stopTime: trip.stop.time,\n        startAtParkingZone: startAtParkingZone,\n        endedAtParkingZone: endedAtParkingZone,\n        startChargePoint: startChargePoint,\n        endedAtChargePoint: endedAtChargePoint,\n        timeOfTrip: time,\n        startFee: startFee,\n        timeFee: timeFee,\n        discount: discount\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips); //return userInvoice\n  }\n  /*  loopara igenom alla chargingposts, \n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInParkingZone(tripEnded) {\n    let res;\n\n    for (var elem of allParkingZones) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /*  loopara igenom alla chargingposts,\n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInChargingPost(tripEnded) {\n    let res;\n\n    for (var elem of allCharging_posts) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /* Räknar ut tiden för resan, gör om till sekunder \n      subtraherar och dividerar för att få ut minuter\n  */\n\n\n  function getTimeOfTrip(starttime, stoptime) {\n    var arrStarttime = starttime.split(\".\");\n    var arrStoptime = stoptime.split(\".\");\n    arrStarttime[0] = arrStarttime[0] * 60 * 60;\n    arrStarttime[1] = arrStarttime[1] * 60;\n    arrStoptime[0] = arrStoptime[0] * 60 * 60;\n    arrStoptime[1] = arrStoptime[1] * 60;\n    var stopTime = arrStoptime[0] + arrStoptime[1];\n    var startTime = arrStarttime[0] + arrStarttime[1];\n    var time = (stopTime - startTime) / 60;\n    return time;\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAllUsersTrips,\n      children: \"Visa resekostnader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), userInvoice.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \" Resekostnader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Datum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Starttid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Sluttid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Total tid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Start avgift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Rabatt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Tid avgift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Total kostnad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userInvoice.map(elem => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Datum\",\n            children: [\" \", elem.date, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Starttid\",\n            children: [elem.startTime, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Sluttid\",\n            children: [elem.stopTime, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Total tid\",\n            children: [elem.timeOfTrip, \" min \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Start avgift\",\n            children: [elem.startFee, \":-\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Rabatt\",\n            children: [elem.discount, \":- \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Minutpris\",\n            children: [elem.timeFee, \":- \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Total kostnad\",\n            children: [elem.totalCost, \":- \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this) : console.log(\"HEJ\")]\n  }, void 0, true);\n}\n\n_s(Invoice, \"toOqd7jQdOdzWVTzyD4UiQQIAdU=\");\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Invoice/index.js"],"names":["React","useEffect","useState","PDF","Api","Container","pointInPolygon","require","userInvoiceInitialValue","tripId","endedAtChargePoint","endedAtLoadStation","timeOfTrip","startFee","discountStartFee","fromFreePark2Defined","Invoice","props","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","userInvoice","setUserInvoice","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","console","log","checkAllUsersTrips","arrayOfTrips","trip","discount","time","getTimeOfTrip","start","stop","timeFee","tripEnded","position","lat","lng","tripStarted","startAtParkingZone","checkIfCoordInParkingZone","endedAtParkingZone","startChargePoint","checkIfCoordInChargingPost","undefined","atrip","id","date","startTime","stopTime","push","res","elem","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","starttime","stoptime","arrStarttime","split","arrStoptime","point","polygone","length","map","totalCost"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from 'react';\nimport PDF from '../../PDF';\n\n//components\nimport Api from '../../api'\n//styles & img\nimport {Container} from './Form.styles'\n//other\n\nvar pointInPolygon = require('point-in-polygon');\n\n\nconst userInvoiceInitialValue = {\n    tripId: \"\",\n    endedAtChargePoint: false,\n    endedAtLoadStation: \"\",\n    timeOfTrip: \"\",\n    startFee: 10,\n    discountStartFee: \"\",\n    fromFreePark2Defined: \"\"\n}\n\n\nexport default function Invoice(props) {\n\t//hooks\n    // måste ha resan och koordinaterna\n    // måste senare räkna ut var koordinaterna ligger och jmföra\n\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState([]);\n    const [userInvoice, setUserInvoice] = useState([])\n    /* Sparara alla laddning och parkeringszoner i state */\n    \n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        setUserTrips(props)\n\n    }, [props])\n\n    useEffect(() => {\n        console.log(\"IGÅMGM\", userInvoice)\n\n    }, [setUserInvoice, userInvoice])\n\n\n\n    function checkAllUsersTrips() {\n        let arrayOfTrips = []\n        \n        userTrips.props.forEach(trip => {\n            var startFee = 10;\n            var discount = 0;\n            let time = getTimeOfTrip(trip.start.time, trip.stop.time)\n            let timeFee = 2.5 * time;\n\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n            var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n            var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n            var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n            var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n\n            /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n            if(startAtParkingZone === undefined || startChargePoint === undefined) {\n                if (endedAtParkingZone === true || endedAtChargePoint === true) {\n                    startFee = startFee * 0.85;\n                    discount = 10 - startFee;\n                }\n            }\n\n            const atrip = { \n\t\t\t\ttripId: trip.id,\n                date: trip.date,\n                startTime: trip.start.time,\n                stopTime: trip.stop.time,\n                startAtParkingZone: startAtParkingZone,\n                endedAtParkingZone: endedAtParkingZone,\n                startChargePoint: startChargePoint,\n                endedAtChargePoint: endedAtChargePoint,\n                timeOfTrip: time,\n                startFee: startFee,\n                timeFee: timeFee,\n                discount: discount,\n\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n        //return userInvoice\n    }\n\n    \n    /*  loopara igenom alla chargingposts, \n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInParkingZone(tripEnded) {\n        let res;\n        for (var elem of allParkingZones) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n        }\n    }\n\n    /*  loopara igenom alla chargingposts,\n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInChargingPost(tripEnded) {\n        let res;\n        for (var elem of allCharging_posts) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n       } \n    }\n\n    /* Räknar ut tiden för resan, gör om till sekunder \n        subtraherar och dividerar för att få ut minuter\n    */\n    function getTimeOfTrip(starttime, stoptime) {\n\n        var arrStarttime = starttime.split(\".\");\n        var arrStoptime = stoptime.split(\".\"); \n\n        arrStarttime[0] = arrStarttime[0] * 60 * 60;\n        arrStarttime[1] = arrStarttime[1] * 60;\n        arrStoptime[0] = arrStoptime[0] * 60 * 60;\n        arrStoptime[1] = arrStoptime[1] * 60;\n        \n        var stopTime = arrStoptime[0] + arrStoptime[1];\n        var startTime = arrStarttime[0] + arrStarttime[1];\n        var time = (stopTime - startTime) / 60;\n\n        return time\n    }\n\n    function checkIfPointInPolyGon(point, polygone) {\n\n        return pointInPolygon(point, polygone);\n    }\n\n\n\n\treturn (\n\n        <>\n            <button onClick={checkAllUsersTrips}>Visa resekostnader</button>\n\n            {userInvoice.length > 0 ? (\n            <table>\n                    <caption> Resekostnader</caption>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Datum</th>\n                            <th scope=\"col\">Starttid</th>\n                            <th scope=\"col\">Sluttid</th>\n                            <th scope=\"col\">Total tid</th>\n                            <th scope=\"col\">Start avgift</th>\n                            <th scope=\"col\">Rabatt</th>\n                            <th scope=\"col\">Tid avgift</th>\n                            <th scope=\"col\">Total kostnad</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {userInvoice.map(elem => \n                        <tr>\n                            <td data-label=\"Datum\"> {elem.date} </td>\n                            <td data-label=\"Starttid\">{elem.startTime} </td>\n                            <td data-label=\"Sluttid\">{elem.stopTime} </td>\n                            <td data-label=\"Total tid\">{elem.timeOfTrip} min </td>\n                            <td data-label=\"Start avgift\" >{elem.startFee}:-</td>\n                            <td data-label=\"Rabatt\">{elem.discount}:- </td>\n                            <td data-label=\"Minutpris\">{elem.timeFee}:- </td>\n                            <td data-label=\"Total kostnad\">{elem.totalCost}:- </td>\n                        </tr>\n                        )}\n                   \n                    </tbody>\n                    </table>\n                    ) : (\n\n                        console.log(\"HEJ\")\n                    )}\n        </>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}