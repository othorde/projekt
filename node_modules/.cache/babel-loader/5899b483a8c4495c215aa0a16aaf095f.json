{"ast":null,"code":"// const handleApiLoaded = (map, maps) => {\n// \tconst triangleCoords = [\n// \t  { lat: 56.012562, lng: 14.115424 }, // kstad\n// \t  { lat: 55.925155, lng: 14.073078 },\n// \t  { lat: 55.931968, lng:  14.289134 },\n// \t  { lat: 56.037256, lng: 14.306297 }\n// \t];\n// \t var bermudaTriangle = new maps.Polygon({\n// \t  paths: triangleCoords,\n// \t  strokeColor: \"#FF0000\",\n// \t  strokeOpacity: 0.8,\n// \t  strokeWeight: 2,\n// \t  fillColor: \"#FF0000\",\n// \t  fillOpacity: 0.35\n// \t});\n// \tbermudaTriangle.setMap(map);\n// }\nconst handleApiLoaded = (mapRef, props) => {\n  console.log(props);\n\n  if (props !== null && mapRef.map !== null) {\n    if (props.getStations === true) {\n      const map = mapRef.map;\n      const maps = mapRef.maps;\n      props.content.map(coords => {\n        const polyGon = [coords.position.polygonePart1, coords.position.polygonePart2, coords.position.polygonePart3, coords.position.polygonePart4];\n        area = new maps.Polygon({\n          paths: polyGon,\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35,\n          text: \"HEJ\"\n        });\n        area.setMap(map);\n      });\n    } else {}\n  }\n};\n\nexport default handleApiLoaded; //  fungerar som REACt component till kartan\n// import React from \"react\";\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n// export default PopUp;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/helperFunctions/loadingStations.js"],"names":["handleApiLoaded","mapRef","props","console","log","map","getStations","maps","content","coords","polyGon","position","polygonePart1","polygonePart2","polygonePart3","polygonePart4","area","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","text","setMap"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,eAAe,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,MAAIA,KAAK,KAAK,IAAV,IAAkBD,MAAM,CAACI,GAAP,KAAe,IAArC,EAA2C;AAC1C,QAAGH,KAAK,CAACI,WAAN,KAAsB,IAAzB,EAA+B;AAE9B,YAAMD,GAAG,GAAGJ,MAAM,CAACI,GAAnB;AACA,YAAME,IAAI,GAAGN,MAAM,CAACM,IAApB;AAEAL,MAAAA,KAAK,CAACM,OAAN,CAAcH,GAAd,CAAkBI,MAAM,IACvB;AACA,cAAMC,OAAO,GACX,CAACD,MAAM,CAACE,QAAP,CAAgBC,aAAjB,EACAH,MAAM,CAACE,QAAP,CAAgBE,aADhB,EAEAJ,MAAM,CAACE,QAAP,CAAgBG,aAFhB,EAGAL,MAAM,CAACE,QAAP,CAAgBI,aAHhB,CADF;AAOCC,QAAAA,IAAI,GAAG,IAAIT,IAAI,CAACU,OAAT,CAAiB;AACxBC,UAAAA,KAAK,EAAER,OADiB;AAExBS,UAAAA,WAAW,EAAE,SAFW;AAGxBC,UAAAA,aAAa,EAAE,GAHS;AAIxBC,UAAAA,YAAY,EAAE,CAJU;AAKxBC,UAAAA,SAAS,EAAE,SALa;AAMxBC,UAAAA,WAAW,EAAE,IANW;AAOxBC,UAAAA,IAAI,EAAE;AAPkB,SAAjB,CAAP;AAUAR,QAAAA,IAAI,CAACS,MAAL,CAAYpB,GAAZ;AACD,OApBD;AAqBA,KA1BD,MA0BO,CAEN;AAGD;AACD,CApCD;;AAsCA,eAAeL,eAAf,C,CAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\n// const handleApiLoaded = (map, maps) => {\n// \tconst triangleCoords = [\n// \t  { lat: 56.012562, lng: 14.115424 }, // kstad\n// \t  { lat: 55.925155, lng: 14.073078 },\n// \t  { lat: 55.931968, lng:  14.289134 },\n// \t  { lat: 56.037256, lng: 14.306297 }\n// \t];\n  \n// \t var bermudaTriangle = new maps.Polygon({\n// \t  paths: triangleCoords,\n// \t  strokeColor: \"#FF0000\",\n// \t  strokeOpacity: 0.8,\n// \t  strokeWeight: 2,\n// \t  fillColor: \"#FF0000\",\n// \t  fillOpacity: 0.35\n// \t});\n// \tbermudaTriangle.setMap(map);\n// }\n\nconst handleApiLoaded = (mapRef, props) => {\n\t\n\tconsole.log(props)\n\tif (props !== null && mapRef.map !== null) {\n\t\tif(props.getStations === true) {\n\n\t\t\tconst map = mapRef.map;\n\t\t\tconst maps = mapRef.maps;\n\t\t\n\t\t\tprops.content.map(coords => \n\t\t\t\t{\n\t\t\t\tconst polyGon = \n\t\t\t\t\t([coords.position.polygonePart1,\n\t\t\t\t\t\tcoords.position.polygonePart2,\n\t\t\t\t\t\tcoords.position.polygonePart3,\n\t\t\t\t\t\tcoords.position.polygonePart4\n\t\t\t\t\t]);\n\t\n\t\t\t\t\tarea = new maps.Polygon({\n\t\t\t\t\tpaths: polyGon,\n\t\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\t\tstrokeOpacity: 0.8,\n\t\t\t\t\tstrokeWeight: 2,\n\t\t\t\t\tfillColor: \"#FF0000\",\n\t\t\t\t\tfillOpacity: 0.35,\n\t\t\t\t\ttext: \"HEJ\"\n\t\t\t\t\t});\n\t\n\t\t\t\t\tarea.setMap(map);\n\t\t\t})\n\t\t} else {\n\n\t\t}\n\t\n\t\t\t\n\t}\n}\n\nexport default handleApiLoaded;\n\n\n\n//  fungerar som REACt component till kartan\n\n// import React from \"react\";\n\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n\n// export default PopUp;\n\n"]},"metadata":{},"sourceType":"module"}