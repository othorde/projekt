{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Api from \"../api\";\nexport const useFetchAUser = id => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [message, setMessage] = useState(\"Loading...\");\n\n  const fetchData = async id => {\n    let data;\n\n    try {\n      setError(false);\n      setLoading(true);\n      const res = await Api.getAUser(id);\n      data = res.data;\n\n      if (data.trips.length > 0) {\n        setState(data.trips);\n      } else {\n        setMessage(\"Ingen resa gjord\");\n      }\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }; // initial render\n\n\n  useEffect(() => {\n    fetchData(id);\n  }, []);\n  return {\n    state,\n    loading,\n    error,\n    message\n  };\n}; // useEffect(() => {\n//     async function fetchData() {\n//         if(user && user.value.id) {\n//             let id = user.value.id;\n//             /* Om props läs därifrån */\n//             if(props && props.customer) {\n//                 id = props.customer.id;\n//             }\n//             let res = await Api.getAUser(id);\n//             if (res && res.data) {\n//                 data = res.data;\n//                 if(data.trips.length > 0) {\n//                     setUserHistory(data.trips)\n//                 } else {\n//                     setMessage(\"Ingen resa gjord\")\n//                 }\n//             }\n//         }\n//     }\n//     fetchData();\n// }, [user])\n\n_s(useFetchAUser, \"zPx9BfMYiZB6s+o2OuN2PW/7bjw=\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/Hooks/useFetchAUser.js"],"names":["useState","useEffect","Api","useFetchAUser","id","user","setUser","loading","setLoading","error","setError","message","setMessage","fetchData","data","res","getAUser","trips","length","setState","state"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAGA,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAQ;AAAA;;AAEjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,YAAD,CAAtC;;AAGA,QAAMa,SAAS,GAAG,MAAOT,EAAP,IAAc;AAC5B,QAAIU,IAAJ;;AACA,QAAI;AACAJ,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMO,GAAG,GAAG,MAAMb,GAAG,CAACc,QAAJ,CAAaZ,EAAb,CAAlB;AACAU,MAAAA,IAAI,GAAGC,GAAG,CAACD,IAAX;;AAEA,UAAGA,IAAI,CAACG,KAAL,CAAWC,MAAX,GAAoB,CAAvB,EAA0B;AACtBC,QAAAA,QAAQ,CAACL,IAAI,CAACG,KAAN,CAAR;AACH,OAFD,MAEO;AACHL,QAAAA,UAAU,CAAC,kBAAD,CAAV;AACH;AAEJ,KAZD,CAYE,OAAOH,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAlBD,CARiC,CA4BjC;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS,CAACT,EAAD,CAAT;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAO;AAACgB,IAAAA,KAAD;AAAQb,IAAAA,OAAR;AAAiBE,IAAAA,KAAjB;AAAwBE,IAAAA;AAAxB,GAAP;AACH,CAlCM,C,CAqCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAzDaR,a","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Api from \"../api\";\n\n\nexport const useFetchAUser = (id) => {\n\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [message, setMessage] = useState(\"Loading...\");\n\n    \n    const fetchData = async (id) => {\n        let data;\n        try {\n            setError(false)\n            setLoading(true)\n            const res = await Api.getAUser(id)\n            data = res.data;\n\n            if(data.trips.length > 0) {\n                setState(data.trips)\n            } else {\n                setMessage(\"Ingen resa gjord\")\n            }\n            \n        } catch (error) {\n            setError(true)\n        }\n        setLoading(false)\n    }  \n    \n    // initial render\n    useEffect(() => {\n        fetchData(id);\n    },[]);\n\n    return {state, loading, error, message}\n}\n\n\n// useEffect(() => {\n//     async function fetchData() {\n//         if(user && user.value.id) {\n//             let id = user.value.id;\n//             /* Om props läs därifrån */\n//             if(props && props.customer) {\n//                 id = props.customer.id;\n//             }\n//             let res = await Api.getAUser(id);\n//             if (res && res.data) {\n//                 data = res.data;\n//                 if(data.trips.length > 0) {\n//                     setUserHistory(data.trips)\n//                 } else {\n//                     setMessage(\"Ingen resa gjord\")\n//                 }\n//             }\n//         }\n//     }\n//     fetchData();\n// }, [user])"]},"metadata":{},"sourceType":"module"}