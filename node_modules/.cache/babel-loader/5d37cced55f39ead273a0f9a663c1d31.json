{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Oauth\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Wrapper from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config(); // clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n// clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n// accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n// authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n// redirectUri: \"http://localhost:3000/login/home\",\n// scopes: [\"identity\"],\n\n\nexport default function Logins() {\n  _s();\n\n  //const { state, dispatch } = useContext(AuthContext);\n  const [data, setData] = useState({\n    errorMessage: \"\",\n    isLoading: false\n  }); //const { client_id, redirect_uri } = state;\n\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\"); // If Github API returns the code parameter\n\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      window.history.pushState({}, null, newUrl[0]);\n      setData({ ...data,\n        isLoading: true\n      });\n      const requestData = {\n        code: newUrl[1]\n      };\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"login-link\",\n        href: `https://github.com/login/oauth/authorize?scope=user&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&redirect_uri=localhost:3000/`,\n        onClick: () => {\n          setData({ ...data,\n            errorMessage: \"\"\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Login with GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Logins, \"+o/aPN0HmoOh/R4RFDKbirQwrBY=\");\n\n_c = Logins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logins\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Oauth/index.js"],"names":["React","useState","useEffect","useContext","Navigate","Wrapper","AppContext","require","config","Logins","data","setData","errorMessage","isLoading","url","window","location","href","hasCode","includes","newUrl","split","history","pushState","requestData","code","process","env","REACT_APP_GITHUB_CLIENT_ID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAGI;AACA;AACA;AACA;AACA;AACA;;;AAKJ,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAAEW,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAAD,CAAhC,CAF6B,CAI7B;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMY,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,UAAMC,OAAO,GAAGJ,GAAG,CAACK,QAAJ,CAAa,QAAb,CAAhB,CAHc,CAKd;;AACA,QAAID,OAAJ,EAAa;AACX,YAAME,MAAM,GAAGN,GAAG,CAACO,KAAJ,CAAU,QAAV,CAAf;AACAN,MAAAA,MAAM,CAACO,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,IAA7B,EAAmCH,MAAM,CAAC,CAAD,CAAzC;AACAT,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,QAAAA,SAAS,EAAE;AAAtB,OAAD,CAAP;AAEA,YAAMW,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAEL,MAAM,CAAC,CAAD;AADM,OAApB;AAID;AACF,GAhBQ,EAgBN,CAACV,IAAD,CAhBM,CAAT;AAmBA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAA,6BAII;AACA,QAAA,SAAS,EAAC,YADV;AAEA,QAAA,IAAI,EAAG,iEAAgEgB,OAAO,CAACC,GAAR,CAAYC,0BAA2B,+BAF9G;AAGA,QAAA,OAAO,EAAE,MAAM;AACXjB,UAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,YAAAA,YAAY,EAAE;AAAzB,WAAD,CAAP;AACH,SALD;AAAA,+BAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAJJ;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5CqBH,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Wrapper from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\n\nrequire('dotenv').config()\n\n\n    // clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n    // clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n    // accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n    // authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n    // redirectUri: \"http://localhost:3000/login/home\",\n    // scopes: [\"identity\"],\n\n\n\n\nexport default function Logins() {\n    //const { state, dispatch } = useContext(AuthContext);\n    const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n  \n    //const { client_id, redirect_uri } = state;\n  \n    useEffect(() => {\n      // After requesting Github access, Github redirects back to your app with a code parameter\n      const url = window.location.href;\n      const hasCode = url.includes(\"?code=\");\n  \n      // If Github API returns the code parameter\n      if (hasCode) {\n        const newUrl = url.split(\"?code=\");\n        window.history.pushState({}, null, newUrl[0]);\n        setData({ ...data, isLoading: true });\n  \n        const requestData = {\n          code: newUrl[1]\n        };\n  \n      }\n    }, [data]);\n  \n  \n    return (\n      <Wrapper>\n        <>\n            {\n            // Link to request GitHub access\n            }\n            <a\n            className=\"login-link\"\n            href={`https://github.com/login/oauth/authorize?scope=user&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&redirect_uri=localhost:3000/`}\n            onClick={() => {\n                setData({ ...data, errorMessage: \"\" });\n            }}\n            >\n            <span>Login with GitHub</span>\n            </a>\n        </>\n       \n      </Wrapper>\n    );\n  }\n  \n"]},"metadata":{},"sourceType":"module"}