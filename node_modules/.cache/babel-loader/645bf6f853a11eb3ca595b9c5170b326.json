{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\MoveBike\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoveBike(props) {\n  _s();\n\n  const [charging_posts, setCharging_posts] = useState([]);\n  const [moveBikeTo, setMoveBikeTo] = useState({}); // Här måste jag hämta på riktigt, nu laddas endast hårdkodade värde in\n  // Har lagt upp det som det ungefär kommer se ut, kanske behöver ändra något här\n\n  /* funktionen hämtar den stad där cykeln befinner sig \n     loopar igenom och sparar position och färgkod för laddningsstationen \n     Kontrollera denna när vi har fler laddningsstationer\n     */\n\n  async function getLoadStationsForMovingBike() {\n    let city = await Api.getACity(props.city);\n    city[0].charging_posts.map(elem => {\n      setCharging_posts([elem]);\n    });\n  } // Vad behöver uppdateras?\n  // Scooterns plats ny long lat\n  // Uppdatera hur många som finns i föregående zon\n  // uppdatera hur många som finns i den nya zonen\n\n\n  const handleSubmit = () => {\n    if (moveBikeTo !== null) {\n      console.log(moveBikeTo);\n      let bikeId = props.id;\n      let position; // filter här konotrollera med färgen . Ta ut positio\n\n      position = charging_posts.filter(elem => elem.color.includes(moveBikeTo) ? console.log(elem[0].position) : null);\n\n      if (position !== null) {\n        console.log(position);\n      } // var lat = 59.3178 + (Math.random() * (59.3148 - 59.3178)); // lat = y\n      // var lng = 18.0549 + (Math.random() * (18.0676 - 18.0549)); //lng = x\n      // console.log(lat, lng)\n      // var lat = y_min + (Math.random() * (y_max - y_min)); // lat = y\n      // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: getLoadStationsForMovingBike,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      \"data-testid\": \"dropdown\",\n      onChange: e => {\n        setMoveBikeTo(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'noValue',\n        children: \"-- V\\xE4lj vart cykeln ska f\\xF6rflyttas --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), charging_posts.map(elem => elem !== null && /*#__PURE__*/_jsxDEV(\"option\", {\n        value: elem.color,\n        children: elem.color + \" zon\"\n      }, elem.color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \" F\\xF6rflytta cykel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoveBike, \"C61s7kTOzWMMITurnAUgpEh34rU=\");\n\n_c = MoveBike;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveBike\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/MoveBike/index.js"],"names":["React","useState","Api","MoveBike","props","charging_posts","setCharging_posts","moveBikeTo","setMoveBikeTo","getLoadStationsForMovingBike","city","getACity","map","elem","handleSubmit","console","log","bikeId","id","position","filter","color","includes","e","target","value"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C,CAHoC,CAIpC;AACA;;AAEA;AACJ;AACA;AACA;;AACI,iBAAeQ,4BAAf,GAA8C;AAC1C,QAAIC,IAAI,GAAG,MAAMR,GAAG,CAACS,QAAJ,CAAaP,KAAK,CAACM,IAAnB,CAAjB;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQL,cAAR,CAAuBO,GAAvB,CAA2BC,IAAI,IAAI;AAC/BP,MAAAA,iBAAiB,CAAC,CAACO,IAAD,CAAD,CAAjB;AACH,KAFD;AAGH,GAhBmC,CAkBpC;AACA;AACA;AACA;;;AACA,QAAMC,YAAY,GAAG,MAAM;AAEvB,QAAIP,UAAU,KAAK,IAAnB,EAAyB;AACrBQ,MAAAA,OAAO,CAACC,GAAR,CAAaT,UAAb;AACA,UAAIU,MAAM,GAAGb,KAAK,CAACc,EAAnB;AACA,UAAIC,QAAJ,CAHqB,CAIrB;;AACAA,MAAAA,QAAQ,GAAGd,cAAc,CAACe,MAAf,CAAsBP,IAAI,IAAGA,IAAI,CAACQ,KAAL,CAAWC,QAAX,CAAoBf,UAApB,IAAkCQ,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAJ,CAAQM,QAApB,CAAlC,GAAkE,IAA/F,CAAX;;AACA,UAAKA,QAAQ,KAAK,IAAlB,EAAwB;AACpBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAEH,OAToB,CAUrB;AACA;AACA;AAEA;AACA;;AAEH;AACJ,GApBD;;AAsBH,sBACO;AAAK,IAAA,OAAO,EAAIV,4BAAhB;AAAA,4BACI;AACI,qBAAY,UADhB;AAC2B,MAAA,QAAQ,EAAGc,CAAD,IAAO;AACxCf,QAAAA,aAAa,CAAEe,CAAC,CAACC,MAAF,CAASC,KAAX,CAAb;AACH,OAHD;AAAA,8BAII;AAAQ,QAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKKpB,cAAc,CAACO,GAAf,CAAmBC,IAAI,IAAIA,IAAI,KAAK,IAAT,iBACxB;AAEI,QAAA,KAAK,EAAEA,IAAI,CAACQ,KAFhB;AAAA,kBAICR,IAAI,CAACQ,KAAL,GAAa;AAJd,SACSR,IAAI,CAACQ,KADd;AAAA;AAAA;AAAA;AAAA,cADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA,mCAAM;AAAQ,QAAA,OAAO,EAAEP,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAmBA;;GA/DuBX,Q;;KAAAA,Q","sourcesContent":["import {React, useState} from \"react\";\nimport Api from \"../../api\";\nexport default function MoveBike(props) {\n\n    const [charging_posts, setCharging_posts] = useState([])\n    const [moveBikeTo, setMoveBikeTo] = useState({})\n    // Här måste jag hämta på riktigt, nu laddas endast hårdkodade värde in\n    // Har lagt upp det som det ungefär kommer se ut, kanske behöver ändra något här\n\n    /* funktionen hämtar den stad där cykeln befinner sig \n       loopar igenom och sparar position och färgkod för laddningsstationen \n       Kontrollera denna när vi har fler laddningsstationer\n       */\n    async function getLoadStationsForMovingBike() {\n        let city = await Api.getACity(props.city);\n        city[0].charging_posts.map(elem => {\n            setCharging_posts([elem])\n        })\n    }\n\n    // Vad behöver uppdateras?\n    // Scooterns plats ny long lat\n    // Uppdatera hur många som finns i föregående zon\n    // uppdatera hur många som finns i den nya zonen\n    const handleSubmit = () => {\n\n        if (moveBikeTo !== null) {\n            console.log((moveBikeTo))\n            let bikeId = props.id;\n            let position;\n            // filter här konotrollera med färgen . Ta ut positio\n            position = charging_posts.filter(elem=> elem.color.includes(moveBikeTo) ? console.log(elem[0].position) : null)\n            if ( position !== null) {\n                console.log(position)\n\n            }\n            // var lat = 59.3178 + (Math.random() * (59.3148 - 59.3178)); // lat = y\n            // var lng = 18.0549 + (Math.random() * (18.0676 - 18.0549)); //lng = x\n            // console.log(lat, lng)\n\n            // var lat = y_min + (Math.random() * (y_max - y_min)); // lat = y\n            // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n\n        }\n    }\n\n\treturn (\n        <div onClick = {getLoadStationsForMovingBike}>\n            <select \n                data-testid=\"dropdown\" onChange={(e) => {\n                setMoveBikeTo((e.target.value))\n            }}>\n                <option value={'noValue'}>-- Välj vart cykeln ska förflyttas --</option>\n                {charging_posts.map(elem => elem !== null  &&\n                    <option \n                        key={elem.color}\n                        value={elem.color}\n                    >\n                    {elem.color + \" zon\"}\n                    </option> )}\n                    \n            </select>\n            <div> <button onClick={handleSubmit}> Förflytta cykel </button> </div>\n        </div>\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}