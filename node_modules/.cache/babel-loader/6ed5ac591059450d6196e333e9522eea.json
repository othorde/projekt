{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Invoice\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //components\n\nimport Api from '../../api'; //styles & img\n\nimport { Container } from './Form.styles'; //other\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar pointInPolygon = require('point-in-polygon');\n\nexport default function Invoice(props) {\n  _s();\n\n  //hooks\n  // måste ha resan och koordinaterna\n  // måste senare räkna ut var koordinaterna ligger och jmföra\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState(null);\n  console.log(props);\n  /* Sparara alla ladda och parkeringszoner i state */\n\n  useEffect(() => {\n    getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    setUserTrips(props.userHistory);\n    getAllCities();\n  }, [input]);\n  /* Kollar om resan slutade i en parkeringszon */\n\n  function checkIfTripEndedAtParkingZone() {\n    if (props && props.userHistory) {\n      let res = false;\n      var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n      allParkingZones.forEach(element => {\n        let polyGon = [[element.position.polygonePart1.lat, element.position.polygonePart1.lng], [element.position.polygonePart2.lat, element.position.polygonePart2.lng], [element.position.polygonePart3.lat, element.position.polygonePart3.lng], [element.position.polygonePart4.lat, element.position.polygonePart4.lng]];\n        res = checkIfPointInPolyGon(tripEnded, polyGon);\n        console.log(res);\n      });\n    }\n  }\n\n  function checkIfTripEndedAtChargingPost() {\n    if (props && props.userHistory) {\n      let res = false;\n      var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n      allCharging_posts.forEach(element => {\n        let polyGon = [[element.position.polygonePart1.lat, element.position.polygonePart1.lng], [element.position.polygonePart2.lat, element.position.polygonePart2.lng], [element.position.polygonePart3.lat, element.position.polygonePart3.lng], [element.position.polygonePart4.lat, element.position.polygonePart4.lng]];\n        res = checkIfPointInPolyGon(tripEnded, polyGon);\n        console.log(res);\n      });\n    }\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  async function calculateCost() {\n    checkIfTripEndedAtParkingZone();\n    checkIfTripEndedAtChargingPost();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: calculateCost,\n    children: \"Faktura\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Invoice, \"ivdjPMGvEswYXy1g3VEWLzd39lU=\");\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Invoice/index.js"],"names":["React","useEffect","useState","useRef","Api","Container","pointInPolygon","require","Invoice","props","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","console","log","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","userHistory","input","checkIfTripEndedAtParkingZone","res","tripEnded","stop","position","lat","lng","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","checkIfTripEndedAtChargingPost","point","polygone","calculateCost"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n\n//components\nimport Api from '../../api'\n//styles & img\nimport {Container} from './Form.styles'\n//other\nvar pointInPolygon = require('point-in-polygon');\n\nexport default function Invoice(props) {\n\t//hooks\n    // måste ha resan och koordinaterna\n    // måste senare räkna ut var koordinaterna ligger och jmföra\n\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState(null);\n    console.log(props)\n\n    /* Sparara alla ladda och parkeringszoner i state */\n \n\n    useEffect(() => {\n            getAllCities = async () => {\n\n            let allCities = await Api.getAllCitys();\n            allCities.forEach(element => {\n                setAllCharging_posts(element.charging_posts)\n                setAllParkingZones(element.parking_zones)\n            });\n        }\n        setUserTrips(props.userHistory)\n\n        getAllCities()\n\n    }, [input])\n\n\n    /* Kollar om resan slutade i en parkeringszon */\n    function checkIfTripEndedAtParkingZone() {\n        if(props && props.userHistory) {\n            let res = false;\n            var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n            allParkingZones.forEach(element => {\n                let polyGon=[\n                    [element.position.polygonePart1.lat,\n                    element.position.polygonePart1.lng],\n                    [element.position.polygonePart2.lat,\n                    element.position.polygonePart2.lng],\n                    [element.position.polygonePart3.lat,\n                    element.position.polygonePart3.lng],\n                    [element.position.polygonePart4.lat,\n                    element.position.polygonePart4.lng]\n                ]\n                res = checkIfPointInPolyGon(tripEnded, polyGon);\n                console.log(res)\n            });\n        }\n    }\n\n    function checkIfTripEndedAtChargingPost() {\n        if(props && props.userHistory) {\n            let res = false;\n            var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n            allCharging_posts.forEach(element => {\n                let polyGon=[\n                    [ element.position.polygonePart1.lat, element.position.polygonePart1.lng],\n                    [element.position.polygonePart2.lat, element.position.polygonePart2.lng],\n                    [element.position.polygonePart3.lat, element.position.polygonePart3.lng],\n                    [element.position.polygonePart4.lat, element.position.polygonePart4.lng ]\n                ]\n                res = checkIfPointInPolyGon(tripEnded, polyGon);\n                console.log(res)\n            });\n        }\n    }\n\n\n    function checkIfPointInPolyGon(point, polygone) {\n        return pointInPolygon(point, polygone);\n    }\n\n\n\n\n    async function calculateCost() {\n        checkIfTripEndedAtParkingZone()\n        checkIfTripEndedAtChargingPost()\n    }\n\n\treturn (\n        <button onClick={calculateCost}>Faktura</button>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}