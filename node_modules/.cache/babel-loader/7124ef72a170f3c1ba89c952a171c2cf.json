{"ast":null,"code":"import { API_URL, defaultConfigPut } from \"./config\";\nconst defaultConfig = {\n  headers: {\n    Method: 'POST',\n    'Content-Type': 'application/json',\n    \"Access-Control-Allow-Origin\": \"*\"\n  }\n};\nconst Api = {\n  getAUser: async id => {\n    try {\n      const endpoint = `${API_URL}/customers/${id}`;\n      let res = await (await fetch(endpoint)).json();\n      return res;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  getACity: async whatCity => {\n    console.log(whatCity);\n\n    try {\n      const endpoint = `${API_URL}/cities/${whatCity}`;\n      let res = await (await fetch(endpoint)).json();\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  getAllCitys: async () => {\n    try {\n      const endpoint = `${API_URL}/cities`;\n      let res = await (await fetch(endpoint)).json();\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  getAllScooters: async () => {\n    try {\n      const endpoint = `${API_URL}/scooter`;\n      let res = await (await fetch(endpoint)).json();\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  createOneDocument: async (docname, text, user) => {},\n  logginUserViaGit: async res => {\n    try {\n      const endpoint = `${API_URL}`;\n      const document = await (await fetch(endpoint, { ...defaultConfig,\n        body: JSON.stringify({\n          docname: docname,\n          text: text\n        })\n      })).json();\n      return document;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  updateAScooter: async (id, speed, battery, newPosition, logg) => {\n    try {\n      const endpoint = `${API_URL}/scooter`;\n      let res = await (await fetch(endpoint, { ...defaultConfigPut,\n        body: JSON.stringify({\n          _id: id,\n          speed: speed,\n          battery: battery // position: newPosition,\n          // logg: logg\n\n        })\n      })).json();\n      console.log(res);\n      return res;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  // EJ Gjorde som den ska, bara dummy\n  // Samma med updateUserSubscription måste skapas\n  updateUserFunds: async (addToBalance, id) => {\n    try {\n      console.log(addToBalance, id);\n      const endpoint = `${API_URL}/customers/balance`;\n      let res;\n      res = await (await fetch(endpoint, { ...defaultConfigPut,\n        body: JSON.stringify({\n          _id: id,\n          balance: addToBalance\n        })\n      })).json();\n      console.log(res.data.result);\n\n      if (res.data.result === \"Object: 619b5e6fe8cf630e43c0aff4 updated\") {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\nexport default Api;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/api.js"],"names":["API_URL","defaultConfigPut","defaultConfig","headers","Method","Api","getAUser","id","endpoint","res","fetch","json","error","console","log","getACity","whatCity","data","getAllCitys","getAllScooters","createOneDocument","docname","text","user","logginUserViaGit","document","body","JSON","stringify","updateAScooter","speed","battery","newPosition","logg","_id","updateUserFunds","addToBalance","balance","result"],"mappings":"AACA,SAASA,OAAT,EAAkBC,gBAAlB,QAA0C,UAA1C;AAGA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,OAAO,EAAE;AACFC,IAAAA,MAAM,EAAE,MADN;AAER,oBAAgB,kBAFR;AAGF,mCAA+B;AAH7B;AADY,CAAtB;AASA,MAAMC,GAAG,GAAI;AAGTC,EAAAA,QAAQ,EAAE,MAAMC,EAAN,IAAa;AACnB,QAAI;AACA,YAAMC,QAAQ,GAAI,GAAER,OAAQ,cAAaO,EAAG,EAA5C;AACA,UAAIE,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACA,aAAOF,GAAP;AACH,KAJD,CAIE,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAXQ;AAaTG,EAAAA,QAAQ,EAAE,MAAOC,QAAP,IAAoB;AAC1BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,QAAI;AACA,YAAMR,QAAQ,GAAI,GAAER,OAAQ,WAAUgB,QAAS,EAA/C;AACA,UAAIP,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACA,aAAOF,GAAG,CAACQ,IAAX;AACH,KAJD,CAIE,OAAOL,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACP,GAtBW;AAwBTM,EAAAA,WAAW,EAAE,YAAY;AACrB,QAAI;AACA,YAAMV,QAAQ,GAAI,GAAER,OAAQ,SAA5B;AACA,UAAIS,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACA,aAAOF,GAAG,CAACQ,IAAX;AACH,KAJD,CAIE,OAAOL,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACP,GAhCW;AAkCTO,EAAAA,cAAc,EAAE,YAAY;AACxB,QAAI;AACA,YAAMX,QAAQ,GAAI,GAAER,OAAQ,UAA5B;AACA,UAAIS,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACA,aAAOF,GAAG,CAACQ,IAAX;AACH,KAJD,CAIE,OAAOL,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACP,GA1CW;AA8CZQ,EAAAA,iBAAiB,EAAE,OAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,IAAtB,KAA+B,CAGjD,CAjDW;AAmDTC,EAAAA,gBAAgB,EAAE,MAAOf,GAAP,IAAgB;AAE9B,QAAI;AACA,YAAMD,QAAQ,GAAI,GAAER,OAAQ,EAA5B;AACA,YAAMyB,QAAQ,GAAG,MAAM,CACnB,MAAMf,KAAK,CAACF,QAAD,EAAW,EACpB,GAAGN,aADiB;AAEpBwB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB;AAACP,UAAAA,OAAO,EAAEA,OAAV;AAAmBC,UAAAA,IAAI,EAAEA;AAAzB,SAAhB;AAFc,OAAX,CADQ,EAKnBX,IALmB,EAAvB;AAMA,aAAOc,QAAP;AACH,KATD,CASE,OAAOb,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,GAlEQ;AAoETiB,EAAAA,cAAc,EAAE,OAAOtB,EAAP,EAAWuB,KAAX,EAAkBC,OAAlB,EAA2BC,WAA3B,EAAwCC,IAAxC,KAAiD;AAC7D,QAAI;AACA,YAAMzB,QAAQ,GAAI,GAAER,OAAQ,UAA5B;AAEA,UAAIS,GAAG,GAAG,MAAM,CACZ,MAAMC,KAAK,CAACF,QAAD,EAAW,EAClB,GAAGP,gBADe;AAElByB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBM,UAAAA,GAAG,EAAE3B,EADY;AAEjBuB,UAAAA,KAAK,EAAEA,KAFU;AAGjBC,UAAAA,OAAO,EAAEA,OAHQ,CAIjB;AACA;;AALiB,SAAf;AAFY,OAAX,CADC,EAUJpB,IAVI,EAAhB;AAWAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,aAAOA,GAAP;AACH,KAhBD,CAgBE,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAaF,KAAb;AACH;AACP,GAxFW;AA0FT;AACA;AAEAuB,EAAAA,eAAe,EAAE,OAAOC,YAAP,EAAqB7B,EAArB,KAA4B;AACzC,QAAI;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYsB,YAAZ,EAA0B7B,EAA1B;AACA,YAAMC,QAAQ,GAAI,GAAER,OAAQ,oBAA5B;AACA,UAAIS,GAAJ;AACAA,MAAAA,GAAG,GAAG,MAAM,CACR,MAAMC,KAAK,CAACF,QAAD,EAAW,EAClB,GAAGP,gBADe;AAElByB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBM,UAAAA,GAAG,EAAE3B,EADY;AAEjB8B,UAAAA,OAAO,EAAED;AAFQ,SAAf;AAFY,OAAX,CADH,EAOJzB,IAPI,EAAZ;AAQAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACQ,IAAJ,CAASqB,MAArB;;AAEA,UAAG7B,GAAG,CAACQ,IAAJ,CAASqB,MAAT,KAAoB,0CAAvB,EAAmE;AAC/D,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ,KAnBD,CAmBE,OAAO1B,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAaF,KAAb;AACH;AACP;AApHW,CAAb;AAwHA,eAAeP,GAAf","sourcesContent":["\nimport { API_URL, defaultConfigPut } from \"./config\";\n\n\nconst defaultConfig = {\n\theaders: {\n        Method: 'POST',\n\t\t'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\"\n\t},\n};\n\n\nconst Api =  {\n\n\n    getAUser: async(id) => {\n        try {\n            const endpoint = `${API_URL}/customers/${id}`;\n            let res = await (await fetch(endpoint)).json();\n            return res\n        } catch (error) {\n            console.log(error)\n        }\n    },\n\n    getACity: async (whatCity) => {\n        console.log(whatCity)\n        try {\n            const endpoint = `${API_URL}/cities/${whatCity}`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            console.log(error)\n        }\n\t},\n\n    getAllCitys: async () => {\n        try {\n            const endpoint = `${API_URL}/cities`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            console.log(error)\n        }\n\t},\n\n    getAllScooters: async () => {\n        try {\n            const endpoint = `${API_URL}/scooter`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            console.log(error)\n        }\n\t},\n\n\n\n\tcreateOneDocument: async (docname, text, user) => {\n\n\t\n\t},\n\n    logginUserViaGit: async (res)  => {\n\n        try {\n            const endpoint = `${API_URL}`\n            const document = await (\n                await fetch(endpoint, {\n                  ...defaultConfig,\n                  body: JSON.stringify( {docname: docname, text: text} )\n                })\n              ).json();\n            return document;\n        } catch (error) {\n            console.log(error)\n        }\n\n    },\n\n    updateAScooter: async (id, speed, battery, newPosition, logg) => {\n        try {\n            const endpoint = `${API_URL}/scooter`;\n\n            let res = await (\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        _id: id,\n                        speed: speed,\n                        battery: battery\n                        // position: newPosition,\n                        // logg: logg\n                    })\n                    })).json();\n            console.log(res)\n            return res\n        } catch (error) {\n            console.log((error))\n        }\n\t},\n\n    // EJ Gjorde som den ska, bara dummy\n    // Samma med updateUserSubscription måste skapas\n\n    updateUserFunds: async (addToBalance, id) => {\n        try {\n            console.log(addToBalance, id)\n            const endpoint = `${API_URL}/customers/balance`;\n            let res;\n            res = await (\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        _id: id,\n                        balance: addToBalance,\n                    })\n                })).json();\n            console.log(res.data.result)\n            \n            if(res.data.result === \"Object: 619b5e6fe8cf630e43c0aff4 updated\") {\n                return true\n            } else {\n                return false\n            }\n        } catch (error) {\n            console.log((error))\n        }\n\t},\n\n}\n\nexport default Api\n"]},"metadata":{},"sourceType":"module"}