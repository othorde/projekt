{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{React,useEffect,useState,useRef}from\"react\";//googlemap\nimport GoogleMapReact from\"google-map-react\";//components\n//styles & img\nimport{Style}from'./Form.styles';import person from'../../images/person.png';import{jsx as _jsx}from\"react/jsx-runtime\";export default function MapContainer(_ref){var showMapForUser=_ref.showMapForUser;var Marker=function Marker(_ref2){var children=_ref2.children;return/*#__PURE__*/_jsx(\"div\",{children:children});};var mapRef=useRef();var _useState=useState({start:{},stop:{}}),_useState2=_slicedToArray(_useState,2),coordinates=_useState2[0],setCoordinates=_useState2[1];useEffect(function(){function setCoord(){setCoordinates({startLat:parseFloat(showMapForUser.startCoord[0]),startLng:parseFloat(showMapForUser.startCoord[1]),stopLat:parseFloat(showMapForUser.stopCoord[0]),stopLng:parseFloat(showMapForUser.stopCoord[1])});}setCoord();},[showMapForUser.stopCoord,showMapForUser.startCoord]);function placePolyLine(){var polyCoordinates=[{lat:coordinates.startLat,lng:coordinates.startLng},{lat:coordinates.stopLat,lng:coordinates.stopLng}];var lineSymbol={path:mapRef.current.maps.SymbolPath.FORWARD_CLOSED_ARROW,strokeColor:\"#DC143C\",scale:4};var polyLine=new mapRef.current.maps.Polyline({path:polyCoordinates,icons:[{icon:lineSymbol,offset:\"100%\"}],geodesic:true,strokeColor:\"black\",strokeOpacity:1.0,strokeWeight:2});polyLine.setMap(mapRef.current.map);animateCircle(polyLine);}function animateCircle(polyLine){var count=0;window.setInterval(function(){count=(count+1)%200;var icons=polyLine.get(\"icons\");icons[0].offset=count/2+\"%\";polyLine.set(\"icons\",icons);},20);}return/*#__PURE__*/_jsx(Style,{children:coordinates?/*#__PURE__*/_jsx(GoogleMapReact,{bootstrapURLKeys:{key:process.env.REACT_APP_GOOGLE_MAPS_API_KEY},center:{lat:coordinates.startLat,lng:coordinates.startLng},defaultZoom:15,yesIWantToUseGoogleMapApiInternals:true,onGoogleApiLoaded:function onGoogleApiLoaded(_ref3){var map=_ref3.map,maps=_ref3.maps;mapRef.current={map:map,maps:maps};placePolyLine();},children:/*#__PURE__*/_jsx(Marker,{lat:coordinates.startLat,lng:coordinates.startLng,children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{className:\"crime-marker\",src:person,alt:\"person\"})})},1)}):null});}","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/MapForUser/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","Style","person","MapContainer","showMapForUser","Marker","children","mapRef","start","stop","coordinates","setCoordinates","setCoord","startLat","parseFloat","startCoord","startLng","stopLat","stopCoord","stopLng","placePolyLine","polyCoordinates","lat","lng","lineSymbol","path","current","maps","SymbolPath","FORWARD_CLOSED_ARROW","strokeColor","scale","polyLine","Polyline","icons","icon","offset","geodesic","strokeOpacity","strokeWeight","setMap","map","animateCircle","count","window","setInterval","get","set","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\n\n//styles & img\nimport {Style} from './Form.styles'\nimport person from '../../images/person.png'\n\nexport default function MapContainer({showMapForUser}) {\n\n\tconst Marker = ({ children }) => <div>{children}</div>;\n\tconst mapRef = useRef();\n\tconst [coordinates, setCoordinates] = useState({start: {}, stop: {}})\n\n\tuseEffect(() => {\n\t\tfunction setCoord () {\n\t\t\tsetCoordinates({\n\t\t\t\tstartLat: parseFloat(showMapForUser.startCoord[0]),\n\t\t\t\tstartLng: parseFloat(showMapForUser.startCoord[1]),\n\t\t\t\tstopLat: parseFloat(showMapForUser.stopCoord[0]),\n\t\t\t\tstopLng: parseFloat(showMapForUser.stopCoord[1]),\n\t\t\t})\n\t\t}\n\t\tsetCoord()\n\t}, [showMapForUser.stopCoord, showMapForUser.startCoord])\n\n\n\tfunction placePolyLine() {\n\t\t\n\t\tconst polyCoordinates = [\n\t\t  { lat: coordinates.startLat, lng: coordinates.startLng },\n\t\t  { lat: coordinates.stopLat, lng: coordinates.stopLng },\n\t\t];\n\n\t\tconst lineSymbol = {\n\t\tpath: mapRef.current.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n\t\tstrokeColor: \"#DC143C\",\n\t\tscale: 4,\n\t\t  };\n\t\tconst polyLine = new mapRef.current.maps.Polyline({\n\t\t  path: polyCoordinates,\n\t\t  icons:[{\n\t\t\t  \ticon: lineSymbol,\n\t\t\t\toffset: \"100%\",\n\t\t\t}],\n\t\t  geodesic: true,\n\t\t  strokeColor: \"black\",\n\t\t  strokeOpacity: 1.0,\n\t\t  strokeWeight: 2,\n\t\t});\n\t\tpolyLine.setMap(mapRef.current.map);\n\t\tanimateCircle(polyLine);\n\n\t}\n\n\n\tfunction animateCircle(polyLine) {\n\t\tlet count = 0;\n\t  \n\t\twindow.setInterval(() => {\n\t\t  count = (count + 1) % 200;\n\t\t  const icons = polyLine.get(\"icons\");\n\t\t  icons[0].offset = count / 2 + \"%\";\n\t\t  polyLine.set(\"icons\", icons);\n\t\t}, 20);\n\t  }\n\t  \n\n\treturn (\n\t\t<Style>\n\t\t\t{coordinates ? \n\t\t\t<GoogleMapReact \n\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\tcenter={{ \n\t\t\t\t\tlat: coordinates.startLat, \n\t\t\t\t\tlng: coordinates.startLng\n\t\t\t\t}}\n\t\t\t\tdefaultZoom={15}\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\tonGoogleApiLoaded= {({map, maps}) => {\n\t\t\t\t\tmapRef.current = {map, maps};\n\t\t\t\t\tplacePolyLine();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t<Marker\n\t\t\t\tkey={1} \n\t\t\t\tlat={coordinates.startLat}\n\t\t\t\tlng={coordinates.startLng}\n\t\t\t>\n\t\t\t\t<div >\n\t\t\t\t\t<img className = \"crime-marker\" src={person} alt=\"person\" />\n\t\t\t\t</div>\t\n\t\t\t</Marker>\n\t\t\t</GoogleMapReact>\n\t\t\t: null}\n\t\t</Style>\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}