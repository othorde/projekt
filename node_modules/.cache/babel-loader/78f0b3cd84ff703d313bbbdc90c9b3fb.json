{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Oauth\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { RequestAuthorizationCode } from \"react-oauth2-auth-code-flow\";\nimport ClientOAuth2 from \"client-oauth2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst oauthClient = new ClientOAuth2({\n  clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n  clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n  accessTokenUri: `https://github.com/login/oauth/access_token`,\n\n  /* måste va rätt */\n  authorizationUri: \"https://github.com/login/oauth/authorize\",\n\n  /* måste ocksåva rätt */\n  redirectUri: \"http://localhost:3000/login/home\",\n  scopes: [\"identity\"]\n});\n\nconst SendToDropbox = () => {\n  _s();\n\n  const [stats, setStats] = useState({});\n\n  const RenderProp = oauthClient => /*#__PURE__*/_jsxDEV(RequestAuthorizationCode, { ...props,\n    render: _ref => {\n      let {\n        url\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}`,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: RenderProp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendToDropbox, \"6N8J0h1ibJTUawvtEXwzOJTg3gc=\");\n\n_c = SendToDropbox;\nexport default SendToDropbox; // import React, {useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { RequestAuthorizationCode } from \"react-oauth2-auth-code-flow\";\n// import ClientOAuth2 from \"client-oauth2\";\n// import { AuthorizationCodeCallback  } from \"react-oauth2-auth-code-flow\";\n// //styles\n// import { Wrapper, Content, SignIn, Delimiter, ScooterImg } from './Form.styles.js'\n// import scooterPic from '../../images/scooter.png'\n// //other\n// import AppContext from '../../AppContext';\n// import Api from \"../../api.js\";\n// require('dotenv').config()\n// const oauthClient = new ClientOAuth2({\n//     clientId: process.env.GITHUB_CLIENT_ID,\n//     clientSecret: process.env.GITHUB_CLIENT_SECRET,\n//     accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n//     authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n//     redirectUri: \"http://localhost:3000/login/home\",\n//     scopes: [\"identity\"],\n// });\n// const Oauth = () => {\n//     console.log(\"HEJ\")\n//     const handleSubmit2 = async (event)  => {\n//         // kontrollera inlogg, kolla med servern om användaruppg är ok\n//         // nu sparar jag lösen som vnaligt lösen, fixa\n//         let res = oauthClient;\n//         console.log(res)\n//         // localStorage.setItem('user', JSON.stringify(inputs));\n//         // myContext.toggleAuth(true);\n//         // navigate(\"/home\")\n//         event.preventDefault();\n//     }\n//     handleSuccess = async (accessToken, { response, state }) => {\n//           console.log(\"Successfully authorized\");\n//           await setProfileFromDropbox(accessToken);\n//           await redirect(state.from);\n//         };\n//     handleError = (error) => {\n//           console.error(\"An error occurred\");\n//           console.error(error.message);\n//         };\n//     return (\n//         <Wrapper>\n//         <AuthorizationCodeCallback\n//             oauthClient={oauthClient}\n//             onAuthSuccess={handleSuccess()}\n//             onAuthError={handleError()}\n//             render={({ processing, state, error }) => (\n//                 <div>\n//                 {processing && <p>Authorizing now...</p>}\n//                 {error && (\n//                     <p className=\"error\">An error occurred: {error.message}</p>\n//                 )}\n//                 </div>\n//             )}\n//         />\n//         </Wrapper>\n//       );\n// }\n// export default Oauth\n\nvar _c;\n\n$RefreshReg$(_c, \"SendToDropbox\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Oauth/index.js"],"names":["React","Component","useState","RequestAuthorizationCode","ClientOAuth2","require","config","oauthClient","clientId","process","env","REACT_APP_GITHUB_CLIENT_ID","clientSecret","REACT_APP_GITHUB_CLIENT_SECRET","accessTokenUri","authorizationUri","redirectUri","scopes","SendToDropbox","stats","setStats","RenderProp","props","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,wBAAT,QAAyC,6BAAzC;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGA,MAAMC,WAAW,GAAG,IAAIH,YAAJ,CAAiB;AACjCI,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADW;AAEjCC,EAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFO;AAGjCC,EAAAA,cAAc,EAAG,6CAHgB;;AAG8B;AAC/DC,EAAAA,gBAAgB,EAAE,0CAJe;;AAI6B;AAC9DC,EAAAA,WAAW,EAAE,kCALoB;AAMjCC,EAAAA,MAAM,EAAE,CAAC,UAAD;AANyB,CAAjB,CAApB;;AAgBA,MAAMC,aAAa,GAAG,MAAO;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMmB,UAAU,GAAId,WAAD,iBACf,QAAC,wBAAD,OACMe,KADN;AAEE,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,0BAAa;AAAG,QAAA,IAAI,EAAG,sDAAqDd,OAAO,CAACC,GAAR,CAAYC,0BAA2B,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,UADJ;;AAWA,sBACI;AAAQ,IAAA,OAAO,EAAIU;AAAnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAjBD;;GAAMH,a;;KAAAA,a;AAmBN,eAAeA,aAAf,C,CAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { RequestAuthorizationCode } from \"react-oauth2-auth-code-flow\";\nimport ClientOAuth2 from \"client-oauth2\";\nrequire('dotenv').config()\n\n\nconst oauthClient = new ClientOAuth2({\n    clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n    clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n    accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n    authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n    redirectUri: \"http://localhost:3000/login/home\",\n    scopes: [\"identity\"],\n});\n\n\n\n\n\n\n\n\nconst SendToDropbox = ()  => {\n    const [stats, setStats] = useState({})\n\n    const RenderProp = (oauthClient, ) => (\n        <RequestAuthorizationCode\n          {...props}\n          render={({ url }) => <a href={`https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}`}>Connect</a>}\n        />\n      );\n    \n    \n\n\n\n    return (\n        <button onClick = {RenderProp}></button>\n    );\n}\n\nexport default SendToDropbox\n\n\n\n\n\n\n\n// import React, {useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { RequestAuthorizationCode } from \"react-oauth2-auth-code-flow\";\n// import ClientOAuth2 from \"client-oauth2\";\n// import { AuthorizationCodeCallback  } from \"react-oauth2-auth-code-flow\";\n\n// //styles\n// import { Wrapper, Content, SignIn, Delimiter, ScooterImg } from './Form.styles.js'\n// import scooterPic from '../../images/scooter.png'\n\n// //other\n// import AppContext from '../../AppContext';\n// import Api from \"../../api.js\";\n// require('dotenv').config()\n\n\n// const oauthClient = new ClientOAuth2({\n//     clientId: process.env.GITHUB_CLIENT_ID,\n//     clientSecret: process.env.GITHUB_CLIENT_SECRET,\n//     accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n//     authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n//     redirectUri: \"http://localhost:3000/login/home\",\n//     scopes: [\"identity\"],\n// });\n\n\n// const Oauth = () => {\n//     console.log(\"HEJ\")\n\n\n  \n//     const handleSubmit2 = async (event)  => {\n//         // kontrollera inlogg, kolla med servern om användaruppg är ok\n//         // nu sparar jag lösen som vnaligt lösen, fixa\n        \n\n//         let res = oauthClient;\n//         console.log(res)\n//         // localStorage.setItem('user', JSON.stringify(inputs));\n//         // myContext.toggleAuth(true);\n//         // navigate(\"/home\")\n//         event.preventDefault();\n//     }\n\n\n    \n//     handleSuccess = async (accessToken, { response, state }) => {\n//           console.log(\"Successfully authorized\");\n//           await setProfileFromDropbox(accessToken);\n//           await redirect(state.from);\n//         };\n      \n//     handleError = (error) => {\n//           console.error(\"An error occurred\");\n//           console.error(error.message);\n//         };\n\n//     return (\n//         <Wrapper>\n//         <AuthorizationCodeCallback\n//             oauthClient={oauthClient}\n//             onAuthSuccess={handleSuccess()}\n//             onAuthError={handleError()}\n//             render={({ processing, state, error }) => (\n//                 <div>\n//                 {processing && <p>Authorizing now...</p>}\n//                 {error && (\n//                     <p className=\"error\">An error occurred: {error.message}</p>\n//                 )}\n//                 </div>\n//             )}\n//         />\n//         </Wrapper>\n//       );\n// }\n\n// export default Oauth\n"]},"metadata":{},"sourceType":"module"}