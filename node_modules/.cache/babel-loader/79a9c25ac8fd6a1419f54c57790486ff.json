{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\routes\\\\History\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from \"react\"; //components\n\nimport MapForUser from '../../components/MapForUser/index';\nimport Invoice from \"../../components/Invoice\"; //styles\n\nimport { Container, Main, UserHistory, MapContainer } from './Form.styles'; //other\n\nimport Api from \"../../api\";\nimport Appcontext from '../../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  showMap: false,\n  startCoord: \"\",\n  stopCoord: \"\"\n};\n\nconst History = props => {\n  _s();\n\n  const [userHistory, setUserHistory] = useState([]);\n  const [showMapForUser, setShowMapForUser] = useState(initialValue);\n  const [message, setMessage] = useState(\"Loading.....\");\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n  const [userInvoice, setUserInvoice] = useState([]);\n  const myContext = useContext(Appcontext);\n  let user = myContext.userHook;\n  let data;\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    setUserTrips(props);\n  }, [props]);\n  useEffect(() => {\n    console.log(\"IGÅMGM\", userInvoice);\n  }, [setUserInvoice, userInvoice]);\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    userTrips.props.forEach(trip => {\n      var startFee = 10;\n      var discount = 0;\n      let time = getTimeOfTrip(trip.start.time, trip.stop.time);\n      let timeFee = 2.5 * time;\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n      var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n      var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n      var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n      var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n      /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n\n      if (startAtParkingZone === undefined || startChargePoint === undefined) {\n        if (endedAtParkingZone === true || endedAtChargePoint === true) {\n          startFee = startFee * 0.85;\n          discount = 10 - startFee;\n        }\n      }\n\n      const atrip = {\n        tripId: trip.id,\n        date: trip.date,\n        startTime: trip.start.time,\n        stopTime: trip.stop.time,\n        startAtParkingZone: startAtParkingZone,\n        endedAtParkingZone: endedAtParkingZone,\n        startChargePoint: startChargePoint,\n        endedAtChargePoint: endedAtChargePoint,\n        timeOfTrip: time,\n        startFee: startFee,\n        timeFee: timeFee,\n        discount: discount,\n        totalCost: timeFee + startFee\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips); //return userInvoice\n  }\n  /*  loopara igenom alla chargingposts, \n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInParkingZone(tripEnded) {\n    let res;\n\n    for (var elem of allParkingZones) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /*  loopara igenom alla chargingposts,\n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInChargingPost(tripEnded) {\n    let res;\n\n    for (var elem of allCharging_posts) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /* Räknar ut tiden för resan, gör om till sekunder \n      subtraherar och dividerar för att få ut minuter\n  */\n\n\n  function getTimeOfTrip(starttime, stoptime) {\n    var arrStarttime = starttime.split(\".\");\n    var arrStoptime = stoptime.split(\".\");\n    arrStarttime[0] = arrStarttime[0] * 60 * 60;\n    arrStarttime[1] = arrStarttime[1] * 60;\n    arrStoptime[0] = arrStoptime[0] * 60 * 60;\n    arrStoptime[1] = arrStoptime[1] * 60;\n    var stopTime = arrStoptime[0] + arrStoptime[1];\n    var startTime = arrStarttime[0] + arrStarttime[1];\n    var time = (stopTime - startTime) / 60;\n    return time;\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      if (user && user.value.id) {\n        let id = user.value.id;\n        /* Om props läs därifrån */\n\n        if (props && props.customer) {\n          id = props.customer.id;\n        }\n\n        let res = await Api.getAUser(id);\n\n        if (res && res.data) {\n          data = res.data;\n\n          if (data.trips.length > 0) {\n            setUserHistory(data.trips);\n          } else {\n            setMessage(\"Ingen resa gjord\");\n          }\n        }\n      }\n    }\n\n    fetchData();\n  }, [user]); // räknar ut tiden som resan tog\n\n  const calculateTravelTime = (startTime, stopTime) => {\n    let hours;\n    let minutes;\n    let splitStart;\n    let splitStop;\n\n    if (startTime && stopTime) {\n      splitStart = startTime.split(\".\");\n      splitStop = stopTime.split(\".\");\n      hours = splitStop[0] - splitStart[0];\n      minutes = splitStop[1] - splitStart[1];\n\n      if (hours !== 0) {\n        return `${hours} h ${minutes} min`;\n      }\n\n      return `${minutes} min`;\n    }\n\n    return `hmm, något gick snett`;\n  }; /// visa karta\n\n\n  function showMap(startCoord, stopCoord, e) {\n    let pageY = e.pageY;\n\n    if (props && props.customer) {\n      pageY = pageY - 200;\n    }\n\n    setShowMapForUser({\n      showMap: !showMapForUser.showMap,\n      startCoord: startCoord,\n      stopCoord: stopCoord,\n      pageY: pageY\n    });\n  }\n\n  useEffect(() => {}, [showMapForUser, setShowMapForUser]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      showMap: showMapForUser.showMap,\n      children: /*#__PURE__*/_jsxDEV(UserHistory, {\n        children: [/*#__PURE__*/_jsxDEV(Invoice, {\n          props: userHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n            children: [\" \", props && props.customer ? `${props.customer.username} Historik` : `Din Historik`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Starttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Sluttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Total tid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Visa p\\xE5 karta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Kostnad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userHistory.length > 0 ? userHistory.map(elem => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Datum\",\n                children: [\" \", elem.date, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Starttid\",\n                children: [\" \", elem.start.time, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Sluttid\",\n                children: [elem.stop.time, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Total tid\",\n                children: [calculateTravelTime(elem.start.time, elem.stop.time), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Visa p\\xE5 karta\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button vertical-align:middle\",\n                  onClick: e => showMap(elem.start.position, elem.stop.position, e),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"F\\xE4rd \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 82\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Kostnad\",\n                children: [elem.price, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 900\n              },\n              children: [\" \", message, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      showMap: showMapForUser.showMap,\n      pageY: showMapForUser.pageY,\n      children: showMapForUser.showMap && /*#__PURE__*/_jsxDEV(MapForUser, {\n        showMapForUser: showMapForUser,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n};\n\n_s(History, \"BGU/xYqaXvZ8QwJ345qcXlTLSwY=\");\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/routes/History/index.js"],"names":["React","useState","useEffect","useContext","MapForUser","Invoice","Container","Main","UserHistory","MapContainer","Api","Appcontext","initialValue","showMap","startCoord","stopCoord","History","props","userHistory","setUserHistory","showMapForUser","setShowMapForUser","message","setMessage","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","userInvoice","setUserInvoice","myContext","user","userHook","data","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","console","log","checkAllUsersTrips","arrayOfTrips","trip","startFee","discount","time","getTimeOfTrip","start","stop","timeFee","tripEnded","position","lat","lng","tripStarted","startAtParkingZone","checkIfCoordInParkingZone","endedAtParkingZone","startChargePoint","checkIfCoordInChargingPost","endedAtChargePoint","undefined","atrip","tripId","id","date","startTime","stopTime","timeOfTrip","totalCost","push","res","elem","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","starttime","stoptime","arrStarttime","split","arrStoptime","point","polygone","pointInPolygon","fetchData","value","customer","getAUser","trips","length","calculateTravelTime","hours","minutes","splitStart","splitStop","e","pageY","username","map","price","fontWeight"],"mappings":"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","sourcesContent":["import {React, useState, useEffect, useContext} from \"react\";\n\n//components\nimport MapForUser from '../../components/MapForUser/index'\nimport Invoice from \"../../components/Invoice\";\n//styles\nimport {Container, Main, UserHistory, MapContainer} from './Form.styles'\n//other\nimport Api from \"../../api\";\nimport Appcontext from '../../AppContext'\n\nconst initialValue = {\n    showMap: false,\n    startCoord: \"\",\n    stopCoord: \"\",\n}\n\nconst History = (props)  => {\n\n    const [userHistory, setUserHistory] = useState([]);\n    const [showMapForUser, setShowMapForUser] = useState(initialValue);\n    const [message, setMessage] = useState(\"Loading.....\");\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState([]);\n    const [userInvoice, setUserInvoice] = useState([])\n\n\n    const myContext = useContext(Appcontext)\n    let user = myContext.userHook;\n    let data;\n   \n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        setUserTrips(props)\n\n    }, [props])\n\n    useEffect(() => {\n        console.log(\"IGÅMGM\", userInvoice)\n\n    }, [setUserInvoice, userInvoice])\n\n    \n    function checkAllUsersTrips() {\n        let arrayOfTrips = []\n        \n        userTrips.props.forEach(trip => {\n            var startFee = 10;\n            var discount = 0;\n            let time = getTimeOfTrip(trip.start.time, trip.stop.time)\n            let timeFee = 2.5 * time;\n\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n            var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n            var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n            var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n            var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n\n            /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n            if(startAtParkingZone === undefined || startChargePoint === undefined) {\n                if (endedAtParkingZone === true || endedAtChargePoint === true) {\n                    startFee = startFee * 0.85;\n                    discount = 10 - startFee;\n                }\n            }\n\n            const atrip = { \n\t\t\t\ttripId: trip.id,\n                date: trip.date,\n                startTime: trip.start.time,\n                stopTime: trip.stop.time,\n                startAtParkingZone: startAtParkingZone,\n                endedAtParkingZone: endedAtParkingZone,\n                startChargePoint: startChargePoint,\n                endedAtChargePoint: endedAtChargePoint,\n                timeOfTrip: time,\n                startFee: startFee,\n                timeFee: timeFee,\n                discount: discount,\n                totalCost: (timeFee + startFee)\n\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n        //return userInvoice\n    }\n\n    \n    /*  loopara igenom alla chargingposts, \n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInParkingZone(tripEnded) {\n        let res;\n        for (var elem of allParkingZones) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n        }\n    }\n\n    /*  loopara igenom alla chargingposts,\n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInChargingPost(tripEnded) {\n        let res;\n        for (var elem of allCharging_posts) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n       } \n    }\n\n    /* Räknar ut tiden för resan, gör om till sekunder \n        subtraherar och dividerar för att få ut minuter\n    */\n    function getTimeOfTrip(starttime, stoptime) {\n\n        var arrStarttime = starttime.split(\".\");\n        var arrStoptime = stoptime.split(\".\"); \n\n        arrStarttime[0] = arrStarttime[0] * 60 * 60;\n        arrStarttime[1] = arrStarttime[1] * 60;\n        arrStoptime[0] = arrStoptime[0] * 60 * 60;\n        arrStoptime[1] = arrStoptime[1] * 60;\n        \n        var stopTime = arrStoptime[0] + arrStoptime[1];\n        var startTime = arrStarttime[0] + arrStarttime[1];\n        var time = (stopTime - startTime) / 60;\n\n        return time\n    }\n\n    function checkIfPointInPolyGon(point, polygone) {\n\n        return pointInPolygon(point, polygone);\n    }\n\n\n\n    useEffect(() => {\n        async function fetchData() {\n            if(user && user.value.id) {\n                let id = user.value.id;\n                /* Om props läs därifrån */\n                if(props && props.customer) {\n                    id = props.customer.id;\n                }\n                let res = await Api.getAUser(id);\n                if (res && res.data) {\n\n                    data = res.data;\n\n                    if(data.trips.length > 0) {\n                        setUserHistory(data.trips)\n                    } else {\n                        setMessage(\"Ingen resa gjord\")\n                    }\n                }\n            }\n        }\n        fetchData();\n    }, [user])\n\n\n    // räknar ut tiden som resan tog\n    const calculateTravelTime = (startTime, stopTime) => {\n        let hours;\n        let minutes;\n        let splitStart;\n        let splitStop;\n\n        if (startTime && stopTime) {\n        \n            splitStart = startTime.split(\".\");\n            splitStop = stopTime.split(\".\");\n            hours = splitStop[0] - splitStart[0];\n            minutes = splitStop[1] - splitStart[1];\n\n            if (hours !== 0) {\n                return `${hours} h ${minutes} min`\n            } \n            return `${minutes} min`\n        } \n        return `hmm, något gick snett`\n    }\n    /// visa karta\n    function showMap(startCoord, stopCoord, e) {\n        let pageY = e.pageY;\n            if(props && props.customer) {\n                pageY = pageY - 200;\n            }\n\n\n        setShowMapForUser({\n            showMap: !showMapForUser.showMap,\n            startCoord: startCoord,\n            stopCoord: stopCoord,\n            pageY: pageY\n        })\n    }\n\n    useEffect(() => {\n      \n    }, [showMapForUser, setShowMapForUser])\n\n\treturn (\n        <Container>  \n            <Main showMap = {showMapForUser.showMap} >\n                <UserHistory> \n                <Invoice props={userHistory}></Invoice>\n                    <table>\n                    <caption> {props && props.customer ? (`${props.customer.username} Historik`) : (`Din Historik`)}</caption>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Datum</th>\n                            <th scope=\"col\">Starttid</th>\n                            <th scope=\"col\">Sluttid</th>\n                            <th scope=\"col\">Total tid</th>\n                            <th scope=\"col\">Visa på karta</th>\n                            <th scope=\"col\">Kostnad</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {userHistory.length > 0 ? (\n                    userHistory.map(elem => \n                        <tr>\n                        <td data-label=\"Datum\"> {elem.date}  </td>\n                        <td data-label=\"Starttid\"> {elem.start.time} </td>\n                        <td data-label=\"Sluttid\">{elem.stop.time} </td>\n                        <td data-label=\"Total tid\">{calculateTravelTime(elem.start.time, elem.stop.time)} </td>\n                        <td data-label=\"Visa på karta\" >\n                            { <button className=\"button vertical-align:middle\" onClick={(e) => \n                            showMap(elem.start.position, elem.stop.position, e)}><span>Färd </span></button>}\n                        </td>\n                        <td data-label=\"Kostnad\">{elem.price}:- </td>\n                        </tr>\n                    )\n                    ) : (<p style={{fontWeight: 900}}> {message} </p>)}\n                    </tbody>\n                    </table>\n                </UserHistory>\n            </Main>\n            <MapContainer showMap = {showMapForUser.showMap} pageY={showMapForUser.pageY} >\n                {showMapForUser.showMap &&\n                    <MapForUser showMapForUser = {showMapForUser}> </MapForUser>\n                }\n            </MapContainer>\n            \n\n        </Container>\n    )\n}\n\nexport default History\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}