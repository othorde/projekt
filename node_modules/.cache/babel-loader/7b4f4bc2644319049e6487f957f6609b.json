{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\cluster.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n//components\n\nimport useSuperCluster from 'use-supercluster'; //styles\n\nimport { BtnStyle } from './Form.styles';\nimport scooter from '../../images/scooter.png';\nimport useSwr from \"swr\"; // style annorlunda jmf med komponenter. Se form.styles,  \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cluster(_ref) {\n  _s();\n\n  let {\n    stateForMarker\n  } = _ref;\n  const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\";\n  const bounds = stateForMarker.bounds;\n  const zoom = stateForMarker.zoom;\n  const mapRef = stateForMarker.mapRef;\n\n  const fetcher = function () {\n    return fetch(...arguments).then(response => response.json());\n  }; //gör om denna sen\n\n\n  const Marker = _ref2 => {\n    let {\n      children\n    } = _ref2;\n    return children;\n  };\n\n  const {\n    data,\n    error\n  } = useSwr(url, fetcher); //gör om denna sen\n\n  const crimes = data && !error ? data : []; //clusters\n\n  const points = crimes.map(crime => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      category: crime.category\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.location.longitude), parseFloat(crime.location.latitude)]\n    }\n  }));\n  const {\n    clusters,\n    supercluster\n  } = useSuperCluster({\n    points,\n    bounds,\n    zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  }); // return (\n  //       <>\n  //       { stateForMarker ? (\n  //       clusters.map(cluster => {\n  //           const[longitude, latitude] = cluster.geometry.coordinates;\n  //           const {cluster : isCluster, point_count: pointCount} = cluster.properties;\n  //           if (isCluster) {\n  //               return (\n  //                   <Marker key={cluster.id} \n  //                       lat={latitude} \n  //                       lng={longitude}>\n  //                           <div \n  //                               className=\"cluster-marker\"\n  //                               style={{\n  //                                   width: `${10 + (pointCount/points.length)* 20}px`,\n  //                                   height: `${10 + (pointCount/points.length)* 20}px`\n  //                               }}\n  //                               onClick= {() => {\n  //                                   const expansionZoom = Math.min(\n  //                                       supercluster.getClusterExpansionZoom(cluster.id),\n  //                                       30\n  //                                   );\n  //                                   mapRef.current.setZoom(expansionZoom) //zoomar in om man klickar på en cluster\n  //                                   mapRef.current.panTo({lat: latitude, lng: longitude});  //sätter zoom till rätt koordinat\n  //                                   console.log(\"Här\", latitude, longitude)\n  //                               }}\n  //                               >\n  //                           {pointCount}</div>\n  //                   </Marker>\n  //               );\n  //           }\n\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    lat: latitude,\n    lng: longitude,\n    children: [console.log(longitude, latitude), /*#__PURE__*/_jsxDEV(BtnStyle, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: \"HEJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this);\n        },\n        className: \"crime-marker\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"scooter\",\n          src: scooter,\n          alt: \"scooter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, cluster.properties.crimeId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this); //       })\n  //       ) : console.log(\"HEJ\")}\n  //       </>\t\t\n  // );\n}\n\n_s(Cluster, \"ndwK0ca8usXWTuh69Itm5XF7I+E=\", false, function () {\n  return [useSwr, useSuperCluster];\n});\n\n_c = Cluster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cluster\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/cluster.js"],"names":["React","useEffect","useState","useRef","useSuperCluster","BtnStyle","scooter","useSwr","Cluster","stateForMarker","url","bounds","zoom","mapRef","fetcher","fetch","then","response","json","Marker","children","data","error","crimes","points","map","crime","type","properties","cluster","crimeId","id","category","geometry","coordinates","parseFloat","location","longitude","latitude","clusters","supercluster","options","radius","maxZoom","console","log"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\n//components\nimport useSuperCluster from 'use-supercluster';\n//styles\nimport {BtnStyle} from './Form.styles'\nimport scooter from '../../images/scooter.png'\nimport useSwr from \"swr\";\n\n\n// style annorlunda jmf med komponenter. Se form.styles,  \nexport default function Cluster({stateForMarker}) {\n\tconst url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n    \n  const bounds = stateForMarker.bounds;\n  const zoom = stateForMarker.zoom;\n  const mapRef = stateForMarker.mapRef;\n\tconst fetcher = (...args) => fetch(...args).then(response => response.json()); //gör om denna sen\n\tconst Marker = ({children}) => children;\n\tconst {data, error} = useSwr(url, fetcher) //gör om denna sen\n\tconst crimes = data && !error ? data : [];\n\t//clusters\n\tconst points = crimes.map(crime => ({\n\t\ttype: \"Feature\",\n\t\tproperties: {\n\t\t\tcluster: false,\n\t\t\tcrimeId: crime.id,\n\t\t\tcategory: crime.category\n\t\t},\n\t\tgeometry: {\n\t\t\ttype: \"Point\", \n\t\t\tcoordinates:[\n\t\t\t\tparseFloat(crime.location.longitude), \n\t\t\t\tparseFloat(crime.location.latitude)\n\t\t\t]}\n\t}))\n\n    const { clusters, supercluster } = useSuperCluster({\n\t\tpoints, \n\t\tbounds,\n\t\tzoom,\n\t\toptions: {radius:75, maxZoom:20}\n\t});\n\n    \n\t// return (\n  //       <>\n  //       { stateForMarker ? (\n  //       clusters.map(cluster => {\n  //           const[longitude, latitude] = cluster.geometry.coordinates;\n  //           const {cluster : isCluster, point_count: pointCount} = cluster.properties;\n  //           if (isCluster) {\n  //               return (\n  //                   <Marker key={cluster.id} \n  //                       lat={latitude} \n  //                       lng={longitude}>\n  //                           <div \n  //                               className=\"cluster-marker\"\n  //                               style={{\n  //                                   width: `${10 + (pointCount/points.length)* 20}px`,\n  //                                   height: `${10 + (pointCount/points.length)* 20}px`\n  //                               }}\n  //                               onClick= {() => {\n  //                                   const expansionZoom = Math.min(\n  //                                       supercluster.getClusterExpansionZoom(cluster.id),\n  //                                       30\n  //                                   );\n  //                                   mapRef.current.setZoom(expansionZoom) //zoomar in om man klickar på en cluster\n  //                                   mapRef.current.panTo({lat: latitude, lng: longitude});  //sätter zoom till rätt koordinat\n  //                                   console.log(\"Här\", latitude, longitude)\n  //                               }}\n  //                               >\n  //                           {pointCount}</div>\n  //                   </Marker>\n  //               );\n  //           }\n            return (\n\n            <Marker\n                key={cluster.properties.crimeId} \n                lat={latitude} \n                lng={longitude}>\n                 {console.log(longitude,latitude)}   \n                <BtnStyle>\n                    <button onClick= {() => {\n                            <div>HEJ</div>\n                        }}\n                        className=\"crime-marker\">\n                        <img className = \"scooter\" src={scooter} alt=\"scooter\"/>\n                    </button>\n                </BtnStyle>\n            </Marker>\n            )\n  //       })\n  //       ) : console.log(\"HEJ\")}\n  //       </>\t\t\n\t// );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}