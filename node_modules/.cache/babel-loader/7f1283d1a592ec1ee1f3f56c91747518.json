{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\PDF.js\";\nimport React from 'react';\nimport Pdf from 'react-to-pdf';\nimport DOMPurify from 'dompurify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ref = /*#__PURE__*/React.createRef();\n\nconst PDF = prop => {\n  const myHTML = prop.userInvoice;\n\n  function createMarkup() {\n    return {\n      __html: DOMPurify.sanitize(myHTML)\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Pdf, {\n      targetRef: ref,\n      filename: \"new.pdf\",\n      children: _ref => {\n        let {\n          toPdf\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toPdf,\n          children: \"Spara som PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 33\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = PDF;\nexport default PDF;\n\nvar _c;\n\n$RefreshReg$(_c, \"PDF\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/PDF.js"],"names":["React","Pdf","DOMPurify","ref","createRef","PDF","prop","myHTML","userInvoice","createMarkup","__html","sanitize","toPdf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,MAAMC,GAAG,gBAAGH,KAAK,CAACI,SAAN,EAAZ;;AAEA,MAAMC,GAAG,GAAIC,IAAD,IAAU;AAElB,QAAMC,MAAM,GAAGD,IAAI,CAACE,WAApB;;AAEA,WAASC,YAAT,GAAwB;AACpB,WAAO;AAACC,MAAAA,MAAM,EAAER,SAAS,CAACS,QAAV,CAAmBJ,MAAnB;AAAT,KAAP;AACH;;AAED,sBACI;AAAA,2BAEI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEJ,GAAhB;AAAqB,MAAA,QAAQ,EAAC,SAA9B;AAAA,gBACK;AAAA,YAAC;AAAES,UAAAA;AAAF,SAAD;AAAA,4BAAe;AAAQ,UAAA,OAAO,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAf;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAQH,CAhBD;;KAAMP,G;AAkBN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Pdf from 'react-to-pdf'\nimport DOMPurify from 'dompurify'\n\nconst ref = React.createRef()\n\nconst PDF = (prop) => {\n\n    const myHTML = prop.userInvoice;\n\n    function createMarkup() {\n        return {__html: DOMPurify.sanitize(myHTML)};\n    }\n\n    return(\n        <>\n\n            <Pdf targetRef={ref} filename=\"new.pdf\">\n                {({ toPdf }) => <button onClick={toPdf}>Spara som PDF</button>}\n            </Pdf>\n        </>\n    )\n}\n\nexport default PDF;"]},"metadata":{},"sourceType":"module"}