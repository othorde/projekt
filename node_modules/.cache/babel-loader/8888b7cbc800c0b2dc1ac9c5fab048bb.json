{"ast":null,"code":"import { API_URL } from \"./config\";\nconst Api = {\n  getACity: async whatCity => {\n    console.log(whatCity);\n\n    try {\n      const endpoint = `${API_URL}/cities${whatCity}`;\n      let res = await (await fetch(endpoint)).json();\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  getAllCitys: async () => {\n    try {\n      const endpoint = `${API_URL}/cities`;\n      let res = await (await fetch(endpoint)).json();\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  getAllScooters: async () => {\n    try {\n      const endpoint = `${API_URL}/scooter`;\n      let res = await (await fetch(endpoint)).json();\n      console.log(res.data);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  getAllCitys2: async () => {\n    const data = [{\n      _id: \"1231231\",\n      city: \" Åhus\",\n      amount_of_bikes: \"10\",\n      position: {\n        polygonePart1: {\n          lat: 56.012562,\n          lng: 14.115424\n        },\n        polygonePart2: {\n          lat: 55.925155,\n          lng: 14.073078\n        },\n        polygonePart3: {\n          lat: 55.931968,\n          lng: 14.289134\n        },\n        polygonePart4: {\n          lat: 56.037256,\n          lng: 14.306297\n        }\n      }\n    }, {\n      _id: \"123123221\",\n      city: \" Stockholm\",\n      amount_of_bikes: \"100\",\n      position: {\n        polygonePart1: {\n          lat: 59.389894,\n          lng: 17.875983\n        },\n        polygonePart2: {\n          lat: 59.152629,\n          lng: 17.868818\n        },\n        polygonePart3: {\n          lat: 59.189469,\n          lng: 18.319379\n        },\n        polygonePart4: {\n          lat: 59.484114,\n          lng: 18.359537\n        }\n      }\n    }];\n    return data;\n  }\n};\nexport default Api;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/api.js"],"names":["API_URL","Api","getACity","whatCity","console","log","endpoint","res","fetch","json","data","error","getAllCitys","getAllScooters","getAllCitys2","_id","city","amount_of_bikes","position","polygonePart1","lat","lng","polygonePart2","polygonePart3","polygonePart4"],"mappings":"AACA,SAASA,OAAT,QAAwB,UAAxB;AACA,MAAMC,GAAG,GAAI;AAETC,EAAAA,QAAQ,EAAE,MAAOC,QAAP,IAAoB;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAI;AACA,YAAMG,QAAQ,GAAI,GAAEN,OAAQ,UAASG,QAAS,EAA9C;AACA,UAAII,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACA,aAAOF,GAAG,CAACG,IAAX;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACP,GAXW;AAcTC,EAAAA,WAAW,EAAE,YAAY;AACrB,QAAI;AACA,YAAMN,QAAQ,GAAI,GAAEN,OAAQ,SAA5B;AACA,UAAIO,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACA,aAAOF,GAAG,CAACG,IAAX;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACP,GAtBW;AAwBTE,EAAAA,cAAc,EAAE,YAAY;AACxB,QAAI;AACA,YAAMP,QAAQ,GAAI,GAAEN,OAAQ,UAA5B;AACA,UAAIO,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACG,IAAhB;AACA,aAAOH,GAAG,CAACG,IAAX;AACH,KALD,CAKE,OAAOC,KAAP,EAAc;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACP,GAjCW;AAmCTG,EAAAA,YAAY,EAAE,YAAY;AACtB,UAAMJ,IAAI,GAAG,CACT;AACIK,MAAAA,GAAG,EAAE,SADT;AAEIC,MAAAA,IAAI,EAAE,OAFV;AAGIC,MAAAA,eAAe,EAAE,IAHrB;AAIIC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,aAAa,EAAE;AACXC,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SADT;AAKNC,QAAAA,aAAa,EAAE;AACXF,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SALT;AASNE,QAAAA,aAAa,EAAE;AACXH,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SATT;AAaNG,QAAAA,aAAa,EAAE;AACXJ,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM;AAbT;AAJd,KADS,EAwBT;AACIN,MAAAA,GAAG,EAAE,WADT;AAEIC,MAAAA,IAAI,EAAE,YAFV;AAGIC,MAAAA,eAAe,EAAE,KAHrB;AAIIC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,aAAa,EAAE;AACXC,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SADT;AAKNC,QAAAA,aAAa,EAAE;AACXF,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SALT;AASNE,QAAAA,aAAa,EAAE;AACXH,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SATT;AAaNG,QAAAA,aAAa,EAAE;AACXJ,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM;AAbT;AAJd,KAxBS,CAAb;AAgDA,WAAOX,IAAP;AACN;AArFW,CAAb;AAwFA,eAAeT,GAAf","sourcesContent":["\nimport { API_URL } from \"./config\";\nconst Api =  {\n\n    getACity: async (whatCity) => {\n        console.log(whatCity)\n        try {\n            const endpoint = `${API_URL}/cities${whatCity}`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            console.log(error)\n        }\n\t},\n\n\n    getAllCitys: async () => {\n        try {\n            const endpoint = `${API_URL}/cities`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            console.log(error)\n        }\n\t},\n\n    getAllScooters: async () => {\n        try {\n            const endpoint = `${API_URL}/scooter`;\n            let res = await (await fetch(endpoint)).json();\n            console.log(res.data)\n            return res.data\n        } catch (error) {\n            console.log(error)\n        }\n\t},\n\n    getAllCitys2: async () => {\n        const data = [\n            {\n                _id: \"1231231\",\n                city: \" Åhus\",\n                amount_of_bikes: \"10\",\n                position: {\n                    polygonePart1: {\n                        lat: 56.012562,\n                        lng: 14.115424 \n                    },\n                    polygonePart2: {\n                        lat: 55.925155,\n                        lng: 14.073078 \n                    },\n                    polygonePart3: {\n                        lat: 55.931968,\n                        lng: 14.289134 \n                    },\n                    polygonePart4: {\n                        lat: 56.037256,\n                        lng: 14.306297 \n                    },\n                },\n            },\n            {\n                _id: \"123123221\",\n                city: \" Stockholm\",\n                amount_of_bikes: \"100\",\n                position: {\n                    polygonePart1: {\n                        lat: 59.389894,\n                        lng: 17.875983 \n                    },\n                    polygonePart2: {\n                        lat: 59.152629,\n                        lng: 17.868818\n                    },\n                    polygonePart3: {   \n                        lat: 59.189469,\n                        lng: 18.319379\n                    },\n                    polygonePart4: {\n                        lat: 59.484114,     \n                        lng: 18.359537\n                    }\n                }\n            }\n        ]\n        return data\n\t},\n}\n\nexport default Api\n"]},"metadata":{},"sourceType":"module"}