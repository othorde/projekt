{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\index.js\";\n\n/* import GoogleMapReact from 'google-map-react'\nimport { Icon } from '@iconify/react'; */\n\n/* import locationIcon from '@iconify/icons-mdi/map-marker';\n */\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Map extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n  }\n\n  componentDidMount() {\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // google is available\n      const {\n        google\n      } = this.props;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n      let zoom = 14;\n      let lat = 37.774929;\n      let lng = -122.419416;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign({}, {\n        center: center,\n        zoom: zoom\n      });\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  render() {// ...\n  }\n\n}\nexport class Container extends React.Component {\n  render() {\n    if (!this.props.loaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        google: this.props.google\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default GoogleApiComponent({\n  apiKey: \"AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\"\n})(Container);","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/index.js"],"names":["React","Component","GoogleApiWrapper","Map","componentDidUpdate","prevProps","prevState","google","props","loadMap","componentDidMount","maps","mapRef","refs","map","node","ReactDOM","findDOMNode","zoom","lat","lng","center","LatLng","mapConfig","Object","assign","render","Container","loaded","GoogleApiComponent","apiKey"],"mappings":";;AAAA;AACA;;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;;AAEA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACC,SAAxB,CAAkC;AAIrCG,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAID,SAAS,CAACE,MAAV,KAAqB,KAAKC,KAAL,CAAWD,MAApC,EAA4C;AAC1C,WAAKE,OAAL;AACD;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,OAAL;AACH;;AAEDA,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKD,KAAL,IAAc,KAAKA,KAAL,CAAWD,MAA7B,EAAqC;AACnC;AACA,YAAM;AAACA,QAAAA;AAAD,UAAW,KAAKC,KAAtB;AACA,YAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AAEA,YAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,GAAzB;AACA,YAAMC,IAAI,GAAGC,QAAQ,CAACC,WAAT,CAAqBL,MAArB,CAAb;AAEA,UAAIM,IAAI,GAAG,EAAX;AACA,UAAIC,GAAG,GAAG,SAAV;AACA,UAAIC,GAAG,GAAG,CAAC,UAAX;AACA,YAAMC,MAAM,GAAG,IAAIV,IAAI,CAACW,MAAT,CAAgBH,GAAhB,EAAqBC,GAArB,CAAf;AACA,YAAMG,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAClCJ,QAAAA,MAAM,EAAEA,MAD0B;AAElCH,QAAAA,IAAI,EAAEA;AAF4B,OAAlB,CAAlB;AAIA,WAAKJ,GAAL,GAAW,IAAIH,IAAI,CAACR,GAAT,CAAaY,IAAb,EAAmBQ,SAAnB,CAAX;AACD;AACJ;;AAEDG,EAAAA,MAAM,GAAG,CACP;AACD;;AArCoC;AA0CzC,OAAO,MAAMC,SAAN,SAAwB3B,KAAK,CAACC,SAA9B,CAAwC;AAC3CyB,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKlB,KAAL,CAAWoB,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACI;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWD;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKD;;AAVwC;AAa3C,eAAesB,kBAAkB,CAAC;AAChCC,EAAAA,MAAM,EAAE;AADwB,CAAD,CAAlB,CAEZH,SAFY,CAAf","sourcesContent":["/* import GoogleMapReact from 'google-map-react'\nimport { Icon } from '@iconify/react'; */\n/* import locationIcon from '@iconify/icons-mdi/map-marker';\n */\n\n\nimport React, { Component } from \"react\";\nimport {GoogleApiWrapper} from 'google-maps-react';\n\nexport class Map extends React.Component {\n\n    \n\n    componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n    }\n\n    componentDidMount() {\n        this.loadMap();\n    }\n  \n    loadMap() {\n        if (this.props && this.props.google) {\n          // google is available\n          const {google} = this.props;\n          const maps = google.maps;\n    \n          const mapRef = this.refs.map;\n          const node = ReactDOM.findDOMNode(mapRef);\n    \n          let zoom = 14;\n          let lat = 37.774929;\n          let lng = -122.419416;\n          const center = new maps.LatLng(lat, lng);\n          const mapConfig = Object.assign({}, {\n            center: center,\n            zoom: zoom\n          })\n          this.map = new maps.Map(node, mapConfig);\n        }\n    }\n  \n    render() {\n      // ...\n    }\n  }\n\n\n\nexport class Container extends React.Component {\n    render() {\n        if (!this.props.loaded) {\n          return <div>Loading...</div>\n        }\n        return (\n            <div>\n              <Map google={this.props.google} />\n            </div>\n        )\n      }\n    }\n    \n    export default GoogleApiComponent({\n      apiKey: \"AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\"\n    })(Container)\n\n\n"]},"metadata":{},"sourceType":"module"}