{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Invoice\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\nimport ReactPDF from '@react-pdf/renderer'; //components\n\nimport Api from '../../api'; //styles & img\n\nimport { Container } from './Form.styles'; //other\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar pointInPolygon = require('point-in-polygon');\n\nconst userInvoiceInitialValue = {\n  tripId: \"\",\n  endedAtChargePoint: false,\n  endedAtLoadStation: \"\",\n  timeOfTrip: \"\",\n  startFee: 10,\n  discountStartFee: \"\",\n  fromFreePark2Defined: \"\"\n};\nexport default function Invoice(props) {\n  _s();\n\n  //hooks\n  // måste ha resan och koordinaterna\n  // måste senare räkna ut var koordinaterna ligger och jmföra\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n  const [userInvoice, setUserInvoice] = useState([userInvoiceInitialValue]);\n  /* Sparara alla laddning och parkeringszoner i state */\n\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    setUserTrips(props);\n  }, [props]);\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    userTrips.props.forEach(trip => {\n      var startFee = 10;\n      let timeFee = 2.5;\n      var discountStartFee = false;\n      let time = getTimeOfTrip(trip.start.time, trip.stop.time);\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n      var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n      var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n      var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n      var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n      /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n\n      if (startAtParkingZone === undefined || startChargePoint === undefined) {\n        if (endedAtParkingZone === true || endedAtChargePoint === true) {\n          startFee = startFee * 0.88;\n          discountStartFee = true;\n        }\n      }\n\n      const atrip = {\n        tripId: trip.id,\n        date: trip.date,\n        startAtParkingZone: startAtParkingZone,\n        endedAtParkingZone: endedAtParkingZone,\n        startChargePoint: startChargePoint,\n        endedAtChargePoint: endedAtChargePoint,\n        timeOfTrip: time,\n        startFee: startFee,\n        timeFee: time * timeFee,\n        discountStartFee: discountStartFee\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips);\n    MyDocument(userInvoice); //return userInvoice\n  }\n  /*  loopara igenom alla chargingposts, \n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInParkingZone(tripEnded) {\n    let res;\n\n    for (var elem of allParkingZones) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /*  loopara igenom alla chargingposts,\n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInChargingPost(tripEnded) {\n    let res;\n\n    for (var elem of allCharging_posts) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /* Räknar ut tiden för resan, gör om till sekunder \n      subtraherar och dividerar för att få ut minuter\n  */\n\n\n  function getTimeOfTrip(starttime, stoptime) {\n    var arrStarttime = starttime.split(\".\");\n    var arrStoptime = stoptime.split(\".\");\n    arrStarttime[0] = arrStarttime[0] * 60 * 60;\n    arrStarttime[1] = arrStarttime[1] * 60;\n    arrStoptime[0] = arrStoptime[0] * 60 * 60;\n    arrStoptime[1] = arrStoptime[1] * 60;\n    var stopTime = arrStoptime[0] + arrStoptime[1];\n    var startTime = arrStarttime[0] + arrStarttime[1];\n    var time = (stopTime - startTime) / 60;\n    return time;\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  async function calculateCost() {\n    checkAllUsersTrips();\n  } // Create styles\n\n\n  const styles = StyleSheet.create({\n    page: {\n      flexDirection: 'row',\n      backgroundColor: '#E4E4E4'\n    },\n    section: {\n      margin: 10,\n      padding: 10,\n      flexGrow: 1\n    }\n  }); // Create Document Component\n\n  const MyDocument = doc => {\n    console.log(\"HÄÄÄÄÄÄÄR\", doc)( /*#__PURE__*/_jsxDEV(Document, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        size: \"A4\",\n        style: styles.page,\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          style: styles.section,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Section #1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          style: styles.section,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Section #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this));\n    ReactPDF.render( /*#__PURE__*/_jsxDEV(MyDocument, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }, this), `${__dirname}/example.pdf`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateCost,\n      children: \"Faktura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Invoice, \"T3Qm/KWOkE+ohdeV589GLCKLJtg=\");\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Invoice/index.js"],"names":["React","useEffect","useState","Page","Text","View","Document","StyleSheet","ReactPDF","Api","Container","pointInPolygon","require","userInvoiceInitialValue","tripId","endedAtChargePoint","endedAtLoadStation","timeOfTrip","startFee","discountStartFee","fromFreePark2Defined","Invoice","props","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","userInvoice","setUserInvoice","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","checkAllUsersTrips","arrayOfTrips","trip","timeFee","time","getTimeOfTrip","start","stop","tripEnded","position","lat","lng","tripStarted","startAtParkingZone","checkIfCoordInParkingZone","endedAtParkingZone","startChargePoint","checkIfCoordInChargingPost","undefined","atrip","id","date","push","MyDocument","res","elem","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","starttime","stoptime","arrStarttime","split","arrStoptime","stopTime","startTime","point","polygone","calculateCost","styles","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","doc","console","log","render","__dirname"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from 'react';\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\nimport ReactPDF from '@react-pdf/renderer';\n\n\n//components\nimport Api from '../../api'\n//styles & img\nimport {Container} from './Form.styles'\n//other\n\nvar pointInPolygon = require('point-in-polygon');\n\n\nconst userInvoiceInitialValue = {\n    tripId: \"\",\n    endedAtChargePoint: false,\n    endedAtLoadStation: \"\",\n    timeOfTrip: \"\",\n    startFee: 10,\n    discountStartFee: \"\",\n    fromFreePark2Defined: \"\"\n}\n\n\nexport default function Invoice(props) {\n\t//hooks\n    // måste ha resan och koordinaterna\n    // måste senare räkna ut var koordinaterna ligger och jmföra\n\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState([]);\n    const [userInvoice, setUserInvoice] = useState([userInvoiceInitialValue])\n    /* Sparara alla laddning och parkeringszoner i state */\n    \n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        setUserTrips(props)\n\n    }, [props])\n\n\n    function checkAllUsersTrips() {\n        let arrayOfTrips = []\n        \n        userTrips.props.forEach(trip => {\n            var startFee = 10;\n            let timeFee = 2.5;\n            var discountStartFee = false;\n\n            let time = getTimeOfTrip(trip.start.time, trip.stop.time)\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n            var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n            var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n            var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n            var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n\n            /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n            if(startAtParkingZone === undefined || startChargePoint === undefined) {\n                if (endedAtParkingZone === true || endedAtChargePoint === true) {\n                    startFee = startFee * 0.88;\n                    discountStartFee = true;\n                }\n            }\n\n            const atrip = { \n\t\t\t\ttripId: trip.id,\n                date: trip.date,\n                startAtParkingZone: startAtParkingZone,\n                endedAtParkingZone: endedAtParkingZone,\n                startChargePoint: startChargePoint,\n                endedAtChargePoint: endedAtChargePoint,\n                timeOfTrip: time,\n                startFee: startFee,\n                timeFee: time * timeFee,\n                discountStartFee: discountStartFee,\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n        MyDocument(userInvoice)\n        //return userInvoice\n    }\n\n    \n    /*  loopara igenom alla chargingposts, \n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInParkingZone(tripEnded) {\n        let res;\n        for (var elem of allParkingZones) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n        }\n    }\n\n    /*  loopara igenom alla chargingposts,\n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInChargingPost(tripEnded) {\n        let res;\n        for (var elem of allCharging_posts) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n       } \n    }\n\n    /* Räknar ut tiden för resan, gör om till sekunder \n        subtraherar och dividerar för att få ut minuter\n    */\n    function getTimeOfTrip(starttime, stoptime) {\n\n        var arrStarttime = starttime.split(\".\");\n        var arrStoptime = stoptime.split(\".\"); \n\n        arrStarttime[0] = arrStarttime[0] * 60 * 60;\n        arrStarttime[1] = arrStarttime[1] * 60;\n        arrStoptime[0] = arrStoptime[0] * 60 * 60;\n        arrStoptime[1] = arrStoptime[1] * 60;\n        \n        var stopTime = arrStoptime[0] + arrStoptime[1];\n        var startTime = arrStarttime[0] + arrStarttime[1];\n        var time = (stopTime - startTime) / 60;\n\n        return time\n    }\n\n    function checkIfPointInPolyGon(point, polygone) {\n\n        return pointInPolygon(point, polygone);\n    }\n\n    async function calculateCost() {\n        checkAllUsersTrips()\n    }\n\n\n\n\n    // Create styles\n    const styles = StyleSheet.create({\n    page: {\n        flexDirection: 'row',\n        backgroundColor: '#E4E4E4'\n    },\n    section: {\n        margin: 10,\n        padding: 10,\n        flexGrow: 1\n    }\n    });\n\n    // Create Document Component\n    const MyDocument = (doc) => { \n        \n        console.log(\"HÄÄÄÄÄÄÄR\", doc)\n\n        (\n\n        <Document>\n            <Page size=\"A4\" style={styles.page}>\n            <View style={styles.section}>\n                <Text>Section #1</Text>\n            </View>\n            <View style={styles.section}>\n                <Text>Section #2</Text>\n            </View>\n            </Page>\n        </Document>\n        );\n\n        ReactPDF.render(<MyDocument />, `${__dirname}/example.pdf`);\n\n    }\n\n\n\n\treturn (\n\n        <>\n            <button onClick={calculateCost}>Faktura</button>\n        </>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}