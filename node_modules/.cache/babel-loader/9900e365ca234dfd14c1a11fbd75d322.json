{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{React,useState,useContext,useEffect}from\"react\";import Api from\"../../Api\";import AppContext from\"../../AppContext\";import{StyleMoveBike}from'./Form.styles.js';import{checkIfCoordInChargingPost,checkIfCoordInParkingZone}from'../../helperfunction/helpers';/* Förflyttar en cykel från en position till en annan.\n    Uppdaterar därför flera värden i db\n    Skapar/uppdaterar även en logg för händelsen\n*/import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function MoveBike(_ref){var city=_ref.city,position=_ref.position,id=_ref.id,battery=_ref.battery;var myContext=useContext(AppContext);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),charging_posts=_useState2[0],setCharging_posts=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allParkingZones=_useState4[0],setAllParkingZones=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),moveBikeToColor=_useState6[0],setMoveBikeToColor=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),cityState=_useState10[0],setCityState=_useState10[1];//parkering och laddstationer\n/* hämtar alla ladd/parkeringszoner sparar i state \n        KONTROLLERA SÅ att denna fungerar med flera städer\n    */function getLoadStationsForMovingBike(){return _getLoadStationsForMovingBike.apply(this,arguments);}/* När admin förflyttar cykel \n        Behöver uppdatera en del, alla är beroende av varandra\n        så måste kolla först att det går igenom innan nästa\n    */function _getLoadStationsForMovingBike(){_getLoadStationsForMovingBike=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var cityApi;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return Api.getACity(city);case 3:cityApi=_context2.sent;setCityState(cityApi[0].city);setCharging_posts(cityApi[0].charging_posts);setAllParkingZones(cityApi[0].parking_zones);_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);setMessage(\"Något gick fel vid hämtningen från servern\");case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return _getLoadStationsForMovingBike.apply(this,arguments);}var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newPosition;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(moveBikeToColor===''||moveBikeToColor===null){// Om inget val görs\nsetMessage(\"Välj först vart du vill förflytta cykeln\");}else{newPosition=calculateScooterNewPosition();if(newPosition){updateScooter(newPosition);updateScootersUser();updateScooterLogg(newPosition);updateZones();}}case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(){return _ref2.apply(this,arguments);};}();/* Uppdaterar själva scootern */function updateScooter(_x){return _updateScooter.apply(this,arguments);}/* uppdaterar scooterns användare */function _updateScooter(){_updateScooter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(newPosition){var speed,battery,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:speed=\"0\";battery=\"100\";if(!(position!==null)){_context3.next=7;break;}_context3.next=5;return Api.updateAScooter(id,speed,battery,newPosition);case 5:response=_context3.sent;//uppdaterar scootern\nresponse===false&&setMessage(\"Kunde ej uppdatera användaren\");case 7:case\"end\":return _context3.stop();}}},_callee3);}));return _updateScooter.apply(this,arguments);}function updateScootersUser(){return _updateScootersUser.apply(this,arguments);}function _updateScootersUser(){_updateScootersUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return Api.updateAScootersUser(id);case 2:response=_context4.sent;response===false&&setMessage(\"Kunde ej uppdatera användaren\");case 4:case\"end\":return _context4.stop();}}},_callee4);}));return _updateScootersUser.apply(this,arguments);}function updateScooterLogg(_x2){return _updateScooterLogg.apply(this,arguments);}/* UPPDATERA ZONER */ /* Tid för eventet (loggen) +1 i månad, så blir det rätt\n        Lägger även till en nolla om minuter är under 10. \n        annars blir det 18.5 istför 18.05\n    */function _updateScooterLogg(){_updateScooterLogg=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(newPosition){var active_user,event,_getTime2,time,varForUpdate,response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:active_user=\"null\";event=getEventString(newPosition);_getTime2=getTime(),time=_getTime2.time;varForUpdate={id:id,active_user:active_user,event:event,start_lat:position.lat,start_lng:position.lng,time:time,end_lat:newPosition.lat,end_lng:newPosition.lng};_context5.next=6;return Api.updateAScootersLogg(varForUpdate);case 6:response=_context5.sent;response?setMessage(\"Cykel förflyttad, logg uppdaterad\"):setMessage(\"Något gick fel, kunde ej uppdatera logg\");case 8:case\"end\":return _context5.stop();}}},_callee5);}));return _updateScooterLogg.apply(this,arguments);}function getTime(){var today=new Date();var date=today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();var min=today.getMinutes();var hours=today.getHours();min=min<10?\"0\".concat(min):min;var time=hours+\":\"+min;var dateTime=date+' '+time;return{time:time,dateTime:dateTime};}/* Skapar string för event (loggen) */function getEventString(newPosition){var _getTime=getTime(),dateTime=_getTime.dateTime;var movedBy=myContext.userHook.value.user;var event=\"\".concat(dateTime,\" \\n \\n        Moved(update)(bikeId:\").concat(id,\")\\n\\n        from position: lat: \").concat(position.lat,\" lng: \").concat(position.lng,\" to the \").concat(moveBikeToColor,\" zon.\\n\\n        New exact position in zon: lat: \").concat(newPosition.lat,\", lng: \").concat(newPosition.lng,\".\\n\\n        Speed is now 0 and battery is charged from \").concat(battery,\" to 100%. Carried out by \").concat(movedBy,\".\\n    \");return event;}/* Räknar ut ny position inom den zon som scootern ska flyttas till\n        Om den nya zonen ej är inom området så anropas denna funktionen igen\n        för att hitta en ny position som stämmer. Matten är inte exakt.\n    */function calculateScooterNewPosition(){var newPosition;var insidePoly=false;charging_posts.filter(function(elem){return elem.color.includes(moveBikeToColor)?newPosition=elem.position:null;});var lat=newPosition.polygonePart1.lat+Math.random()*(newPosition.polygonePart4.lat-newPosition.polygonePart1.lat);var lng=newPosition.polygonePart1.lng+Math.random()*(newPosition.polygonePart4.lng-newPosition.polygonePart1.lng);var polygone=[[newPosition.polygonePart1.lat,newPosition.polygonePart1.lng],[newPosition.polygonePart2.lat,newPosition.polygonePart2.lng],[newPosition.polygonePart3.lat,newPosition.polygonePart3.lng],[newPosition.polygonePart4.lat,newPosition.polygonePart4.lng]];newPosition={lat:lat,lng:lng};var newPositionArr=[newPosition.lat,newPosition.lng];var pointInPolygon=require('point-in-polygon');insidePoly=pointInPolygon(newPositionArr,polygone);if(!insidePoly){return calculateScooterNewPosition();}if(insidePoly){return newPosition;}}/* Kontrollerar om start pos för cykel finns i en zon mha helper function\n       OM, uppdatera den zonen med minus 1. uppdaterar alltid zonen för slutposition med +1\n    */function updateZones(){return _updateZones.apply(this,arguments);}function _updateZones(){_updateZones=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var res,startCoords,amount_of_bikes,color,coordInParkingZone,coordInChargingPost,amount_of_bikes_in_new_zone;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:startCoords=position;startCoords=[startCoords.lat,startCoords.lng];coordInParkingZone=checkIfCoordInParkingZone(startCoords,allParkingZones);coordInChargingPost=checkIfCoordInChargingPost(startCoords,charging_posts);//Kollar alltid hur många cyklar som finns i station\n_context6.next=6;return Api.getAllChargePost(cityState,moveBikeToColor);case 6:res=_context6.sent;// Uppdaterar alltid laddstationen med +1\nconsole.log(res);if(!(!res===false)){_context6.next=16;break;}console.log(res,\"HÄÄÄR\");amount_of_bikes_in_new_zone=res+1;_context6.next=13;return Api.updateNrBikesChargePost(cityState,amount_of_bikes_in_new_zone,moveBikeToColor);case 13:res=_context6.sent;console.log(res);res===false&&setMessage(\"Kund ej uppdatera laddstationen\");case 16://Uppdaterar zon med -1 OM cykel tidigare fanns i en parkeringszon\nif(coordInParkingZone&&coordInParkingZone.returned===true){amount_of_bikes=coordInParkingZone.amount_of_bikes_zone-1;color=coordInParkingZone.color;updateParkZone(amount_of_bikes,color);}//Uppdaterar zon med -1 OM cykel tidigare fanns i en laddstation\nif(coordInChargingPost&&coordInChargingPost.returned===true){amount_of_bikes=coordInChargingPost.amount_of_bikes_post-1;color=coordInChargingPost.color;updateChargePost(amount_of_bikes,color);}case 18:case\"end\":return _context6.stop();}}},_callee6);}));return _updateZones.apply(this,arguments);}function updateParkZone(_x3,_x4){return _updateParkZone.apply(this,arguments);}function _updateParkZone(){_updateParkZone=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(amount_of_bikes,color){var res;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return Api.updateNrBikesParkZone(cityState,amount_of_bikes,color);case 2:res=_context7.sent;res===false&&setMessage(\"Kund ej uppdatera parkeringszonen\");case 4:case\"end\":return _context7.stop();}}},_callee7);}));return _updateParkZone.apply(this,arguments);}function updateChargePost(_x5,_x6){return _updateChargePost.apply(this,arguments);}/* timer för meddelande */function _updateChargePost(){_updateChargePost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(amount_of_bikes,color){var res;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return Api.updateNrBikesChargePost(cityState,amount_of_bikes,color);case 2:res=_context8.sent;res===false&&setMessage(\"Kund ej uppdatera laddstationen\");case 4:case\"end\":return _context8.stop();}}},_callee8);}));return _updateChargePost.apply(this,arguments);}useEffect(function(){setTimeout(function(){return setMessage(\"\");},8000);setMoveBikeToColor(\"\");},[message]);return/*#__PURE__*/_jsxs(StyleMoveBike,{onClick:getLoadStationsForMovingBike,children:[\" \",message&&/*#__PURE__*/_jsxs(\"p\",{style:{color:\"red\",\"paddingLeft\":\"1em\"},children:[\" \",message,\" \"]}),/*#__PURE__*/_jsxs(\"select\",{\"data-testid\":\"dropdown\",onChange:function onChange(e){setMoveBikeToColor(e.target.value);},value:moveBikeToColor,children:[/*#__PURE__*/_jsx(\"option\",{value:'',children:\"-- V\\xE4lj vart cykeln ska f\\xF6rflyttas --\"}),charging_posts.map(function(elem){return elem!==null&&/*#__PURE__*/_jsx(\"option\",{value:elem.color,children:elem.color+\" zon\"},elem.color);})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\" F\\xF6rflytta cykel \"})]});}","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/MoveBike/index.js"],"names":["React","useState","useContext","useEffect","Api","AppContext","StyleMoveBike","checkIfCoordInChargingPost","checkIfCoordInParkingZone","MoveBike","city","position","id","battery","myContext","charging_posts","setCharging_posts","allParkingZones","setAllParkingZones","moveBikeToColor","setMoveBikeToColor","message","setMessage","cityState","setCityState","getLoadStationsForMovingBike","getACity","cityApi","parking_zones","handleSubmit","newPosition","calculateScooterNewPosition","updateScooter","updateScootersUser","updateScooterLogg","updateZones","speed","updateAScooter","response","updateAScootersUser","active_user","event","getEventString","getTime","time","varForUpdate","start_lat","lat","start_lng","lng","end_lat","end_lng","updateAScootersLogg","today","Date","date","getFullYear","getMonth","getDate","min","getMinutes","hours","getHours","dateTime","movedBy","userHook","value","user","insidePoly","filter","elem","color","includes","polygonePart1","Math","random","polygonePart4","polygone","polygonePart2","polygonePart3","newPositionArr","pointInPolygon","require","startCoords","coordInParkingZone","coordInChargingPost","getAllChargePost","res","console","log","amount_of_bikes_in_new_zone","updateNrBikesChargePost","returned","amount_of_bikes","amount_of_bikes_zone","updateParkZone","amount_of_bikes_post","updateChargePost","updateNrBikesParkZone","setTimeout","e","target","map"],"mappings":"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","sourcesContent":["import {React, useState, useContext, useEffect} from \"react\";\nimport Api from \"../../Api\";\nimport AppContext from \"../../AppContext\";\nimport {StyleMoveBike} from './Form.styles.js'\nimport {checkIfCoordInChargingPost, checkIfCoordInParkingZone} from '../../helperfunction/helpers'\n\n/* Förflyttar en cykel från en position till en annan.\n    Uppdaterar därför flera värden i db\n    Skapar/uppdaterar även en logg för händelsen\n*/\nexport default function MoveBike({city, position, id, battery}) {\n    const myContext = useContext(AppContext);\n    const [charging_posts, setCharging_posts] = useState([])\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [moveBikeToColor, setMoveBikeToColor] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [cityState, setCityState] = useState([]) //parkering och laddstationer\n    \n    /* hämtar alla ladd/parkeringszoner sparar i state \n        KONTROLLERA SÅ att denna fungerar med flera städer\n    */\n    async function getLoadStationsForMovingBike() {\n        try {\n            let cityApi = await Api.getACity(city);\n            setCityState(cityApi[0].city);\n            setCharging_posts(cityApi[0].charging_posts);\n            setAllParkingZones(cityApi[0].parking_zones);\n        } catch (error) {\n            setMessage(\"Något gick fel vid hämtningen från servern\")\n        }\n    }\n    /* När admin förflyttar cykel \n        Behöver uppdatera en del, alla är beroende av varandra\n        så måste kolla först att det går igenom innan nästa\n    */\n    const handleSubmit = async () => {\n        if (moveBikeToColor === '' || moveBikeToColor === null) { // Om inget val görs\n            setMessage(\"Välj först vart du vill förflytta cykeln\")\n        } else {\n            let newPosition = calculateScooterNewPosition();\n            if (newPosition) {\n                updateScooter(newPosition);\n                updateScootersUser();\n                updateScooterLogg(newPosition);\n                updateZones();\n            }\n        }\n    }\n\n    /* Uppdaterar själva scootern */\n    async function updateScooter(newPosition) {\n        var speed = \"0\";\n        var battery = \"100\";\n\n        if (position !== null) {\n            var response = await Api.updateAScooter(id, speed, battery, newPosition); //uppdaterar scootern\n            response === false && setMessage(\"Kunde ej uppdatera användaren\");\n        }\n    }\n    /* uppdaterar scooterns användare */\n    async function updateScootersUser() {\n        var response = await Api.updateAScootersUser(id);\n        response === false && setMessage(\"Kunde ej uppdatera användaren\");\n    }\n\n    async function updateScooterLogg(newPosition) {\n\n        var active_user = \"null\";\n        var event = getEventString(newPosition);\n        var {time} = getTime();\n\n        const varForUpdate = {\n            id: id,\n            active_user: active_user,\n            event: event,\n            start_lat: position.lat,\n            start_lng: position.lng,\n            time: time,\n            end_lat: newPosition.lat,\n            end_lng: newPosition.lng,\n        }\n        var response = await Api.updateAScootersLogg(varForUpdate);\n        response ? setMessage(\"Cykel förflyttad, logg uppdaterad\") : setMessage(\"Något gick fel, kunde ej uppdatera logg\");\n    }\n\n    /* UPPDATERA ZONER */\n\n    /* Tid för eventet (loggen) +1 i månad, så blir det rätt\n        Lägger även till en nolla om minuter är under 10. \n        annars blir det 18.5 istför 18.05\n    */\n    function getTime() {\n        var today = new Date();\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        var min = today.getMinutes();\n        var hours = today.getHours();\n        min = min < 10 ? `0${min}` : min;\n        var time = hours + \":\" + min;\n        var dateTime = date+' '+time;\n\n        return {time, dateTime}\n    }\n\n    /* Skapar string för event (loggen) */\n    function getEventString(newPosition) {\n        var {dateTime} = getTime();\n        var movedBy = myContext.userHook.value.user;\n        var event = `${dateTime} \\n \n        Moved(update)(bikeId:${id})\\n\n        from position: lat: ${position.lat} lng: ${position.lng} to the ${moveBikeToColor} zon.\\n\n        New exact position in zon: lat: ${newPosition.lat}, lng: ${newPosition.lng}.\\n\n        Speed is now 0 and battery is charged from ${battery} to 100%. Carried out by ${movedBy}.\n    `;\n        return event\n    }\n\n    /* Räknar ut ny position inom den zon som scootern ska flyttas till\n        Om den nya zonen ej är inom området så anropas denna funktionen igen\n        för att hitta en ny position som stämmer. Matten är inte exakt.\n    */\n    function calculateScooterNewPosition() {\n        let newPosition;\n        var insidePoly = false;\n        charging_posts.filter(elem=> elem.color.includes(moveBikeToColor) ? newPosition = elem.position : null)\n        let lat = newPosition.polygonePart1.lat + (Math.random() * (newPosition.polygonePart4.lat - newPosition.polygonePart1.lat)); \n        let lng = newPosition.polygonePart1.lng + (Math.random() * (newPosition.polygonePart4.lng - newPosition.polygonePart1.lng)); \n        var polygone= [\n            [newPosition.polygonePart1.lat, newPosition.polygonePart1.lng],\n            [newPosition.polygonePart2.lat, newPosition.polygonePart2.lng],\n            [newPosition.polygonePart3.lat, newPosition.polygonePart3.lng],\n            [newPosition.polygonePart4.lat, newPosition.polygonePart4.lng]\n        ]\n        newPosition = {lat: lat, lng: lng}\n\n        var newPositionArr = [newPosition.lat, newPosition.lng]\n        var pointInPolygon = require('point-in-polygon');\n        insidePoly = pointInPolygon(newPositionArr, polygone);\n\n        if(!insidePoly) {\n            return calculateScooterNewPosition()\n        } \n        if(insidePoly) {\n            return newPosition\n        }\n    }\n\n    /* Kontrollerar om start pos för cykel finns i en zon mha helper function\n       OM, uppdatera den zonen med minus 1. uppdaterar alltid zonen för slutposition med +1\n    */\n    async function updateZones() {\n        let res;\n        let startCoords = position;\n        let amount_of_bikes;\n        let color;\n        startCoords = [startCoords.lat, startCoords.lng];\n        let coordInParkingZone = checkIfCoordInParkingZone(startCoords, allParkingZones);\n        let coordInChargingPost = checkIfCoordInChargingPost(startCoords, charging_posts);\n        \n        //Kollar alltid hur många cyklar som finns i station\n        res = await Api.getAllChargePost(cityState, moveBikeToColor);\n        // Uppdaterar alltid laddstationen med +1\n        console.log(res)\n        if(!res === false) {\n            console.log(res, \"HÄÄÄR\")\n            let amount_of_bikes_in_new_zone = res + 1;\n            res = await Api.updateNrBikesChargePost(cityState, amount_of_bikes_in_new_zone, moveBikeToColor);\n            console.log(res)\n\n            res === false && setMessage(\"Kund ej uppdatera laddstationen\");\n        }\n        //Uppdaterar zon med -1 OM cykel tidigare fanns i en parkeringszon\n        if(coordInParkingZone && coordInParkingZone.returned === true) {\n            amount_of_bikes = coordInParkingZone.amount_of_bikes_zone - 1;\n            color = coordInParkingZone.color\n            updateParkZone(amount_of_bikes, color);\n        }\n        //Uppdaterar zon med -1 OM cykel tidigare fanns i en laddstation\n        if (coordInChargingPost && coordInChargingPost.returned === true) {\n            amount_of_bikes = coordInChargingPost.amount_of_bikes_post - 1;\n            color = coordInChargingPost.color;\n            updateChargePost(amount_of_bikes, color)\n        }\n    }\n\n    async function updateParkZone(amount_of_bikes, color) {\n        let res;\n        res = await Api.updateNrBikesParkZone(cityState, amount_of_bikes, color);\n        res === false && setMessage(\"Kund ej uppdatera parkeringszonen\");\n    }\n\n    async function updateChargePost(amount_of_bikes, color) {\n        let res;\n        res = await Api.updateNrBikesChargePost(cityState, amount_of_bikes, color);\n        res === false && setMessage(\"Kund ej uppdatera laddstationen\");\n    }\n\n    /* timer för meddelande */\n    useEffect(() => {\n        setTimeout(() => setMessage(\"\"), 8000);\n        setMoveBikeToColor(\"\")\n    }, [message])\n\n\treturn (\n        <StyleMoveBike onClick = {getLoadStationsForMovingBike}> {/* laddar in ny info med onClick */}\n            {/* meddelande om det går bra/dåligt med uppdatering */}\n            {message && <p style={{color:\"red\", \"paddingLeft\": \"1em\"}}> {message} </p>} \n            <select \n                data-testid=\"dropdown\" onChange={(e) => {\n                    setMoveBikeToColor(e.target.value)\n                }}\n                value={moveBikeToColor}\n            >\n            {/* Options för vart cyklen ska flyttas */}\n                <option value={''}>-- Välj vart cykeln ska förflyttas --</option>\n                {charging_posts.map(elem => elem !== null  &&\n                    <option key={elem.color}value={elem.color}>\n                    {elem.color + \" zon\"}\n                </option> )}\n            </select>\n            <button onClick={handleSubmit}> Förflytta cykel </button>\n        </StyleMoveBike>\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}