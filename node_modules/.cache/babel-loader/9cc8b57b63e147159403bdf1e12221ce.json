{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\routes\\\\LandingPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // components\n\nimport Loader from '../../components/Loader'; // style\n\nimport { Wrapper } from \"./Form.styles\"; //other\n\nimport AppContext from \"../../AppContext\";\nimport Api from \"../../Api\";\nimport { PROXY_URL, defaultConfigAuthenticate } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n/* Hämtar ut url koden av github, som redirectar hit. Skickar sedan koden till backend\n   så att den kan göra de request som behövs till github. \n   Får sedan tillbaka användaruppg, som används för att logga in användaren\n   genom vårt api.\n*/\n\n\nexport default function LandingPage() {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useState(Boolean);\n  const navigate = useNavigate();\n  const myContext = useContext(AppContext);\n  useEffect(() => {\n    // Hämtar url från webbläsare\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\"); // Om github skickar tillbaka kod, ta ut koden ur URL strängen\n\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      window.history.pushState({}, null, newUrl[0]);\n      const requestData = {\n        code: newUrl[1]\n      };\n      getGitInfo(requestData);\n    }\n    /* tar emot reqData från useEffect, skickar till backend och tar emot inlogg uppg. mha info från github */\n\n\n    async function getGitInfo(requestData) {\n      setLoggedInUser(\"Not OK\");\n      myContext.toggleAuth(false);\n\n      try {\n        let res;\n        let result;\n        res = await (await fetch(PROXY_URL, { ...defaultConfigAuthenticate,\n          body: JSON.stringify({\n            code: requestData.code\n          })\n        })).json();\n        /* loggar in genom api och sätter user värden i localStorage samt i hook */\n\n        if (res && res.login) {\n          result = await Api.logginUserViaGit(res.login);\n\n          if (result && result.data.type === \"success\") {\n            localStorage.clear();\n            localStorage.setItem('user', JSON.stringify(res.login));\n            localStorage.setItem('tag', JSON.stringify(result.data.user.tag));\n            localStorage.setItem('id', JSON.stringify(result.data.user.id));\n            const user = {\n              user: res.login,\n              tag: result.data.user.tag,\n              id: result.data.user.id,\n              token: result.data.token\n            };\n            myContext.setUserValues(user);\n            myContext.toggleAuth(true);\n            setLoggedInUser(true);\n          }\n        }\n      } catch (error) {\n        setLoggedInUser(\"Not OK\");\n        myContext.toggleAuth(false);\n      }\n    }\n  });\n  /* När loggedInUser eller set ändras navigera till home\n     om tag är satt och loggedInUser är true */\n\n  useEffect(() => {\n    let tag = localStorage.getItem(\"tag\");\n    loggedInUser === true && tag && navigate(\"/login/home\");\n  }, [loggedInUser, setLoggedInUser, navigate]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: !loggedInUser === \"Not OK\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Det gick inte att logga in just nu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LandingPage, \"wUqvUK37ZuzBwWQzbG3ZOQ+Tb70=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/routes/LandingPage/index.js"],"names":["React","useState","useEffect","useContext","useNavigate","Loader","Wrapper","AppContext","Api","PROXY_URL","defaultConfigAuthenticate","require","config","LandingPage","loggedInUser","setLoggedInUser","Boolean","navigate","myContext","url","window","location","href","hasCode","includes","newUrl","split","history","pushState","requestData","code","getGitInfo","toggleAuth","res","result","fetch","body","JSON","stringify","json","login","logginUserViaGit","data","type","localStorage","clear","setItem","user","tag","id","token","setUserValues","error","getItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// components\nimport Loader from '../../components/Loader'\n// style\nimport {Wrapper} from \"./Form.styles\";\n//other\nimport AppContext from \"../../AppContext\";\nimport Api from \"../../Api\";\nimport {PROXY_URL, defaultConfigAuthenticate} from '../../config'\n\nrequire('dotenv').config()\n\n/* Hämtar ut url koden av github, som redirectar hit. Skickar sedan koden till backend\n   så att den kan göra de request som behövs till github. \n   Får sedan tillbaka användaruppg, som används för att logga in användaren\n   genom vårt api.\n*/\nexport default function LandingPage() {\n\tconst [loggedInUser, setLoggedInUser] = useState(Boolean);\n\tconst navigate = useNavigate();\n\tconst myContext = useContext(AppContext);        \n\n\tuseEffect(() => {\n\t\t// Hämtar url från webbläsare\n\t\tconst url = window.location.href;\n\t\tconst hasCode = url.includes(\"?code=\");\n\n\t\t// Om github skickar tillbaka kod, ta ut koden ur URL strängen\n\t\tif (hasCode) {\n\t\t\tconst newUrl = url.split(\"?code=\");\n\t\t\twindow.history.pushState({}, null, newUrl[0]);\n\t\t\tconst requestData = {\n\t\t\t\tcode: newUrl[1]\n\t\t\t};\n\t\t\tgetGitInfo(requestData);\n\t\t}\n\n\t\t\n\t\t/* tar emot reqData från useEffect, skickar till backend och tar emot inlogg uppg. mha info från github */\n\t\tasync function getGitInfo(requestData) {\n\t\t\t\n\t\t\tsetLoggedInUser(\"Not OK\")\n\t\t\tmyContext.toggleAuth(false);\n\t\t\ttry {\n\t\t\t\tlet res;\n\t\t\t\tlet result;\n\t\t\t\tres = await (\n\t\t\t\t\tawait fetch(PROXY_URL, {\n\t\t\t\t\t\t...defaultConfigAuthenticate,\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tcode: requestData.code,\n\t\t\t\t\t\t})\n\t\t\t\t\t})).json();\n\t\t\t\t/* loggar in genom api och sätter user värden i localStorage samt i hook */\n\t\t\t\tif (res && res.login) {\n\t\t\t\t\tresult = await Api.logginUserViaGit(res.login)\n\t\t\t\t\tif (result && result.data.type === \"success\") {\n\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\tlocalStorage.setItem('user', JSON.stringify(res.login));\n\t\t\t\t\t\tlocalStorage.setItem('tag', JSON.stringify(result.data.user.tag));\n\t\t\t\t\t\tlocalStorage.setItem('id', JSON.stringify(result.data.user.id));\n\n\t\t\t\t\t\tconst user = {\n\t\t\t\t\t\t\tuser: res.login,\n\t\t\t\t\t\t\ttag: result.data.user.tag,\n\t\t\t\t\t\t\tid: result.data.user.id,\n\t\t\t\t\t\t\ttoken: result.data.token\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmyContext.setUserValues(user)\n\t\t\t\t\t\tmyContext.toggleAuth(true);\n\t\t\t\t\t\tsetLoggedInUser(true)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetLoggedInUser(\"Not OK\")\n\t\t\t\tmyContext.toggleAuth(false);\n\t\t\t}\n\t\t}\n\t});\n\n\t/* När loggedInUser eller set ändras navigera till home\n\t   om tag är satt och loggedInUser är true */\n\tuseEffect(() => {\n\t\tlet tag = localStorage.getItem(\"tag\");\n\t\t(loggedInUser === true && tag) && navigate(\"/login/home\")\n\t}, [loggedInUser, setLoggedInUser, navigate])\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{!loggedInUser === \"Not OK\" ? \n\t\t\t<p>Det gick inte att logga in just nu</p> \n\t\t\t: (\n\t\t\t\t<Loader></Loader>\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}