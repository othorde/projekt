{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Api from \"../api\";\nexport const useFetchAUser = id => {\n  _s();\n\n  const [auser, setAUser] = useState([]);\n  const [userLoading, setUserLoading] = useState(false);\n  const [userMessage, setUserMessage] = useState(\"Loading...\");\n\n  const fetchData = async id => {\n    let data;\n\n    try {\n      setUserLoading(true);\n      const res = await Api.setAUser(id);\n      data = res.data;\n\n      if (data.trips.length > 0) {\n        setState(data.trips);\n      } else {\n        setUserMessage(\"Ingen resa gjord\");\n      }\n    } catch (error) {\n      setUserMessage(\"Något gick fel vid hämtningen från servern\");\n    }\n\n    setUserLoading(false);\n  }; // initial render\n\n\n  useEffect(() => {\n    fetchData(id);\n  }, []);\n  return {\n    state,\n    loading,\n    message\n  };\n}; // useEffect(() => {\n//     async function fetchData() {\n//         if(user && user.value.id) {\n//             let id = user.value.id;\n//             /* Om props läs därifrån */\n//             if(props && props.customer) {\n//                 id = props.customer.id;\n//             }\n//             let res = await Api.getAUser(id);\n//             if (res && res.data) {\n//                 data = res.data;\n//                 if(data.trips.length > 0) {\n//                     setUserHistory(data.trips)\n//                 } else {\n//                     setMessage(\"Ingen resa gjord\")\n//                 }\n//             }\n//         }\n//     }\n//     fetchData();\n// }, [user])\n\n_s(useFetchAUser, \"DLKqaz2Lmmtp88QGUCimDCj9SR4=\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/Hooks/useFetchAUser.js"],"names":["useState","useEffect","Api","useFetchAUser","id","auser","setAUser","userLoading","setUserLoading","userMessage","setUserMessage","fetchData","data","res","trips","length","setState","error","state","loading","message"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAGA,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAQ;AAAA;;AAEjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,YAAD,CAA9C;;AAGA,QAAMW,SAAS,GAAG,MAAOP,EAAP,IAAc;AAC5B,QAAIQ,IAAJ;;AACA,QAAI;AACAJ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMK,GAAG,GAAG,MAAMX,GAAG,CAACI,QAAJ,CAAaF,EAAb,CAAlB;AACAQ,MAAAA,IAAI,GAAGC,GAAG,CAACD,IAAX;;AAEA,UAAGA,IAAI,CAACE,KAAL,CAAWC,MAAX,GAAoB,CAAvB,EAA0B;AACtBC,QAAAA,QAAQ,CAACJ,IAAI,CAACE,KAAN,CAAR;AACH,OAFD,MAEO;AACHJ,QAAAA,cAAc,CAAC,kBAAD,CAAd;AACH;AAEJ,KAXD,CAWE,OAAOO,KAAP,EAAc;AACZP,MAAAA,cAAc,CAAC,4CAAD,CAAd;AACH;;AACDF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAjBD,CAPiC,CA0BjC;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS,CAACP,EAAD,CAAT;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAO;AAACc,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAP;AACH,CAhCM,C,CAmCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAvDajB,a","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Api from \"../api\";\n\n\nexport const useFetchAUser = (id) => {\n\n    const [auser, setAUser] = useState([]);\n    const [userLoading, setUserLoading] = useState(false);\n    const [userMessage, setUserMessage] = useState(\"Loading...\");\n\n    \n    const fetchData = async (id) => {\n        let data;\n        try {\n            setUserLoading(true)\n            const res = await Api.setAUser(id)\n            data = res.data;\n\n            if(data.trips.length > 0) {\n                setState(data.trips)\n            } else {\n                setUserMessage(\"Ingen resa gjord\")\n            }\n            \n        } catch (error) {\n            setUserMessage(\"Något gick fel vid hämtningen från servern\")\n        }\n        setUserLoading(false)\n    }  \n    \n    // initial render\n    useEffect(() => {\n        fetchData(id);\n    },[]);\n\n    return {state, loading, message}\n}\n\n\n// useEffect(() => {\n//     async function fetchData() {\n//         if(user && user.value.id) {\n//             let id = user.value.id;\n//             /* Om props läs därifrån */\n//             if(props && props.customer) {\n//                 id = props.customer.id;\n//             }\n//             let res = await Api.getAUser(id);\n//             if (res && res.data) {\n//                 data = res.data;\n//                 if(data.trips.length > 0) {\n//                     setUserHistory(data.trips)\n//                 } else {\n//                     setMessage(\"Ingen resa gjord\")\n//                 }\n//             }\n//         }\n//     }\n//     fetchData();\n// }, [user])"]},"metadata":{},"sourceType":"module"}