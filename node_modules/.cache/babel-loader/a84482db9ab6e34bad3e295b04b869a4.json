{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //components\n\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster'; //styles\n\nimport { Style, BtnStyle } from './Form.styles';\nimport scooter from '../../images/scooter.png';\nimport useSwr from \"swr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n}; // style annorlunda jmf med komponenter. Se form.styles,  \n\nexport default function MapContainer() {\n  _s();\n\n  const {\n    location,\n    err\n  } = useCurrentLocation(options);\n  console.log(location);\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null);\n  const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\";\n\n  const fetcher = function () {\n    return fetch(...arguments).then(response => response.json());\n  }; //gör om denna sen\n\n\n  const Marker = _ref => {\n    let {\n      children\n    } = _ref;\n    return children;\n  };\n\n  const {\n    data,\n    error\n  } = useSwr(url, fetcher); //gör om denna sen\n\n  const crimes = data && !error ? data.slice(0, 20) : []; //clusters\n\n  const points = crimes.map(crime => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      category: crime.category\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.location.longitude), parseFloat(crime.location.latitude)]\n    }\n  }));\n  const {\n    clusters\n  } = useSuperCluster({\n    points,\n    bounds,\n    zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Style, {\n    children: location ? /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      },\n      defaultCenter: {\n        lat: location.latitude,\n        lng: location.longitude\n      },\n      defaultZoom: 4,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref2 => {\n        let {\n          map\n        } = _ref2;\n        mapRef.current = map;\n      },\n      onChange: _ref3 => {\n        let {\n          zoom,\n          bounds\n        } = _ref3;\n        setZoom(zoom);\n        setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n      },\n      children: clusters.map(cluster => {\n        const [longitude, latitude] = cluster.geometry.coordinates;\n        const {\n          cluster: isCluster,\n          point_count: pointCount\n        } = cluster.properties;\n\n        if (isCluster) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            lat: latitude,\n            lng: longitude,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cluster-marker\",\n              children: pointCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 10\n            }, this)\n          }, cluster.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          lat: latitude,\n          lng: longitude,\n          children: /*#__PURE__*/_jsxDEV(BtnStyle, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"crime-marker\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"scooter\",\n                src: scooter,\n                alt: \"scooter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this)\n        }, cluster.properties.crimeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"SkeDy/xXtnxufHSyOo8Y7iMSnmA=\", false, function () {\n  return [useCurrentLocation, useSwr, useSuperCluster];\n});\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","useCurrentLocation","useSuperCluster","Style","BtnStyle","scooter","useSwr","options","enableHighAccuracy","timeout","maximumAge","MapContainer","location","err","console","log","mapRef","zoom","setZoom","bounds","setBounds","url","fetcher","fetch","then","response","json","Marker","children","data","error","crimes","slice","points","map","crime","type","properties","cluster","crimeId","id","category","geometry","coordinates","parseFloat","longitude","latitude","clusters","radius","maxZoom","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","lat","lng","current","nw","se","isCluster","point_count","pointCount"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster';\n//styles\nimport {Style, BtnStyle} from './Form.styles'\nimport scooter from '../../images/scooter.png'\nimport useSwr from \"swr\";\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n  };\n\n\n\n// style annorlunda jmf med komponenter. Se form.styles,  \nexport default function MapContainer() {\n\tconst { location, err } = useCurrentLocation(options);\n\tconsole.log(location)\n\n\tconst mapRef = useRef();\n\tconst [zoom, setZoom] = useState(10);\n\tconst [bounds, setBounds] = useState(null);\n\tconst url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n\n\tconst fetcher = (...args) => fetch(...args).then(response => response.json()); //gör om denna sen\n\tconst Marker = ({children}) => children;\n\n\tconst {data, error} = useSwr(url, fetcher) //gör om denna sen\n\tconst crimes = data && !error ? data.slice(0,20) : [];\n\n\t//clusters\n\tconst points = crimes.map(crime => ({\n\t\ttype: \"Feature\",\n\t\tproperties: {\n\t\t\tcluster: false,\n\t\t\tcrimeId: crime.id,\n\t\t\tcategory: crime.category\n\t\t},\n\t\tgeometry: {\n\t\t\ttype: \"Point\", \n\t\t\tcoordinates:[\n\t\t\t\tparseFloat(crime.location.longitude), \n\t\t\t\tparseFloat(crime.location.latitude)\n\t\t\t]}\n\t}))\n\n\tconst { clusters } = useSuperCluster({\n\t\tpoints, \n\t\tbounds,\n\t\tzoom,\n\t\toptions: {radius:75, maxZoom:20}\n\t});\n\treturn (\n\t\t<Style>\n\t\t\t{location ? (\n\n\t\t\t<GoogleMapReact \n\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\tdefaultCenter={{ lat: location.latitude, lng: location.longitude}}\n\t\t\t\tdefaultZoom={4}\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\tonGoogleApiLoaded= {({map}) => {\n\t\t\t\t\tmapRef.current = map;\n\t\t\t\t}}\n\t\t\t\tonChange={({zoom, bounds}) => {\n\t\t\t\t\tsetZoom(zoom)\n\t\t\t\t\tsetBounds([\n\t\t\t\t\t\tbounds.nw.lng,\n\t\t\t\t\t\tbounds.se.lat,\n\t\t\t\t\t\tbounds.se.lng,\n\t\t\t\t\t\tbounds.nw.lat\n\t\t\t\t\t])\n\t\t\t\t}}\n\t\t\t\t\n\t\t\t>\n\t\t\t\t{clusters.map(cluster => {\n\t\t\t\t\tconst[longitude, latitude] = cluster.geometry.coordinates;\n\t\t\t\t\tconst {cluster : isCluster, point_count: pointCount} = cluster.properties;\n\t\t\t\t\tif (isCluster) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Marker key={cluster.id} \n\t\t\t\t\t\t\t\tlat={latitude} \n\t\t\t\t\t\t\t\tlng={longitude}>\n\t\t\t\t\t\t\t\t\t<div className=\"cluster-marker\">\n\t\t\t\t\t\t\t\t\t\t{pointCount}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t<Marker \n\t\t\t\t\t\tkey={cluster.properties.crimeId} \n\t\t\t\t\t\tlat={latitude} \n\t\t\t\t\t\tlng={longitude}>\n\t\t\t\t\t\t<BtnStyle>\n\t\t\t\t\t\t\t<button className=\"crime-marker\">\n\t\t\t\t\t\t\t\t<img className = \"scooter\" src={scooter} alt=\"scooter\"/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</BtnStyle>\n\t\t\t\t\t</Marker>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t{/* markers */}\n{/* \t\t\t\t{crimes.map(crime => (\n\t\t\t\t\t<Marker \n\t\t\t\t\t\tkey={crime.id} \n\t\t\t\t\t\tlat={crime.location.latitude} \n\t\t\t\t\t\tlng={crime.location.longitude}>\n\t\t\t\t\t\t<BtnStyle>\n\t\t\t\t\t\t\t<button className=\"crime-marker\">\n\t\t\t\t\t\t\t\t<img className = \"scooter\" src={scooter} alt=\"scooter\"/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</BtnStyle>\n\t\t\t\t\t</Marker>\n\n\t\t\t\t))} */}\n\n\t\t\t</GoogleMapReact>\n\t\t\t\n\t\t\t):(<p>Loading...</p> )}\n\t\t</Style>\t\n\n\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}