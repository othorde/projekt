{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\cluster.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n//components\n\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster'; //styles\n\nimport { BtnStyle } from './Form.styles';\nimport scooter from '../../images/scooter.png';\nimport useSwr from \"swr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n}; // style annorlunda jmf med komponenter. Se form.styles,  \n\nexport default function Cluster(_ref) {\n  _s();\n\n  let {\n    stateForMarker\n  } = _ref;\n  const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\";\n  console.log(\"stateForMarker\", stateForMarker);\n  /*  const bounds = stateForMarker.bounds;\n  const zoom = stateForMarker.zoom;\n  const mapRef = stateForMarker.bounds; */\n\n  const fetcher = function () {\n    return fetch(...arguments).then(response => response.json());\n  }; //gör om denna sen\n\n\n  const Marker = _ref2 => {\n    let {\n      children\n    } = _ref2;\n    return children;\n  };\n\n  const {\n    data,\n    error\n  } = useSwr(url, fetcher); //gör om denna sen\n\n  const crimes = data && !error ? data : []; //clusters\n\n  const points = crimes.map(crime => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      category: crime.category\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.location.longitude), parseFloat(crime.location.latitude)]\n    }\n  }));\n  /* \n  \tconst { clusters, supercluster } = useSuperCluster({\n  \t\tpoints, \n  \t\tbounds,\n  \t\tzoom,\n  \t\toptions: {radius:75, maxZoom:20}\n  \t}); */\n  // style annorlunda jmf med komponenter. Se form.styles,  \n\n  const {\n    location,\n    err\n  } = useCurrentLocation(options);\n  console.log(location);\n  return clusters.map(cluster => {\n    const [longitude, latitude] = cluster.geometry.coordinates;\n    const {\n      cluster: isCluster,\n      point_count: pointCount\n    } = cluster.properties;\n\n    if (isCluster) {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        lat: latitude,\n        lng: longitude,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cluster-marker\",\n          style: {\n            width: `${10 + pointCount / points.length * 20}px`,\n            height: `${10 + pointCount / points.length * 20}px`\n          },\n          onClick: () => {\n            const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 30);\n            mapRef.current.setZoom(expansionZoom); //zoomar in om man klickar på en cluster\n\n            mapRef.current.panTo({\n              lat: latitude,\n              lng: longitude\n            }); //sätter zoom till rätt koordinat\n          },\n          children: pointCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)\n      }, cluster.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      lat: latitude,\n      lng: longitude,\n      children: /*#__PURE__*/_jsxDEV(BtnStyle, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              children: \"HEJ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this);\n          },\n          className: \"crime-marker\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"scooter\",\n            src: scooter,\n            alt: \"scooter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, cluster.properties.crimeId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s(Cluster, \"IaucogVGi4OaejS/udOPRpe8gy8=\", false, function () {\n  return [useSwr, useCurrentLocation];\n});\n\n_c = Cluster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cluster\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/cluster.js"],"names":["React","useEffect","useState","useRef","useCurrentLocation","useSuperCluster","BtnStyle","scooter","useSwr","options","enableHighAccuracy","timeout","maximumAge","Cluster","stateForMarker","url","console","log","fetcher","fetch","then","response","json","Marker","children","data","error","crimes","points","map","crime","type","properties","cluster","crimeId","id","category","geometry","coordinates","parseFloat","location","longitude","latitude","err","clusters","isCluster","point_count","pointCount","width","length","height","expansionZoom","Math","min","supercluster","getClusterExpansionZoom","mapRef","current","setZoom","panTo","lat","lng"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\n//components\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useSuperCluster from 'use-supercluster';\n//styles\nimport {BtnStyle} from './Form.styles'\nimport scooter from '../../images/scooter.png'\nimport useSwr from \"swr\";\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n  };\n\n\n\n// style annorlunda jmf med komponenter. Se form.styles,  \nexport default function Cluster({stateForMarker}) {\n    \n\tconst url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n   console.log(\"stateForMarker\" , stateForMarker)\n    /*  const bounds = stateForMarker.bounds;\n    const zoom = stateForMarker.zoom;\n    const mapRef = stateForMarker.bounds; */\n\tconst fetcher = (...args) => fetch(...args).then(response => response.json()); //gör om denna sen\n\tconst Marker = ({children}) => children;\n\n\tconst {data, error} = useSwr(url, fetcher) //gör om denna sen\n\tconst crimes = data && !error ? data : [];\n\n\t//clusters\n\tconst points = crimes.map(crime => ({\n\t\ttype: \"Feature\",\n\t\tproperties: {\n\t\t\tcluster: false,\n\t\t\tcrimeId: crime.id,\n\t\t\tcategory: crime.category\n\t\t},\n\t\tgeometry: {\n\t\t\ttype: \"Point\", \n\t\t\tcoordinates:[\n\t\t\t\tparseFloat(crime.location.longitude), \n\t\t\t\tparseFloat(crime.location.latitude)\n\t\t\t]}\n\t}))\n/* \n\tconst { clusters, supercluster } = useSuperCluster({\n\t\tpoints, \n\t\tbounds,\n\t\tzoom,\n\t\toptions: {radius:75, maxZoom:20}\n\t}); */\n// style annorlunda jmf med komponenter. Se form.styles,  \n\tconst { location, err } = useCurrentLocation(options);\n\tconsole.log(location)\n\n\t\n\treturn (\n\t\n        clusters.map(cluster => {\n            const[longitude, latitude] = cluster.geometry.coordinates;\n            const {cluster : isCluster, point_count: pointCount} = cluster.properties;\n            if (isCluster) {\n                return (\n                    <Marker key={cluster.id} \n                        lat={latitude} \n                        lng={longitude}>\n                            <div \n                                className=\"cluster-marker\"\n                                style={{\n                                    width: `${10 + (pointCount/points.length)* 20}px`,\n                                    height: `${10 + (pointCount/points.length)* 20}px`\n                                }}\n                                onClick= {() => {\n                                    const expansionZoom = Math.min(\n                                        supercluster.getClusterExpansionZoom(cluster.id),\n                                        30\n                                    );\n                                    mapRef.current.setZoom(expansionZoom) //zoomar in om man klickar på en cluster\n                                    mapRef.current.panTo({lat: latitude, lng: longitude});  //sätter zoom till rätt koordinat\n                                }}\n                                >\n                            {pointCount}</div>\n                    </Marker>\n                );\n            }\n            return (\n            <Marker \n                key={cluster.properties.crimeId} \n                lat={latitude} \n                lng={longitude}>\n                    \n                <BtnStyle>\n                    <button onClick= {() => {\n                            <div>HEJ</div>\n                        }}\n                        className=\"crime-marker\">\n                        <img className = \"scooter\" src={scooter} alt=\"scooter\"/>\n                    </button>\n                </BtnStyle>\n            </Marker>\n            )\n        })\t\t\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}