{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Invoice\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\"; //components\n\nimport Api from '../../api'; //styles & img\n\nimport { Container } from './Form.styles'; //other\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar pointInPolygon = require('point-in-polygon');\n\nconst userInvoiceInitialValue = {\n  tripId: \"\",\n  endedAtChargePoint: \"\",\n  endedAtLoadStation: \"\",\n  timeOfTrip: \"\",\n  startFee: 10,\n  discountStartFee: \"\"\n};\nexport default function Invoice(props) {\n  _s();\n\n  //hooks\n  // måste ha resan och koordinaterna\n  // måste senare räkna ut var koordinaterna ligger och jmföra\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n  const [userInvoice, setUserInvoice] = useState([userInvoiceInitialValue]);\n  /* Sparara alla ladda och parkeringszoner i state */\n\n  console.log(props);\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    setUserTrips(props);\n  }, []);\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    userTrips.props.forEach(trip => {\n      console.log(trip.stop.position.lat);\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      let res = checkIfTripEndedAtParkingZone(tripEnded);\n      console.log(res);\n      const atrip = {\n        tripId: trip.id,\n        endedAtChargePoint: \"\",\n        endedAtParkingZone: res,\n        timeOfTrip: \"\",\n        startFee: 10,\n        timeFee: \"\",\n        discountStartFee: \"\"\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips);\n  }\n\n  console.log(userInvoice);\n  /* Kollar om resan slutade i en parkeringszon */\n\n  function checkIfTripEndedAtParkingZone(tripEnded) {\n    if (tripEnded) {\n      let res;\n      allParkingZones.forEach(element => {\n        let polyGon = [[element.position.polygonePart1.lat, element.position.polygonePart1.lng], [element.position.polygonePart2.lat, element.position.polygonePart2.lng], [element.position.polygonePart3.lat, element.position.polygonePart3.lng], [element.position.polygonePart4.lat, element.position.polygonePart4.lng]];\n        return checkIfPointInPolyGon(tripEnded, polyGon);\n      });\n    }\n  }\n\n  function checkIfTripEndedAtChargingPost() {\n    if (props && props.userHistory) {\n      let res = false;\n      var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n      allCharging_posts.forEach(element => {\n        let polyGon = [[element.position.polygonePart1.lat, element.position.polygonePart1.lng], [element.position.polygonePart2.lat, element.position.polygonePart2.lng], [element.position.polygonePart3.lat, element.position.polygonePart3.lng], [element.position.polygonePart4.lat, element.position.polygonePart4.lng]];\n        res = checkIfPointInPolyGon(tripEnded, polyGon);\n        console.log(res);\n      });\n    }\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  async function calculateCost() {\n    checkAllUsersTrips();\n    /* checkIfTripEndedAtParkingZone()\n    checkIfTripEndedAtChargingPost()  */\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: calculateCost,\n    children: \"Faktura\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Invoice, \"T3Qm/KWOkE+ohdeV589GLCKLJtg=\");\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Invoice/index.js"],"names":["React","useEffect","useState","Api","Container","pointInPolygon","require","userInvoiceInitialValue","tripId","endedAtChargePoint","endedAtLoadStation","timeOfTrip","startFee","discountStartFee","Invoice","props","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","userInvoice","setUserInvoice","console","log","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","checkAllUsersTrips","arrayOfTrips","trip","stop","position","lat","tripEnded","lng","res","checkIfTripEndedAtParkingZone","atrip","id","endedAtParkingZone","timeFee","push","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","checkIfTripEndedAtChargingPost","userHistory","point","polygone","calculateCost"],"mappings":"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","sourcesContent":["import {React, useEffect, useState } from \"react\";\n\n//components\nimport Api from '../../api'\n//styles & img\nimport {Container} from './Form.styles'\n//other\nvar pointInPolygon = require('point-in-polygon');\n\n\nconst userInvoiceInitialValue = {\n    tripId: \"\",\n    endedAtChargePoint: \"\",\n    endedAtLoadStation: \"\",\n    timeOfTrip: \"\",\n    startFee: 10,\n    discountStartFee: \"\",\n}\n\n\nexport default function Invoice(props) {\n\t//hooks\n    // måste ha resan och koordinaterna\n    // måste senare räkna ut var koordinaterna ligger och jmföra\n\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState([]);\n    const [userInvoice, setUserInvoice] = useState([userInvoiceInitialValue])\n    /* Sparara alla ladda och parkeringszoner i state */\n \n    console.log(props)\n\n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        setUserTrips(props)\n        \n    }, [])\n\n\n    function checkAllUsersTrips() {\n        let arrayOfTrips = []\n\n        userTrips.props.forEach(trip => {\n\n            console.log(trip.stop.position.lat)\n\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            let res = checkIfTripEndedAtParkingZone(tripEnded)\n            console.log(res)\n            const atrip = { \n\t\t\t\ttripId: trip.id,\n                endedAtChargePoint: \"\",\n                endedAtParkingZone: res,\n                timeOfTrip: \"\",\n                startFee: 10,\n                timeFee: \"\",\n                discountStartFee: \"\",\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n    }\n\n    console.log(userInvoice)\n    /* Kollar om resan slutade i en parkeringszon */\n    function checkIfTripEndedAtParkingZone(tripEnded) {\n\n        if(tripEnded) {\n            let res;\n            allParkingZones.forEach(element => {\n                let polyGon=[\n                    [element.position.polygonePart1.lat,\n                    element.position.polygonePart1.lng],\n                    [element.position.polygonePart2.lat,\n                    element.position.polygonePart2.lng],\n                    [element.position.polygonePart3.lat,\n                    element.position.polygonePart3.lng],\n                    [element.position.polygonePart4.lat,\n                    element.position.polygonePart4.lng]\n                ]\n                return checkIfPointInPolyGon(tripEnded, polyGon);\n            });\n        }\n    }\n\n    function checkIfTripEndedAtChargingPost() {\n        if(props && props.userHistory) {\n            let res = false;\n            var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n            allCharging_posts.forEach(element => {\n                let polyGon=[\n                    [ element.position.polygonePart1.lat, element.position.polygonePart1.lng],\n                    [element.position.polygonePart2.lat, element.position.polygonePart2.lng],\n                    [element.position.polygonePart3.lat, element.position.polygonePart3.lng],\n                    [element.position.polygonePart4.lat, element.position.polygonePart4.lng ]\n                ]\n                res = checkIfPointInPolyGon(tripEnded, polyGon);\n                console.log(res)\n            });\n        }\n    }\n\n\n    function checkIfPointInPolyGon(point, polygone) {\n        return pointInPolygon(point, polygone);\n    }\n\n\n\n\n    async function calculateCost() {\n       \n        checkAllUsersTrips()\n        /* checkIfTripEndedAtParkingZone()\n        checkIfTripEndedAtChargingPost()  */\n    }\n\n\treturn (\n        <button onClick={calculateCost}>Faktura</button>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}