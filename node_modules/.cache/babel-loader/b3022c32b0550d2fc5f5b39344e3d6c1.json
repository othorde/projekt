{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{API_URL}from\"./config\";var Api={getAUser:function(){var _getAUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var endpoint,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;endpoint=\"\".concat(API_URL,\"/customers/\").concat(id);_context.next=4;return fetch(endpoint);case 4:_context.next=6;return _context.sent.json();case 6:res=_context.sent;return _context.abrupt(\"return\",res);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));function getAUser(_x){return _getAUser.apply(this,arguments);}return getAUser;}(),getAllUsers:function(){var _getAllUsers=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var endpoint,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;endpoint=\"\".concat(API_URL,\"/customers\");_context2.next=4;return fetch(endpoint);case 4:_context2.next=6;return _context2.sent.json();case 6:res=_context2.sent;return _context2.abrupt(\"return\",res);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",false);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));function getAllUsers(){return _getAllUsers.apply(this,arguments);}return getAllUsers;}(),getACity:function(){var _getACity=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(whatCity){var endpoint,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;endpoint=\"\".concat(API_URL,\"/cities/\").concat(whatCity);_context3.next=4;return fetch(endpoint);case 4:_context3.next=6;return _context3.sent.json();case 6:res=_context3.sent;return _context3.abrupt(\"return\",res.data);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",false);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));function getACity(_x2){return _getACity.apply(this,arguments);}return getACity;}(),getAllCitys:function(){var _getAllCitys=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var endpoint,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;endpoint=\"\".concat(API_URL,\"/cities\");_context4.next=4;return fetch(endpoint);case 4:_context4.next=6;return _context4.sent.json();case 6:res=_context4.sent;return _context4.abrupt(\"return\",res.data);case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",false);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));function getAllCitys(){return _getAllCitys.apply(this,arguments);}return getAllCitys;}(),getAllScooters:function(){var _getAllScooters=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var endpoint,res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;endpoint=\"\".concat(API_URL,\"/scooter\");_context5.next=4;return fetch(endpoint);case 4:_context5.next=6;return _context5.sent.json();case 6:res=_context5.sent;return _context5.abrupt(\"return\",res.data);case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](0);return _context5.abrupt(\"return\",false);case 13:case\"end\":return _context5.stop();}}},_callee5,null,[[0,10]]);}));function getAllScooters(){return _getAllScooters.apply(this,arguments);}return getAllScooters;}(),getAllChargePost:function(){var _getAllChargePost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(city,matching){var endpoint,res,result;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;endpoint=\"\".concat(API_URL,\"/cities/posts/\").concat(city);_context6.next=4;return fetch(endpoint);case 4:_context6.next=6;return _context6.sent.json();case 6:res=_context6.sent;result=false;console.log(city,matching,res);if(!matching){_context6.next=12;break;}res.data.forEach(function(element){if(element.color===matching){console.log(element.color,matching);result=element.amount_of_bikes_post;}});return _context6.abrupt(\"return\",result);case 12:_context6.next=17;break;case 14:_context6.prev=14;_context6.t0=_context6[\"catch\"](0);return _context6.abrupt(\"return\",false);case 17:case\"end\":return _context6.stop();}}},_callee6,null,[[0,14]]);}));function getAllChargePost(_x3,_x4){return _getAllChargePost.apply(this,arguments);}return getAllChargePost;}(),logginUserViaGit:function(){var _logginUserViaGit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(username){var defaultConfig,endpoint,res;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:defaultConfig={method:'POST',headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\"}};_context7.prev=1;endpoint=\"\".concat(API_URL,\"/customers/login\");_context7.next=5;return fetch(endpoint,_objectSpread(_objectSpread({},defaultConfig),{},{body:JSON.stringify({username:username})}));case 5:_context7.next=7;return _context7.sent.json();case 7:res=_context7.sent;return _context7.abrupt(\"return\",res);case 11:_context7.prev=11;_context7.t0=_context7[\"catch\"](1);return _context7.abrupt(\"return\",false);case 14:case\"end\":return _context7.stop();}}},_callee7,null,[[1,11]]);}));function logginUserViaGit(_x5){return _logginUserViaGit.apply(this,arguments);}return logginUserViaGit;}(),updateAScooter:function(){var _updateAScooter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id,speed,battery,newPosition,token){var defaultConfigPut,endpoint,res;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:defaultConfigPut={method:'PUT',headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\",'x-access-token':token}};_context8.prev=1;endpoint=\"\".concat(API_URL,\"/scooter\");_context8.next=5;return fetch(endpoint,_objectSpread(_objectSpread({},defaultConfigPut),{},{body:JSON.stringify({_id:id,speed:speed,battery:battery,lat:newPosition.lat,lng:newPosition.lng})}));case 5:_context8.next=7;return _context8.sent.json();case 7:res=_context8.sent;if(!(res.data.result===\"Object: \".concat(id,\" updated\"))){_context8.next=10;break;}return _context8.abrupt(\"return\",true);case 10:return _context8.abrupt(\"return\",false);case 13:_context8.prev=13;_context8.t0=_context8[\"catch\"](1);return _context8.abrupt(\"return\",false);case 16:case\"end\":return _context8.stop();}}},_callee8,null,[[1,13]]);}));function updateAScooter(_x6,_x7,_x8,_x9,_x10){return _updateAScooter.apply(this,arguments);}return updateAScooter;}(),updateAScootersUser:function(){var _updateAScootersUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(id,token){var defaultConfigPut,endpoint,res;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:defaultConfigPut={method:'PUT',headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\",'x-access-token':token}};_context9.prev=1;endpoint=\"\".concat(API_URL,\"/scooter/setuser\");_context9.next=5;return fetch(endpoint,_objectSpread(_objectSpread({},defaultConfigPut),{},{body:JSON.stringify({_id:id})}));case 5:_context9.next=7;return _context9.sent.json();case 7:res=_context9.sent;if(!(res.data.result===\"Object: \".concat(id,\" updated\"))){_context9.next=10;break;}return _context9.abrupt(\"return\",true);case 10:return _context9.abrupt(\"return\",false);case 13:_context9.prev=13;_context9.t0=_context9[\"catch\"](1);return _context9.abrupt(\"return\",false);case 16:case\"end\":return _context9.stop();}}},_callee9,null,[[1,13]]);}));function updateAScootersUser(_x11,_x12){return _updateAScootersUser.apply(this,arguments);}return updateAScootersUser;}(),updateAScootersLogg:function(){var _updateAScootersLogg=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(varForUpdate,token){var defaultConfigPut,endpoint,res;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:defaultConfigPut={method:'PUT',headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\",'x-access-token':token}};_context10.prev=1;endpoint=\"\".concat(API_URL,\"/scooter/insertLogg\");_context10.next=5;return fetch(endpoint,_objectSpread(_objectSpread({},defaultConfigPut),{},{body:JSON.stringify({_id:varForUpdate.id,active_user:varForUpdate.active_user,event:varForUpdate.event,start_lat:varForUpdate.start_lat,start_lng:varForUpdate.start_lng,start_time:varForUpdate.time,end_lat:varForUpdate.end_lat,end_lng:varForUpdate.end_lng,end_time:varForUpdate.time})}));case 5:_context10.next=7;return _context10.sent.json();case 7:res=_context10.sent;if(!(res.data.result===\"Object: \".concat(varForUpdate.id,\" updated\"))){_context10.next=10;break;}return _context10.abrupt(\"return\",true);case 10:return _context10.abrupt(\"return\",false);case 13:_context10.prev=13;_context10.t0=_context10[\"catch\"](1);return _context10.abrupt(\"return\",false);case 16:case\"end\":return _context10.stop();}}},_callee10,null,[[1,13]]);}));function updateAScootersLogg(_x13,_x14){return _updateAScootersLogg.apply(this,arguments);}return updateAScootersLogg;}(),updateUserFunds:function(){var _updateUserFunds=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(addToBalance,id,token){var defaultConfigPut,endpoint,res;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:console.log(token,\"HÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄR\");defaultConfigPut={method:'PUT',headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\",'x-access-token':token}};_context11.prev=2;endpoint=\"\".concat(API_URL,\"/customers/balance\");_context11.next=6;return fetch(endpoint,_objectSpread(_objectSpread({},defaultConfigPut),{},{body:JSON.stringify({_id:id,balance:addToBalance})}));case 6:_context11.next=8;return _context11.sent.json();case 8:res=_context11.sent;if(!(res.data.result===\"Object: \".concat(id,\" updated\"))){_context11.next=13;break;}return _context11.abrupt(\"return\",true);case 13:return _context11.abrupt(\"return\",false);case 14:_context11.next=19;break;case 16:_context11.prev=16;_context11.t0=_context11[\"catch\"](2);return _context11.abrupt(\"return\",false);case 19:case\"end\":return _context11.stop();}}},_callee11,null,[[2,16]]);}));function updateUserFunds(_x15,_x16,_x17){return _updateUserFunds.apply(this,arguments);}return updateUserFunds;}(),updateNrBikesChargePost:function(){var _updateNrBikesChargePost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(city,amount_of_bikes,color,token){var defaultConfigPut,endpoint,res;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:defaultConfigPut={method:'PUT',headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\",'x-access-token':token}};_context12.prev=1;endpoint=\"\".concat(API_URL,\"/cities/posts/update\");_context12.next=5;return fetch(endpoint,_objectSpread(_objectSpread({},defaultConfigPut),{},{body:JSON.stringify({city:city,amount_of_bikes:amount_of_bikes,color:color})}));case 5:_context12.next=7;return _context12.sent.json();case 7:res=_context12.sent;if(!(res.data.result===\"City post: \".concat(city,\" updated\"))){_context12.next=12;break;}return _context12.abrupt(\"return\",true);case 12:return _context12.abrupt(\"return\",false);case 13:_context12.next=18;break;case 15:_context12.prev=15;_context12.t0=_context12[\"catch\"](1);return _context12.abrupt(\"return\",false);case 18:case\"end\":return _context12.stop();}}},_callee12,null,[[1,15]]);}));function updateNrBikesChargePost(_x18,_x19,_x20,_x21){return _updateNrBikesChargePost.apply(this,arguments);}return updateNrBikesChargePost;}(),updateNrBikesParkZone:function(){var _updateNrBikesParkZone=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(city,amount_of_bikes,color,token){var defaultConfigPut,endpoint,res;return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:defaultConfigPut={method:'PUT',headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\",'x-access-token':token}};_context13.prev=1;endpoint=\"\".concat(API_URL,\"/cities/zones/update\");_context13.next=5;return fetch(endpoint,_objectSpread(_objectSpread({},defaultConfigPut),{},{body:JSON.stringify({city:city,amount_of_bikes:amount_of_bikes,color:color})}));case 5:_context13.next=7;return _context13.sent.json();case 7:res=_context13.sent;if(!(res.data.result===\"City zone: \".concat(city,\" updated\"))){_context13.next=12;break;}return _context13.abrupt(\"return\",true);case 12:return _context13.abrupt(\"return\",false);case 13:_context13.next=18;break;case 15:_context13.prev=15;_context13.t0=_context13[\"catch\"](1);return _context13.abrupt(\"return\",false);case 18:case\"end\":return _context13.stop();}}},_callee13,null,[[1,15]]);}));function updateNrBikesParkZone(_x22,_x23,_x24,_x25){return _updateNrBikesParkZone.apply(this,arguments);}return updateNrBikesParkZone;}()};export default Api;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/Api.js"],"names":["API_URL","Api","getAUser","id","endpoint","fetch","json","res","getAllUsers","getACity","whatCity","data","getAllCitys","getAllScooters","getAllChargePost","city","matching","result","console","log","forEach","element","color","amount_of_bikes_post","logginUserViaGit","username","defaultConfig","method","headers","body","JSON","stringify","updateAScooter","speed","battery","newPosition","token","defaultConfigPut","_id","lat","lng","updateAScootersUser","updateAScootersLogg","varForUpdate","active_user","event","start_lat","start_lng","start_time","time","end_lat","end_lng","end_time","updateUserFunds","addToBalance","balance","updateNrBikesChargePost","amount_of_bikes","updateNrBikesParkZone"],"mappings":"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","sourcesContent":["\nimport { API_URL } from \"./config\";\n\nconst Api = {\n\n    getAUser: async(id) => {\n        try {\n            const endpoint = `${API_URL}/customers/${id}`;\n            let res = await (await fetch(endpoint)).json();\n            return res\n        } catch (error) {\n            return false\n        }\n    },\n\n    getAllUsers: async() => {\n        try {\n            const endpoint = `${API_URL}/customers`;\n            let res = await (await fetch(endpoint)).json();\n            return res\n        } catch (error) {\n            return false\n        }\n    },\n\n    getACity: async (whatCity) => {\n        try {\n            const endpoint = `${API_URL}/cities/${whatCity}`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            return false\n        }\n\t},\n\n    getAllCitys: async () => {\n        try {\n            const endpoint = `${API_URL}/cities`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            return false\n        }\n\t},\n\n    getAllScooters: async () => {\n        try {\n            const endpoint = `${API_URL}/scooter`;\n            let res = await (await fetch(endpoint)).json();\n            return res.data\n        } catch (error) {\n            return false\n        }\n\t},\n\n    getAllChargePost: async (city, matching) => {\n        try {\n            const endpoint = `${API_URL}/cities/posts/${city}`;\n            let res = await (await fetch(endpoint)).json();\n            let result = false;\n            console.log(city, matching, res)\n            if(matching) {\n                res.data.forEach(element => {\n                    if (element.color === matching) {\n                        console.log(element.color, matching)\n                        result = element.amount_of_bikes_post\n                        \n                    }\n                });\n                return result\n            }\n        } catch (error) {\n            return false\n        }\n\t},\n\n    logginUserViaGit: async (username)  => {\n\n        const defaultConfig = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        };\n\n        try {\n            const endpoint = `${API_URL}/customers/login`\n            let res = await (\n                await fetch(endpoint, {\n                  ...defaultConfig,\n                  body: JSON.stringify({username: username} )\n                })\n              ).json();\n            return res\n\n        } catch (error) {\n            return false\n        }\n    },\n\n    updateAScooter: async (id, speed, battery, newPosition, token) => {\n\n        const defaultConfigPut = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n                'x-access-token': token\n            }\n        }\n\n        try {\n            const endpoint = `${API_URL}/scooter`;\n\n            let res = await (\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        _id: id,\n                        speed: speed,\n                        battery: battery,\n                        lat: newPosition.lat,\n                        lng: newPosition.lng,\n                    })\n                    })).json();\n            if(res.data.result === `Object: ${id} updated`) {\n                return true\n            }\n            return false      \n        } catch (error) {\n            return false      \n        }\n\t},\n\n    updateAScootersUser: async (id, token) => {\n\n        const defaultConfigPut = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n                'x-access-token': token\n            }\n        }\n\n        try {\n            const endpoint = `${API_URL}/scooter/setuser`;\n\n            let res = await (\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        _id: id,\n                    })\n                })).json();\n            if(res.data.result === `Object: ${id} updated`) {\n                return true\n            }\n            return false      \n        } catch (error) {\n            return false      \n        }\n\t},\n\n\n    updateAScootersLogg: async (varForUpdate, token) => {\n\n        const defaultConfigPut = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n                'x-access-token': token\n            }\n        }\n\n        try {\n            const endpoint = `${API_URL}/scooter/insertLogg`;\n            let res = await (\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        _id: varForUpdate.id,\n                        active_user: varForUpdate.active_user,\n                        event: varForUpdate.event,\n                        start_lat: varForUpdate.start_lat,\n                        start_lng: varForUpdate.start_lng,\n                        start_time: varForUpdate.time,\n                        end_lat: varForUpdate.end_lat,\n                        end_lng: varForUpdate.end_lng,\n                        end_time: varForUpdate.time,\n                    })\n                })).json();\n\n            if(res.data.result === `Object: ${varForUpdate.id} updated`) {\n                return true\n            }\n            return false\n        } catch (error) {\n            return false      \n        }\n\t},\n\n\n    updateUserFunds: async (addToBalance, id, token) => {\n        console.log(token, \"HÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄR\")\n        const defaultConfigPut = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n                'x-access-token': token\n            }\n        }\n\n        try {\n            const endpoint = `${API_URL}/customers/balance`;\n            let res;\n            res = await (\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        _id: id,\n                        balance: addToBalance,\n                    })\n                })).json();\n            \n            if(res.data.result === `Object: ${id} updated`) {\n                return true\n            } else {\n                return false\n            }\n        } catch (error) {\n            return false\n        }\n\t},\n\n\n    updateNrBikesChargePost: async (city, amount_of_bikes, color, token) => {\n        \n        const defaultConfigPut = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n                'x-access-token': token\n            }\n        }\n\n        try {\n            const endpoint = `${API_URL}/cities/posts/update`;\n            let res;\n            res = await(\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        city: city,\n                        amount_of_bikes: amount_of_bikes,\n                        color: color\n                    })\n                })).json();\n\n            if(res.data.result === `City post: ${city} updated`) {\n                return true\n            } else {\n                return false\n            }\n        } catch (error) {\n            return false\n        }\n\t},\n    \n    updateNrBikesParkZone: async (city, amount_of_bikes, color, token) => {\n\n        const defaultConfigPut = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n                'x-access-token': token\n            }\n        }\n     \n        try {\n            const endpoint = `${API_URL}/cities/zones/update`;\n            let res;\n            res = await(\n                await fetch(endpoint, {\n                    ...defaultConfigPut,\n                    body: JSON.stringify({\n                        city: city,\n                        amount_of_bikes: amount_of_bikes,\n                        color: color\n                    })\n                })).json();\n            \n            if(res.data.result === `City zone: ${city} updated`) {\n                return true\n            } else {\n                return false\n            }\n        } catch (error) {\n            return false\n        }\n\t},\n}\n\nexport default Api\n"]},"metadata":{},"sourceType":"module"}