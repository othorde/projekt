{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\loggin\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Wrapper } from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nexport default function Loggin() {\n  _s();\n\n  const [data, setData] = useState({\n    errorMessage: \"\",\n    isLoading: false\n  });\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\");\n    console.log(hasCode); // If Github API returns the code parameter\n\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      console.log((\"HÄÄÄÄÄÄÄÄR, \", hasCode)); //window.history.pushState({}, null, newUrl[0]);\n\n      setData({ ...data,\n        isLoading: true\n      });\n      const requestData = {\n        client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n        client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n        code: newUrl[1],\n        redirect_uri: \"http://localhost:3000/loggin/oauth\"\n      };\n      console.log(requestData);\n      const postUrl = \"https://github.com/login/oauth/access_token\";\n\n      async function hej() {\n        const endpoint = `${postUrl}`;\n        const document = await (await fetch(endpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": \"*\"\n          },\n          body: JSON.stringify({\n            client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n            client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n            code: newUrl[1],\n            redirect_uri: \"http://localhost:3000/loggin/oauth\"\n          })\n        })).json();\n      }\n\n      hej();\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"login-link\",\n        onClick: () => {\n          setData({ ...data,\n            errorMessage: \"\"\n          });\n        },\n        href: `https://github.com/login/oauth/authorize?scope=identity&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Login with GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Loggin, \"+o/aPN0HmoOh/R4RFDKbirQwrBY=\");\n\n_c = Loggin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loggin\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/loggin/index.js"],"names":["React","useState","useEffect","useContext","Navigate","Wrapper","AppContext","Api","require","config","Loggin","data","setData","errorMessage","isLoading","url","window","location","href","hasCode","includes","console","log","newUrl","split","requestData","client_id","process","env","REACT_APP_GITHUB_CLIENT_ID","client_secret","REACT_APP_GITHUB_CLIENT_SECRET","code","redirect_uri","postUrl","hej","endpoint","document","fetch","method","headers","body","JSON","stringify","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAIA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAAD,CAAhC;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACE,UAAMa,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,UAAMC,OAAO,GAAGJ,GAAG,CAACK,QAAJ,CAAa,QAAb,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAJY,CAMd;;AACA,QAAIA,OAAJ,EAAa;AACX,YAAMI,MAAM,GAAGR,GAAG,CAACS,KAAJ,CAAU,QAAV,CAAf;AACAH,MAAAA,OAAO,CAACC,GAAR,EAAa,gBAAgBH,OAA7B,GAFW,CAGX;;AACAP,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,QAAAA,SAAS,EAAE;AAAtB,OAAD,CAAP;AAGA,YAAMW,WAAW,GAAG;AAChBC,QAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADP;AAEhBC,QAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFX;AAGhBC,QAAAA,IAAI,EAAET,MAAM,CAAC,CAAD,CAHI;AAIhBU,QAAAA,YAAY,EAAE;AAJE,OAApB;AAOAZ,MAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AAEA,YAAMS,OAAO,GAAG,6CAAhB;;AACA,qBAAeC,GAAf,GAAoB;AAEhB,cAAMC,QAAQ,GAAI,GAAEF,OAAQ,EAA5B;AACA,cAAMG,QAAQ,GAAG,MAAM,CACnB,MAAMC,KAAK,CAACF,QAAD,EAAW;AACtBG,UAAAA,MAAM,EAAE,MADc;AAEtBC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAEL,2CAA+B;AAF1B,WAFa;AAMtBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB;AAClBjB,YAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADL;AAElBC,YAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFT;AAGlBC,YAAAA,IAAI,EAAET,MAAM,CAAC,CAAD,CAHM;AAIlBU,YAAAA,YAAY,EAAE;AAJI,WAAhB;AANgB,SAAX,CADQ,EAcrBW,IAdqB,EAAvB;AAeT;;AACDT,MAAAA,GAAG;AACH;AACA,GA7CW,EA6CT,CAACxB,IAAD,CA7CS,CAAT;AAkDA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAA,6BAKI;AACA,QAAA,SAAS,EAAC,YADV;AAEA,QAAA,OAAO,EAAE,MAAM;AACXC,UAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,YAAAA,YAAY,EAAE;AAAzB,WAAD,CAAP;AACH,SAJD;AAKI,QAAA,IAAI,EAAG,qEAAoEc,OAAO,CAACC,GAAR,CAAYC,0BAA2B,EALtH;AAAA,+BAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AALJ;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH;;GA3EuBnB,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport {Wrapper} from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\n\nrequire('dotenv').config()\n\n\n\nexport default function Loggin() {\n    const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n\n  \n    useEffect(() => {\n      // After requesting Github access, Github redirects back to your app with a code parameter\n        const url = window.location.href;\n        const hasCode = url.includes(\"?code=\");\n        console.log(hasCode);\n\n      // If Github API returns the code parameter\n      if (hasCode) {\n        const newUrl = url.split(\"?code=\");\n        console.log((\"HÄÄÄÄÄÄÄÄR, \", hasCode))\n        //window.history.pushState({}, null, newUrl[0]);\n        setData({ ...data, isLoading: true });\n\n        \n        const requestData = {\n            client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n            client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n            code: newUrl[1],\n            redirect_uri: \"http://localhost:3000/loggin/oauth\"\n        };\n        \n        console.log(requestData)\n\n        const postUrl = \"https://github.com/login/oauth/access_token\";\n        async function hej(){\n            \n            const endpoint = `${postUrl}`\n            const document = await (\n                await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"Access-Control-Allow-Origin\": \"*\"\n                },\n                body: JSON.stringify( {\n                    client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n                    client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n                    code: newUrl[1],\n                    redirect_uri: \"http://localhost:3000/loggin/oauth\"\n                    })\n                })\n            ).json();\n\t\t}\n\t\thej()\n\t}\n\t}, [data]);\n\n\n  \n  \n    return (\n      <Wrapper>\n        <>\n            {\n            // Link to request GitHub access\n            }\n            \n            <a\n            className=\"login-link\"\n            onClick={() => {\n                setData({ ...data, errorMessage: \"\" });\n            }}\n                href={`https://github.com/login/oauth/authorize?scope=identity&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}`}\n\n            >\n            <span>Login with GitHub</span>\n            </a>\n        </>\n       \n      </Wrapper>\n    );\n}\n  \n"]},"metadata":{},"sourceType":"module"}