{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\popup.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\"; //styles\n\nimport { PopUpStyle } from './Form.styles';\nimport Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PopUp(props) {\n  _s();\n\n  let content;\n  let whatToShow;\n  const [colorCharg_post, setColorCharg_post] = useState(\"\");\n\n  if (props.PopupInfo && props.PopupInfo.content) {\n    content = props.PopupInfo.content;\n    whatToShow = props.PopupInfo.whatToShow;\n  }\n\n  async function getLoadStationsForMovingBike() {\n    let citys = await Api.getAllCitys();\n    citys.forEach(city => {\n      city.charging_posts.map(chargePost => {\n        setColorCharg_post([\"red\", \"green\", \"purple\"]);\n      });\n    });\n  }\n\n  const handleSubmit = value => {\n    console.log(\"HEJ\", value);\n  };\n\n  console.log(colorCharg_post);\n  return /*#__PURE__*/_jsxDEV(PopUpStyle, {\n    children: [whatToShow === \"Scooter\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Scooter ID: \", content._id, \" Batteri: \", content.battery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Stad: \", content.city_location, \" Position, Latitude: \", content.position.lat, \" Longitude: \", content.position.long, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Hastighet \", content.speed, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Starttid \", content.start_time, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: getLoadStationsForMovingBike,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"bbb\",\n          \"data-testid\": \"dropdown\",\n          onChange: e => {\n            handleSubmit(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: '',\n            children: \"-- V\\xE4lj vart cykeln ska f\\xF6rflyttas --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), colorCharg_post.forEach(color => color !== null ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: [color]\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this) : console.log(\"hej\"))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getLoadStationsForMovingBike,\n          children: \" F\\xF6rflytta cykel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), \" \", content.category, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null, whatToShow === \"City\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Stad \", content.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Antal cyklar \", content.amount_of_bikes, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null, whatToShow === \"LoadStation\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Position (Visar endast 2 av positionerna nu)\", content.position.polygonePart1.lat, content.position.polygonePart2.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Antal cyklar ??????\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n} //  fungerar som REACt component till kartan\n// import React from \"react\";\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n// export default PopUp;\n\n_s(PopUp, \"HNA4Kv/Y0hPrSI/jbNl+Uu4P/uY=\");\n\n_c = PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/popup.js"],"names":["React","useState","PopUpStyle","Api","PopUp","props","content","whatToShow","colorCharg_post","setColorCharg_post","PopupInfo","getLoadStationsForMovingBike","citys","getAllCitys","forEach","city","charging_posts","map","chargePost","handleSubmit","value","console","log","_id","battery","city_location","position","lat","long","speed","start_time","e","target","color","category","amount_of_bikes","polygonePart1","polygonePart2","lng"],"mappings":"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","sourcesContent":["\nimport {React, useState } from \"react\";\n//styles\nimport {PopUpStyle} from './Form.styles'\nimport Api from \"../../api\";\n\nexport default function PopUp(props) {\n    let content;\n    let whatToShow;\n    const [colorCharg_post, setColorCharg_post] = useState(\"\")\n\n\n    if (props.PopupInfo && props.PopupInfo.content ) {\n        content = props.PopupInfo.content\n        whatToShow = props.PopupInfo.whatToShow\n    }\n    \n    async function getLoadStationsForMovingBike() {\n        let citys = await Api.getAllCitys();\n\n        citys.forEach(city => { \n            city.charging_posts.map(chargePost => {\n                setColorCharg_post([\"red\", \"green\", \"purple\"])\n            })\n        })\n    }\n\n\n    const handleSubmit = (value) => {\n        console.log(\"HEJ\", value)\n    }\n\n\n\n    console.log(colorCharg_post)\n\n\n\treturn (\n\t\t<PopUpStyle >\n        { whatToShow === \"Scooter\"  ? (\n            <>\n            <div> Scooter ID: {content._id} Batteri: {content.battery}</div>\n            <div> Stad: {content.city_location} Position, Latitude: {content.position.lat} Longitude: {content.position.long} </div>\n            <div> Hastighet {content.speed} </div>\n            <div> Starttid {content.start_time} </div>\n\n            <div onClick = {getLoadStationsForMovingBike}>\n                <select name=\"bbb\" data-testid=\"dropdown\" onChange={(e) => {\n                handleSubmit((e.target.value))\n                }}>\n                    <option value={''}>-- Välj vart cykeln ska förflyttas --</option>\n                    {colorCharg_post.forEach(color => color !== null ?\n                    \n                        <option \n                            key={color}\n                            value={[color]}\n                            >\n                            \n                        </option>: console.log(\"hej\"))}\n                </select>\n            </div>\n\n\n\n            <div> <button onClick={getLoadStationsForMovingBike}> Förflytta cykel </button> {content.category} </div>\n\n            </>\n            ) : null }\n    \n        { whatToShow === \"City\" ? (\n            <>\n            <div> Stad {content.city}</div>\n            <div> Antal cyklar {content.amount_of_bikes} </div>\n            </>\n            ) : null } \n \n        {  whatToShow === \"LoadStation\" ? (\n            <>\n            <div> Position (Visar endast 2 av positionerna nu) \n                {content.position.polygonePart1.lat }\n                { content.position.polygonePart2.lng }\n            </div>\n            <div> Antal cyklar ??????</div>\n            </>\n            ) : null } \n\t\t</PopUpStyle>\t\n\t);\n}\n\n\n\n\n\n\n\n\n\n//  fungerar som REACt component till kartan\n\n// import React from \"react\";\n\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n\n// export default PopUp;\n\n"]},"metadata":{},"sourceType":"module"}