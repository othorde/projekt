{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{React,useState,useEffect}from\"react\";//components\nimport MapForUser from'../../components/MapForUser/index';import Loader from'../../components/Loader';// hook\nimport{useFetchAUser}from'../../Hooks/useFetchAUser';import{useFetchAllCities}from'../../Hooks/useFetchAllCities';//styles\nimport{Container,Main,UserHistory,MapContainer}from'./Form.styles';//other\nimport{checkIfCoordInParkingZone,checkIfCoordInChargingPost}from'../../helperfunction/helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require('uuid'),uuidv4=_require.v4;var initialValue={showMap:false,startCoord:\"\",stopCoord:\"\"};/* Tar props, använder id för att hämta info om användare.  */var History=function History(_ref){var user=_ref.user,customer=_ref.customer;var theUser;var id;// Kollar om props finns, skickar in props från två olika komponenter, sätter alltid id.     \nif(user){theUser=user;id=user.value.id;}else{id=customer.id;}console.log(id);var _useFetchAUser=useFetchAUser(id),aUser=_useFetchAUser.aUser,aUserMessage=_useFetchAUser.aUserMessage,aUserLoading=_useFetchAUser.aUserLoading;var _useFetchAllCities=useFetchAllCities(),cities=_useFetchAllCities.cities,messageCities=_useFetchAllCities.messageCities,loadingCities=_useFetchAllCities.loadingCities;var _useState=useState(initialValue),_useState2=_slicedToArray(_useState,2),showMapForUser=_useState2[0],setShowMapForUser=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allCharging_posts=_useState4[0],setAllCharging_posts=_useState4[1];//parkering \nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),allParkingZones=_useState6[0],setAllParkingZones=_useState6[1];// laddstationer\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),userInvoice=_useState8[0],setUserInvoice=_useState8[1];// Alla uppg som visas\n/* Rendera och kör funktioner vid mount och om något i arrayn ändras */useEffect(function(){/* Kollar om cities är satt, Loopa städer, sätt värden till state */var getAllCities=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(cities,\"häär\");cities&&cities.forEach(function(city){city.charging_posts.length>0&&setAllCharging_posts(city.charging_posts);city.parking_zones.length>0&&setAllParkingZones(city.parking_zones);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getAllCities(){return _ref2.apply(this,arguments);};}();/* \"huvudfunktion\" Loopar igenom alla användarens resor och \n            kontrollerar resedetaljer mha de andra funktionerna\n            för att skapa invoice/info om resa\n        */function checkAllUsersTrips(){var arrayOfTrips=[];var time;var tripEnded;var tripStarted;var startAtParkingZone;var endedAtParkingZone;var startChargePoint;var endedAtChargePoint;var prices;aUser.forEach(function(trip){time=getTimeOfTrip(trip.start.time,trip.stop.time);tripEnded=[trip.stop.position.lat,trip.stop.position.lng];tripStarted=[trip.start.position.lat,trip.start.position.lng];startAtParkingZone=checkIfCoordInParkingZone(tripStarted,allParkingZones);endedAtParkingZone=checkIfCoordInParkingZone(tripEnded,allParkingZones);startChargePoint=checkIfCoordInChargingPost(tripStarted,allCharging_posts);endedAtChargePoint=checkIfCoordInChargingPost(tripEnded,allCharging_posts);prices=checkUserPrices(startAtParkingZone,startChargePoint,endedAtParkingZone,endedAtChargePoint,time);var atrip={tripId:trip.id,date:trip.date,startTime:trip.start.time,stopTime:trip.stop.time,tripStartedPos:tripStarted,tripEndedPos:tripEnded,startAtParkingZone:startAtParkingZone,endedAtParkingZone:endedAtParkingZone,startChargePoint:startChargePoint,endedAtChargePoint:endedAtChargePoint,timeOfTrip:time,startFee:prices.startFee,timeFee:prices.minFee,discount:prices.discount,totalCost:prices.minFee+prices.startFee};arrayOfTrips.push(atrip);});setUserInvoice(arrayOfTrips);}getAllCities();checkAllUsersTrips();},[theUser,aUser,aUserMessage,cities,loadingCities,aUserLoading,allCharging_posts,allParkingZones]);/* rita om, om något i arrayn ändras */useEffect(function(){},[setUserInvoice,userInvoice,showMapForUser,setShowMapForUser]);/* Räknar ut kunds pris */var checkUserPrices=function checkUserPrices(startAtParkingZone,startChargePoint,endedAtParkingZone,endedAtChargePoint,time){var prices={startFee:10,discount:0,minFee:2.5*time};/* Om en resa startar i fri parkering och slutar på en definerad blir startavg lägre */if(startAtParkingZone&&startAtParkingZone.returned===false||startChargePoint&&startChargePoint.returned===false){if(endedAtParkingZone&&endedAtParkingZone.returned===true||endedAtChargePoint&&endedAtChargePoint.returned===true){prices.startFee=8;prices.discount=2;return prices;}}/* startavg högre (12:-) om man friparkerar dvs ej lämnar inom park eller laddstation */if(endedAtParkingZone&&endedAtParkingZone.returned===false&&endedAtChargePoint&&endedAtChargePoint.returned===false){prices.startFee=12;return prices;}return prices;};/* Räknar ut tiden för resan, gör om till sekunder \n       subtraherar och dividerar för att få ut minuter\n    */var getTimeOfTrip=function getTimeOfTrip(starttime,stoptime){var arrStarttime;var arrStoptime;var stopTime;var startTime;var time;arrStarttime=starttime.split(\".\");arrStoptime=stoptime.split(\".\");arrStarttime[0]=arrStarttime[0]*60*60;arrStarttime[1]=arrStarttime[1]*60;arrStoptime[0]=arrStoptime[0]*60*60;arrStoptime[1]=arrStoptime[1]*60;stopTime=arrStoptime[0]+arrStoptime[1];startTime=arrStarttime[0]+arrStarttime[1];time=(stopTime-startTime)/60;return time;};/*\n        Tar props som visar var användaren trycker på skärmen med musen.\n        Sparar koordinaterna för att visa upp kartan i närheten där man tryckte.\n        Då ser man enkelt kartan vid ex mobilläge.\n        (om props finns)\n    */var showMap=function showMap(startCoord,stopCoord,e){var pageY=e.pageY;customer&&(pageY=pageY-200);setShowMapForUser({showMap:!showMapForUser.showMap,startCoord:startCoord,stopCoord:stopCoord,pageY:pageY});};/* Retunerar table, men visar loading komponent om loadingCities eller aUserLoading ej är klar */return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Main,{showMap:showMapForUser.showMap,children:/*#__PURE__*/_jsx(UserHistory,{children:!loadingCities&&!aUserLoading?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"caption\",{children:\" Historik \"}),/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Datum\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Starttid\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Sluttid\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Total tid\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Visa f\\xE4rd p\\xE5 karta\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Start avgift\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Rabatt\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Tid avgift\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Total kostnad\"})]},uuidv4())}),/*#__PURE__*/_jsx(\"tbody\",{children:userInvoice.length>0?userInvoice.map(function(elem){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Datum\",children:[\" \",elem.date]}),/*#__PURE__*/_jsx(\"td\",{\"data-label\":\"Starttid\",children:elem.startTime}),/*#__PURE__*/_jsx(\"td\",{\"data-label\":\"Sluttid\",children:elem.stopTime}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Total tid\",children:[elem.timeOfTrip,\" min\"]}),/*#__PURE__*/_jsx(\"td\",{\"data-label\":\"Visa f\\xE4rd p\\xE5 karta\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button vertical-align:middle\",onClick:function onClick(e){return showMap(elem.tripStartedPos,elem.tripEndedPos,e);},children:/*#__PURE__*/_jsx(\"span\",{children:\"F\\xE4rd \"})})}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Start avgift\",children:[elem.startFee,\":-\"]}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Rabatt\",children:[elem.discount,\":-\"]}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Minutpris\",children:[elem.timeFee,\":-\"]}),/*#__PURE__*/_jsxs(\"td\",{\"data-label\":\"Total kostnad\",children:[elem.totalCost,\":- \"]})]},uuidv4());}):/*#__PURE__*/_jsx(\"tr\",{},uuidv4())})]}):/*#__PURE__*/_jsxs(Loader,{children:[\" \",/*#__PURE__*/_jsx(\"p\",{children:aUserMessage||messageCities}),\" \"]})})}),/*#__PURE__*/_jsx(MapContainer,{showMap:showMapForUser.showMap,pageY:showMapForUser.pageY,children:showMapForUser.showMap&&/*#__PURE__*/_jsx(MapForUser,{showMapForUser:showMapForUser,children:\" \"})})]});};export default History;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/History/index.js"],"names":["React","useState","useEffect","MapForUser","Loader","useFetchAUser","useFetchAllCities","Container","Main","UserHistory","MapContainer","checkIfCoordInParkingZone","checkIfCoordInChargingPost","require","uuidv4","v4","initialValue","showMap","startCoord","stopCoord","History","user","customer","theUser","id","value","console","log","aUser","aUserMessage","aUserLoading","cities","messageCities","loadingCities","showMapForUser","setShowMapForUser","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userInvoice","setUserInvoice","getAllCities","forEach","city","charging_posts","length","parking_zones","checkAllUsersTrips","arrayOfTrips","time","tripEnded","tripStarted","startAtParkingZone","endedAtParkingZone","startChargePoint","endedAtChargePoint","prices","trip","getTimeOfTrip","start","stop","position","lat","lng","checkUserPrices","atrip","tripId","date","startTime","stopTime","tripStartedPos","tripEndedPos","timeOfTrip","startFee","timeFee","minFee","discount","totalCost","push","returned","starttime","stoptime","arrStarttime","arrStoptime","split","e","pageY","map","elem"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from \"react\";\n\n//components\nimport MapForUser from '../../components/MapForUser/index'\nimport Loader from '../../components/Loader'\n// hook\nimport {useFetchAUser} from '../../Hooks/useFetchAUser'\nimport {useFetchAllCities} from '../../Hooks/useFetchAllCities'\n//styles\nimport {Container, Main, UserHistory, MapContainer} from './Form.styles'\n//other\nimport {checkIfCoordInParkingZone, checkIfCoordInChargingPost } from '../../helperfunction/helpers'\nconst { v4: uuidv4 } = require('uuid');\n\nconst initialValue = {\n    showMap: false,\n    startCoord: \"\",\n    stopCoord: \"\",\n}\n\n/* Tar props, använder id för att hämta info om användare.  */\nconst History = ({user, customer})  => {\n    let theUser;\n    let id;\n \n    // Kollar om props finns, skickar in props från två olika komponenter, sätter alltid id.     \n    if(user) {\n        theUser = user;\n        id = user.value.id\n    } else {\n        id = customer.id;\n    }\n    console.log(id)\n    const {aUser, aUserMessage, aUserLoading} = useFetchAUser(id);\n    const {cities, messageCities, loadingCities} = useFetchAllCities(); \n    const [showMapForUser, setShowMapForUser] = useState(initialValue);\n    const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering \n    const [allParkingZones, setAllParkingZones] = useState([]); // laddstationer\n    const [userInvoice, setUserInvoice] = useState([]); // Alla uppg som visas\n\n\n\n\n    /* Rendera och kör funktioner vid mount och om något i arrayn ändras */\n    useEffect(() => {\n\n        /* Kollar om cities är satt, Loopa städer, sätt värden till state */\n        const getAllCities = async () => {\n            console.log(cities, \"häär\")\n            cities && cities.forEach(city => {\n                city.charging_posts.length > 0 && (setAllCharging_posts(city.charging_posts));\n                city.parking_zones.length > 0 && (setAllParkingZones(city.parking_zones));\n            });\n        }\n\n        /* \"huvudfunktion\" Loopar igenom alla användarens resor och \n            kontrollerar resedetaljer mha de andra funktionerna\n            för att skapa invoice/info om resa\n        */\n        function checkAllUsersTrips() {\n\n            let arrayOfTrips = [];\n            let time;\n            let tripEnded;\n            let tripStarted;\n            let startAtParkingZone;\n            let endedAtParkingZone;\n            let startChargePoint;\n            let endedAtChargePoint;\n            let prices;\n\n            aUser.forEach(trip => {\n                time = getTimeOfTrip(trip.start.time, trip.stop.time)\n                tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n                tripStarted = [trip.start.position.lat, trip.start.position.lng];\n                startAtParkingZone = checkIfCoordInParkingZone(tripStarted, allParkingZones);\n                endedAtParkingZone = checkIfCoordInParkingZone(tripEnded, allParkingZones);\n                startChargePoint = checkIfCoordInChargingPost(tripStarted, allCharging_posts);\n                endedAtChargePoint = checkIfCoordInChargingPost(tripEnded, allCharging_posts);\n                prices = checkUserPrices(startAtParkingZone, startChargePoint, endedAtParkingZone, endedAtChargePoint, time);\n\n                const atrip = { \n                    tripId: trip.id,\n                    date: trip.date,\n                    startTime: trip.start.time,\n                    stopTime: trip.stop.time,\n                    tripStartedPos: tripStarted,\n                    tripEndedPos: tripEnded,\n                    startAtParkingZone: startAtParkingZone,\n                    endedAtParkingZone: endedAtParkingZone,\n                    startChargePoint: startChargePoint,\n                    endedAtChargePoint: endedAtChargePoint,\n                    timeOfTrip: time,\n                    startFee: prices.startFee,\n                    timeFee: prices.minFee,\n                    discount: prices.discount,\n                    totalCost: (prices.minFee + prices.startFee)\n                }\n                arrayOfTrips.push(atrip);\n            })\n            setUserInvoice(arrayOfTrips)\n        }\n\n        getAllCities()\n        checkAllUsersTrips()\n    }, [theUser, aUser, aUserMessage, cities, loadingCities, aUserLoading, allCharging_posts, allParkingZones])\n\n    /* rita om, om något i arrayn ändras */\n    useEffect(() => {\n    }, [setUserInvoice, userInvoice, showMapForUser, setShowMapForUser])\n\n    \n    /* Räknar ut kunds pris */\n    const checkUserPrices = (startAtParkingZone, startChargePoint, endedAtParkingZone, endedAtChargePoint, time) => {\n\n        let prices = {\n            startFee: 10,\n            discount: 0,\n            minFee: 2.5 * time,\n        }\n\n        /* Om en resa startar i fri parkering och slutar på en definerad blir startavg lägre */\n        if((startAtParkingZone && startAtParkingZone.returned === false)\n        || (startChargePoint && startChargePoint.returned === false)) {\n            if ((endedAtParkingZone && endedAtParkingZone.returned === true) \n            || (endedAtChargePoint && endedAtChargePoint.returned === true)) {\n                prices.startFee = 8;\n                prices.discount = 2;\n                return prices\n            }\n        }\n        /* startavg högre (12:-) om man friparkerar dvs ej lämnar inom park eller laddstation */\n        if((endedAtParkingZone && endedAtParkingZone.returned === false)\n            && (endedAtChargePoint && endedAtChargePoint.returned === false)) {\n                prices.startFee = 12;\n                return prices\n            }\n        return prices\n    }\n\n    /* Räknar ut tiden för resan, gör om till sekunder \n       subtraherar och dividerar för att få ut minuter\n    */\n    const getTimeOfTrip = (starttime, stoptime) => {\n        \n        var arrStarttime;\n        var arrStoptime;\n        var stopTime;\n        var startTime;\n        var time;\n   \n        arrStarttime = starttime.split(\".\");\n        arrStoptime = stoptime.split(\".\"); \n        arrStarttime[0] = arrStarttime[0] * 60 * 60;\n        arrStarttime[1] = arrStarttime[1] * 60;\n        arrStoptime[0] = arrStoptime[0] * 60 * 60;\n        arrStoptime[1] = arrStoptime[1] * 60;\n        stopTime = arrStoptime[0] + arrStoptime[1];\n        startTime = arrStarttime[0] + arrStarttime[1];\n        time = (stopTime - startTime) / 60;\n\n        return time\n    }\n\n    /*\n        Tar props som visar var användaren trycker på skärmen med musen.\n        Sparar koordinaterna för att visa upp kartan i närheten där man tryckte.\n        Då ser man enkelt kartan vid ex mobilläge.\n        (om props finns)\n    */\n    const showMap = (startCoord, stopCoord, e) => {\n\n        let pageY = e.pageY;\n        customer && (pageY = pageY - 200);\n        \n        setShowMapForUser({\n            showMap: !showMapForUser.showMap,\n            startCoord: startCoord,\n            stopCoord: stopCoord,\n            pageY: pageY\n        })\n    }\n\n    /* Retunerar table, men visar loading komponent om loadingCities eller aUserLoading ej är klar */\n\treturn (\n        <Container>  \n            <Main showMap = {showMapForUser.showMap} >\n                <UserHistory> \n                    { !loadingCities && !aUserLoading ? (\n                        <table>\n                            <caption> Historik </caption>\n                            <thead>\n                                <tr key={uuidv4()}>\n                                    <th scope=\"col\">Datum</th>\n                                    <th scope=\"col\">Starttid</th>\n                                    <th scope=\"col\">Sluttid</th>\n                                    <th scope=\"col\">Total tid</th>\n                                    <th scope=\"col\">Visa färd på karta</th>\n                                    <th scope=\"col\">Start avgift</th>\n                                    <th scope=\"col\">Rabatt</th>\n                                    <th scope=\"col\">Tid avgift</th>\n                                    <th scope=\"col\">Total kostnad</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {userInvoice.length > 0 ? userInvoice.map(elem => \n                                <tr key={uuidv4()}>\n                                    <td data-label=\"Datum\"> {elem.date}</td>\n                                    <td data-label=\"Starttid\">{elem.startTime}</td>\n                                    <td data-label=\"Sluttid\">{elem.stopTime}</td>\n                                    <td data-label=\"Total tid\">{elem.timeOfTrip} min</td>\n                                    <td data-label=\"Visa färd på karta\">\n                                    { <button className=\"button vertical-align:middle\" onClick={(e) => \n                                        showMap(elem.tripStartedPos, elem.tripEndedPos, e)}><span>Färd </span></button>}\n                                    </td>\n                                    <td data-label=\"Start avgift\" >{elem.startFee}:-</td>\n                                    <td data-label=\"Rabatt\">{elem.discount}:-</td>\n                                    <td data-label=\"Minutpris\">{elem.timeFee}:-</td>\n                                    <td data-label=\"Total kostnad\">{elem.totalCost}:- </td>\n                                </tr>\n                                ):  \n                                <tr key={uuidv4()}>\n                                </tr>}\n                            </tbody>\n                        </table>\n                    ) : ( <Loader> <p>{aUserMessage || messageCities}</p> </Loader> )}\n                </UserHistory>\n            </Main>\n            <MapContainer showMap = {showMapForUser.showMap} pageY={showMapForUser.pageY} >\n                {showMapForUser.showMap && <MapForUser showMapForUser = {showMapForUser}> </MapForUser>}\n            </MapContainer>\n        </Container>\n    )\n}\n\nexport default History\n"]},"metadata":{},"sourceType":"module"}