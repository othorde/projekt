{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Invoice\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\"; //components\n\nimport Api from '../../api'; //styles & img\n\nimport { Container } from './Form.styles'; //other\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar pointInPolygon = require('point-in-polygon');\n\nexport default function Invoice(props) {\n  _s();\n\n  //hooks\n  // måste ha resan och koordinaterna\n  // måste senare räkna ut var koordinaterna ligger och jmföra\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n  /* Sparara alla ladda och parkeringszoner i state */\n\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    setUserTrips(props);\n  }, []);\n\n  function checkAllUsersTrips() {\n    userTrips.props.forEach(trip => {\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n\n      if (checkIfTripEndedAtParkingZone(tripEnded)) {}\n    });\n  }\n  /* Kollar om resan slutade i en parkeringszon */\n\n\n  function checkIfTripEndedAtParkingZone(tripEnded) {\n    if (tripEnded) {\n      let res;\n      allParkingZones.forEach(element => {\n        let polyGon = [[element.position.polygonePart1.lat, element.position.polygonePart1.lng], [element.position.polygonePart2.lat, element.position.polygonePart2.lng], [element.position.polygonePart3.lat, element.position.polygonePart3.lng], [element.position.polygonePart4.lat, element.position.polygonePart4.lng]];\n        return checkIfPointInPolyGon(tripEnded, polyGon);\n      });\n    }\n  }\n\n  function checkIfTripEndedAtChargingPost() {\n    if (props && props.userHistory) {\n      let res = false;\n      var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n      allCharging_posts.forEach(element => {\n        let polyGon = [[element.position.polygonePart1.lat, element.position.polygonePart1.lng], [element.position.polygonePart2.lat, element.position.polygonePart2.lng], [element.position.polygonePart3.lat, element.position.polygonePart3.lng], [element.position.polygonePart4.lat, element.position.polygonePart4.lng]];\n        res = checkIfPointInPolyGon(tripEnded, polyGon);\n        console.log(res);\n      });\n    }\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  async function calculateCost() {\n    checkAllUsersTrips();\n    /* checkIfTripEndedAtParkingZone()\n    checkIfTripEndedAtChargingPost()  */\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: calculateCost,\n    children: \"Faktura\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Invoice, \"sTUk8KtU2MOhNHt6kIU+pjVbrqc=\");\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Invoice/index.js"],"names":["React","useEffect","useState","Api","Container","pointInPolygon","require","Invoice","props","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","checkAllUsersTrips","trip","tripEnded","stop","position","lat","lng","checkIfTripEndedAtParkingZone","res","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","checkIfTripEndedAtChargingPost","userHistory","console","log","point","polygone","calculateCost"],"mappings":"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","sourcesContent":["import {React, useEffect, useState } from \"react\";\n\n//components\nimport Api from '../../api'\n//styles & img\nimport {Container} from './Form.styles'\n//other\nvar pointInPolygon = require('point-in-polygon');\n\nexport default function Invoice(props) {\n\t//hooks\n    // måste ha resan och koordinaterna\n    // måste senare räkna ut var koordinaterna ligger och jmföra\n\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState([]);\n\n    /* Sparara alla ladda och parkeringszoner i state */\n \n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        setUserTrips(props)\n        \n    }, [])\n\n\n    function checkAllUsersTrips() {\n\n        userTrips.props.forEach(trip => {\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            if (checkIfTripEndedAtParkingZone(tripEnded)) {\n                \n            }\n        })\n    }\n\n\n\n    /* Kollar om resan slutade i en parkeringszon */\n    function checkIfTripEndedAtParkingZone(tripEnded) {\n\n        if(tripEnded) {\n            let res;\n            allParkingZones.forEach(element => {\n                let polyGon=[\n                    [element.position.polygonePart1.lat,\n                    element.position.polygonePart1.lng],\n                    [element.position.polygonePart2.lat,\n                    element.position.polygonePart2.lng],\n                    [element.position.polygonePart3.lat,\n                    element.position.polygonePart3.lng],\n                    [element.position.polygonePart4.lat,\n                    element.position.polygonePart4.lng]\n                ]\n                return checkIfPointInPolyGon(tripEnded, polyGon);\n            });\n        }\n    }\n\n    function checkIfTripEndedAtChargingPost() {\n        if(props && props.userHistory) {\n            let res = false;\n            var tripEnded = [props.userHistory.stop.position.lat, props.userHistory.stop.position.lng];\n            allCharging_posts.forEach(element => {\n                let polyGon=[\n                    [ element.position.polygonePart1.lat, element.position.polygonePart1.lng],\n                    [element.position.polygonePart2.lat, element.position.polygonePart2.lng],\n                    [element.position.polygonePart3.lat, element.position.polygonePart3.lng],\n                    [element.position.polygonePart4.lat, element.position.polygonePart4.lng ]\n                ]\n                res = checkIfPointInPolyGon(tripEnded, polyGon);\n                console.log(res)\n            });\n        }\n    }\n\n\n    function checkIfPointInPolyGon(point, polygone) {\n        return pointInPolygon(point, polygone);\n    }\n\n\n\n\n    async function calculateCost() {\n       \n        checkAllUsersTrips()\n        /* checkIfTripEndedAtParkingZone()\n        checkIfTripEndedAtChargingPost()  */\n    }\n\n\treturn (\n        <button onClick={calculateCost}>Faktura</button>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}