{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect,useContext}from\"react\";import{useNavigate}from\"react-router-dom\";// components\nimport Loader from'../../components/Loader';// style\nimport{Wrapper}from\"./Form.styles\";//other\nimport AppContext from\"../../AppContext\";import Api from\"../../Api\";import{PROXY_URL,defaultConfigAuthenticate}from'../../config';import{jsx as _jsx}from\"react/jsx-runtime\";require('dotenv').config();/* Hämtar ut url koden av github, som redirectar hit. Skickar sedan koden till backend\n   så att den kan göra de request som behövs till github. \n   Får sedan tillbaka användaruppg, som används för att logga in användaren\n   genom vårt api.\n*/export default function LandingPage(){var _useState=useState(Boolean),_useState2=_slicedToArray(_useState,2),loggedInUser=_useState2[0],setLoggedInUser=_useState2[1];var navigate=useNavigate();var myContext=useContext(AppContext);useEffect(function(){// Hämtar url från webbläsare\nvar url=window.location.href;var hasCode=url.includes(\"?code=\");// Om github skickar tillbaka kod, ta ut koden ur URL strängen\nif(hasCode){var newUrl=url.split(\"?code=\");window.history.pushState({},null,newUrl[0]);var requestData={code:newUrl[1]};getGitInfo(requestData);}/* tar emot reqData från useEffect, skickar till backend och tar emot inlogg uppg. mha info från github */function getGitInfo(_x){return _getGitInfo.apply(this,arguments);}function _getGitInfo(){_getGitInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(requestData){var res,result,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoggedInUser(\"Not OK\");myContext.toggleAuth(false);_context.prev=2;_context.next=5;return fetch(PROXY_URL,_objectSpread(_objectSpread({},defaultConfigAuthenticate),{},{body:JSON.stringify({code:requestData.code})}));case 5:_context.next=7;return _context.sent.json();case 7:res=_context.sent;if(!(res&&res.login)){_context.next=13;break;}_context.next=11;return Api.logginUserViaGit(res.login);case 11:result=_context.sent;if(result&&result.data.type===\"success\"){localStorage.clear();localStorage.setItem('user',JSON.stringify(res.login));localStorage.setItem('tag',JSON.stringify(result.data.user.tag));localStorage.setItem('id',JSON.stringify(result.data.user.id));user={user:res.login,tag:result.data.user.tag,id:result.data.user.id,token:result.data.token};myContext.setUserValues(user);myContext.toggleAuth(true);setLoggedInUser(true);}case 13:_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](2);setLoggedInUser(\"Not OK\");myContext.toggleAuth(false);case 19:case\"end\":return _context.stop();}}},_callee,null,[[2,15]]);}));return _getGitInfo.apply(this,arguments);}});/* När loggedInUser eller set ändras navigera till home\n\t   om tag är satt och loggedInUser är true */useEffect(function(){var tag=localStorage.getItem(\"tag\");loggedInUser===true&&tag&&navigate(\"/login/home\");},[loggedInUser,setLoggedInUser,navigate]);return/*#__PURE__*/_jsx(Wrapper,{children:!loggedInUser===\"Not OK\"?/*#__PURE__*/_jsx(\"p\",{children:\"Det gick inte att logga in just nu\"}):/*#__PURE__*/_jsx(Loader,{})});}","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/routes/LandingPage/index.js"],"names":["React","useState","useEffect","useContext","useNavigate","Loader","Wrapper","AppContext","Api","PROXY_URL","defaultConfigAuthenticate","require","config","LandingPage","Boolean","loggedInUser","setLoggedInUser","navigate","myContext","url","window","location","href","hasCode","includes","newUrl","split","history","pushState","requestData","code","getGitInfo","toggleAuth","fetch","body","JSON","stringify","json","res","login","logginUserViaGit","result","data","type","localStorage","clear","setItem","user","tag","id","token","setUserValues","getItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// components\nimport Loader from '../../components/Loader'\n// style\nimport {Wrapper} from \"./Form.styles\";\n//other\nimport AppContext from \"../../AppContext\";\nimport Api from \"../../Api\";\nimport {PROXY_URL, defaultConfigAuthenticate} from '../../config'\n\nrequire('dotenv').config()\n\n/* Hämtar ut url koden av github, som redirectar hit. Skickar sedan koden till backend\n   så att den kan göra de request som behövs till github. \n   Får sedan tillbaka användaruppg, som används för att logga in användaren\n   genom vårt api.\n*/\nexport default function LandingPage() {\n\tconst [loggedInUser, setLoggedInUser] = useState(Boolean);\n\tconst navigate = useNavigate();\n\tconst myContext = useContext(AppContext);        \n\n\tuseEffect(() => {\n\t\t// Hämtar url från webbläsare\n\t\tconst url = window.location.href;\n\t\tconst hasCode = url.includes(\"?code=\");\n\n\t\t// Om github skickar tillbaka kod, ta ut koden ur URL strängen\n\t\tif (hasCode) {\n\t\t\tconst newUrl = url.split(\"?code=\");\n\t\t\twindow.history.pushState({}, null, newUrl[0]);\n\t\t\tconst requestData = {\n\t\t\t\tcode: newUrl[1]\n\t\t\t};\n\t\t\tgetGitInfo(requestData);\n\t\t}\n\n\t\t\n\t\t/* tar emot reqData från useEffect, skickar till backend och tar emot inlogg uppg. mha info från github */\n\t\tasync function getGitInfo(requestData) {\n\t\t\t\n\t\t\tsetLoggedInUser(\"Not OK\")\n\t\t\tmyContext.toggleAuth(false);\n\t\t\ttry {\n\t\t\t\tlet res;\n\t\t\t\tlet result;\n\t\t\t\tres = await (\n\t\t\t\t\tawait fetch(PROXY_URL, {\n\t\t\t\t\t\t...defaultConfigAuthenticate,\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tcode: requestData.code,\n\t\t\t\t\t\t})\n\t\t\t\t\t})).json();\n\t\t\t\t/* loggar in genom api och sätter user värden i localStorage samt i hook */\n\t\t\t\tif (res && res.login) {\n\t\t\t\t\tresult = await Api.logginUserViaGit(res.login)\n\t\t\t\t\tif (result && result.data.type === \"success\") {\n\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\tlocalStorage.setItem('user', JSON.stringify(res.login));\n\t\t\t\t\t\tlocalStorage.setItem('tag', JSON.stringify(result.data.user.tag));\n\t\t\t\t\t\tlocalStorage.setItem('id', JSON.stringify(result.data.user.id));\n\n\t\t\t\t\t\tconst user = {\n\t\t\t\t\t\t\tuser: res.login,\n\t\t\t\t\t\t\ttag: result.data.user.tag,\n\t\t\t\t\t\t\tid: result.data.user.id,\n\t\t\t\t\t\t\ttoken: result.data.token\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmyContext.setUserValues(user)\n\t\t\t\t\t\tmyContext.toggleAuth(true);\n\t\t\t\t\t\tsetLoggedInUser(true)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetLoggedInUser(\"Not OK\")\n\t\t\t\tmyContext.toggleAuth(false);\n\t\t\t}\n\t\t}\n\t});\n\n\t/* När loggedInUser eller set ändras navigera till home\n\t   om tag är satt och loggedInUser är true */\n\tuseEffect(() => {\n\t\tlet tag = localStorage.getItem(\"tag\");\n\t\t(loggedInUser === true && tag) && navigate(\"/login/home\")\n\t}, [loggedInUser, setLoggedInUser, navigate])\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{!loggedInUser === \"Not OK\" ? \n\t\t\t<p>Det gick inte att logga in just nu</p> \n\t\t\t: (\n\t\t\t\t<Loader></Loader>\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}