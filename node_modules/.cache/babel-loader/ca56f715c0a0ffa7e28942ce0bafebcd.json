{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\MoveBike\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoveBike(props) {\n  _s();\n\n  const [charging_posts, setCharging_posts] = useState([]);\n  const [moveBikeTo, setMoveBikeTo] = useState(\"\");\n  console.log(props); // Här måste jag hämta på riktigt, nu laddas endast hårdkodade värde in\n  // Har lagt upp det som det ungefär kommer se ut, kanske behöver ändra något här\n\n  /* funktionen hämtar den stad där cykeln befinner sig \n     loopar igenom och sparar position och färgkod för laddningsstationen \n     Kontrollera denna när vi har fler laddningsstationer\n     */\n\n  async function getLoadStationsForMovingBike() {\n    let city = await Api.getACity(props.city);\n    city[0].charging_posts.map(elem => {\n      setCharging_posts([elem]);\n    });\n  } // Vad behöver uppdateras?\n  // Scooterns plats ny long lat\n  // Uppdatera hur många som finns i föregående zon\n  // uppdatera hur många som finns i den nya zonen\n\n\n  const handleSubmit = () => {\n    if (moveBikeTo != \"noValue\" && props.props) {\n      let bikeId = props.id;\n      var lat = 59.3178 + Math.random() * (59.3148 - 59.3178); // lat = y\n\n      var lng = 18.0549 + Math.random() * (18.0676 - 18.0549); //lng = x\n\n      console.log(lat, lng); // var lat = y_min + (Math.random() * (y_max - y_min)); // lat = y\n      // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n\n      console.log(\"MOVE BIKE \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: getLoadStationsForMovingBike,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"bbb\",\n      \"data-testid\": \"dropdown\",\n      onChange: e => {\n        setMoveBikeTo(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'noValue',\n        children: \"-- V\\xE4lj vart cykeln ska f\\xF6rflyttas --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), charging_post.map(elem => elem !== null && /*#__PURE__*/_jsxDEV(\"option\", {\n        value: elem.color,\n        children: [elem.color + \" zon\", console.log(elem.position)]\n      }, elem.color, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \" F\\xF6rflytta cykel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoveBike, \"6QyKJ51TN8qpjCO9pEDLiXDZgkw=\");\n\n_c = MoveBike;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveBike\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/MoveBike/index.js"],"names":["React","useState","Api","MoveBike","props","charging_posts","setCharging_posts","moveBikeTo","setMoveBikeTo","console","log","getLoadStationsForMovingBike","city","getACity","map","elem","handleSubmit","bikeId","id","lat","Math","random","lng","e","target","value","charging_post","color","position"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAJoC,CAKpC;AACA;;AAEA;AACJ;AACA;AACA;;AACI,iBAAeO,4BAAf,GAA8C;AAC1C,QAAIC,IAAI,GAAG,MAAMV,GAAG,CAACW,QAAJ,CAAaT,KAAK,CAACQ,IAAnB,CAAjB;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQP,cAAR,CAAuBS,GAAvB,CAA2BC,IAAI,IAAI;AAC/BT,MAAAA,iBAAiB,CAAC,CAACS,IAAD,CAAD,CAAjB;AACH,KAFD;AAGH,GAjBmC,CAmBpC;AACA;AACA;AACA;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIT,UAAU,IAAI,SAAd,IAA2BH,KAAK,CAACA,KAArC,EAA4C;AACxC,UAAIa,MAAM,GAAGb,KAAK,CAACc,EAAnB;AAEA,UAAIC,GAAG,GAAG,UAAWC,IAAI,CAACC,MAAL,MAAiB,UAAU,OAA3B,CAArB,CAHwC,CAGmB;;AAC3D,UAAIC,GAAG,GAAG,UAAWF,IAAI,CAACC,MAAL,MAAiB,UAAU,OAA3B,CAArB,CAJwC,CAImB;;AAC3DZ,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ,EAAiBG,GAAjB,EALwC,CAOxC;AACA;;AAEAb,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AACJ,GAbD;;AAeH,sBACO;AAAK,IAAA,OAAO,EAAIC,4BAAhB;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAmB,qBAAY,UAA/B;AAA0C,MAAA,QAAQ,EAAGY,CAAD,IAAO;AAC3Df,QAAAA,aAAa,CAAEe,CAAC,CAACC,MAAF,CAASC,KAAX,CAAb;AACC,OAFD;AAAA,8BAGI;AAAQ,QAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKC,aAAa,CAACZ,GAAd,CAAkBC,IAAI,IAAIA,IAAI,KAAK,IAAT,iBACvB;AAEI,QAAA,KAAK,EAAEA,IAAI,CAACY,KAFhB;AAAA,mBAIKZ,IAAI,CAACY,KAAL,GAAa,MAJlB,EAKMlB,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACa,QAAjB,CALN;AAAA,SACSb,IAAI,CAACY,KADd;AAAA;AAAA;AAAA;AAAA,cADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAA,mCAAM;AAAQ,QAAA,OAAO,EAAEX,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAkBA;;GAxDuBb,Q;;KAAAA,Q","sourcesContent":["import {React, useState} from \"react\";\nimport Api from \"../../api\";\nexport default function MoveBike(props) {\n\n    const [charging_posts, setCharging_posts] = useState([])\n    const [moveBikeTo, setMoveBikeTo] = useState(\"\")\n    console.log(props)\n    // Här måste jag hämta på riktigt, nu laddas endast hårdkodade värde in\n    // Har lagt upp det som det ungefär kommer se ut, kanske behöver ändra något här\n\n    /* funktionen hämtar den stad där cykeln befinner sig \n       loopar igenom och sparar position och färgkod för laddningsstationen \n       Kontrollera denna när vi har fler laddningsstationer\n       */\n    async function getLoadStationsForMovingBike() {\n        let city = await Api.getACity(props.city);\n        city[0].charging_posts.map(elem => {\n            setCharging_posts([elem])\n        })\n    }\n\n    // Vad behöver uppdateras?\n    // Scooterns plats ny long lat\n    // Uppdatera hur många som finns i föregående zon\n    // uppdatera hur många som finns i den nya zonen\n    const handleSubmit = () => {\n        if (moveBikeTo != \"noValue\" && props.props) {\n            let bikeId = props.id;\n\n            var lat = 59.3178 + (Math.random() * (59.3148 - 59.3178)); // lat = y\n            var lng = 18.0549 + (Math.random() * (18.0676 - 18.0549)); //lng = x\n            console.log(lat, lng)\n\n            // var lat = y_min + (Math.random() * (y_max - y_min)); // lat = y\n            // var lng = x_min + (Math.random() * (x_max - x_min)); //lng = x\n\n            console.log(\"MOVE BIKE \")\n        }\n    }\n\n\treturn (\n        <div onClick = {getLoadStationsForMovingBike}>\n            <select name=\"bbb\" data-testid=\"dropdown\" onChange={(e) => {\n            setMoveBikeTo((e.target.value))\n            }}>\n                <option value={'noValue'}>-- Välj vart cykeln ska förflyttas --</option>\n                {charging_post.map(elem => elem !== null  &&\n                    <option \n                        key={elem.color}\n                        value={elem.color}\n                        >\n                        {elem.color + \" zon\"}\n                        { console.log(elem.position)}\n                    </option> )}\n            </select>\n            <div> <button onClick={handleSubmit}> Förflytta cykel </button> </div>\n        </div>\n\t);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}