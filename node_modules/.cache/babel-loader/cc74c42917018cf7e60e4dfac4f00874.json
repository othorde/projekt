{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\PopUp\\\\index.js\";\nimport { React, useState } from \"react\"; //styles\n\nimport { PopUpStyle } from './Form.styles';\nimport MoveBike from \"../MoveBike\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PopUp(props) {\n  let content;\n  let whatToShow;\n\n  if (props.PopupInfo && props.PopupInfo.content) {\n    content = props.PopupInfo.content;\n    whatToShow = props.PopupInfo.whatToShow;\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopUpStyle, {\n    children: [whatToShow === \"Scooter\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n          children: \"Din Historik\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Starttid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sluttid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total tid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Visa p\\xE5 karta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Kostnad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userHistory.map(elem => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Datum\",\n              children: [\" \", elem.date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Starttid\",\n              children: [\" \", elem.start.time, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Sluttid\",\n              children: [elem.stop.time, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Total tid\",\n              children: [calculateTravelTime(elem.start.time, elem.stop.time), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Visa p\\xE5 karta\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button vertical-align:middle\",\n                onClick: e => showMap(elem.start.position, elem.stop.position, e),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"F\\xE4rd \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 82\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Kostnad\",\n              children: [elem.price, \":- \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MoveBike, {\n        id: content._id,\n        city: content.city_location,\n        position: content.position,\n        battery: content.battery,\n        speed: content.speed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null, whatToShow === \"City\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Stad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this), \" \", content.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Antal cyklar \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 18\n        }, this), content.amount_of_bikes, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null, whatToShow === \"LoadStation\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Position:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }, this), \" (Visar endast 2 av positionerna nu\", content.position.polygonePart1.lat, content.position.polygonePart2.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Antal cyklar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }, this), \" ??????\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n} // return (\n//     <PopUpStyle >\n//     { whatToShow === \"Scooter\" ? (\n//         <>\n//         <div> <p>Scooter ID: </p>{content._id} </div>\n//         <div><p> Batteri: </p> {content.battery}</div>\n//         <div> <p>Stad: </p> {content.city_location} </div>\n//         <div> <p>Position: </p> Latitude {content.position.lat} Longitude: {content.position.lng} </div>\n//         <div> <p> Hastighet: </p>{content.speed} km/h </div>\n//         <div> <p> Starttid: </p>{content.start_time} </div>\n//         <MoveBike \n//             id = {content._id}\n//             city = {content.city_location}\n//             position = {content.position}\n//             battery = {content.battery}\n//             speed = {content.speed}\n//             >\n//         </MoveBike>\n//         </>\n//         ) : null }\n//     { whatToShow === \"City\" ? (\n//         <>\n//         <div> <p>Stad</p> {content.city}</div>\n//         <div><p> Antal cyklar </p>{content.amount_of_bikes} </div>\n//         </>\n//         ) : null } \n//     {  whatToShow === \"LoadStation\" ? (\n//         <>\n//         <div> <p>Position:</p> (Visar endast 2 av positionerna nu\n//             {content.position.polygonePart1.lat }\n//             { content.position.polygonePart2.lng }\n//         </div>\n//         <div><p> Antal cyklar</p> ??????</div>\n//         </>\n//         ) : null } \n//     </PopUpStyle>\t\n// );\n//  fungerar som REACt component till kartan\n// import React from \"react\";\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n// export default PopUp;\n\n_c = PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/PopUp/index.js"],"names":["React","useState","PopUpStyle","MoveBike","PopUp","props","content","whatToShow","PopupInfo","userHistory","map","elem","date","start","time","stop","calculateTravelTime","e","showMap","position","price","_id","city_location","battery","speed","city","amount_of_bikes","polygonePart1","lat","polygonePart2","lng"],"mappings":"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","sourcesContent":["\nimport {React, useState } from \"react\";\n//styles\nimport {PopUpStyle} from './Form.styles'\nimport MoveBike from \"../MoveBike\";\n\nexport default function PopUp(props) {\n    let content;\n    let whatToShow;\n\n    if (props.PopupInfo && props.PopupInfo.content ) {\n        content = props.PopupInfo.content\n        whatToShow = props.PopupInfo.whatToShow\n    }\n\n\treturn (\n\t\t<PopUpStyle >\n        { whatToShow === \"Scooter\" ? (\n            <>\n      <table>\n                    <caption>Din Historik</caption>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Datum</th>\n                            <th scope=\"col\">Starttid</th>\n                            <th scope=\"col\">Sluttid</th>\n                            <th scope=\"col\">Total tid</th>\n                            <th scope=\"col\">Visa på karta</th>\n                            <th scope=\"col\">Kostnad</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {userHistory.map(elem => \n                        <tr>\n                        <td data-label=\"Datum\"> {elem.date} </td>\n                        <td data-label=\"Starttid\"> {elem.start.time} </td>\n                        <td data-label=\"Sluttid\">{elem.stop.time} </td>\n                        <td data-label=\"Total tid\">{calculateTravelTime(elem.start.time, elem.stop.time)} </td>\n                        <td data-label=\"Visa på karta\" >\n                            {<button className=\"button vertical-align:middle\"  onClick={(e) => \n                            showMap(elem.start.position, elem.stop.position, e)}><span>Färd </span></button>}\n                        </td>\n                      \n                        <td data-label=\"Kostnad\">{elem.price}:- </td>\n                        </tr>\n                    )}\n                    </tbody>\n                    </table>\n                    \n            <MoveBike \n                id = {content._id}\n                city = {content.city_location}\n                position = {content.position}\n                battery = {content.battery}\n                speed = {content.speed}\n                >\n            </MoveBike>\n            </>\n            ) : null }\n    \n        { whatToShow === \"City\" ? (\n            <>\n            <div> <p>Stad</p> {content.city}</div>\n            <div><p> Antal cyklar </p>{content.amount_of_bikes} </div>\n            </>\n            ) : null } \n \n        {  whatToShow === \"LoadStation\" ? (\n            <>\n            <div> <p>Position:</p> (Visar endast 2 av positionerna nu\n                {content.position.polygonePart1.lat }\n                { content.position.polygonePart2.lng }\n            </div>\n            <div><p> Antal cyklar</p> ??????</div>\n            </>\n            ) : null } \n\t\t</PopUpStyle>\t\n\t);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// return (\n//     <PopUpStyle >\n//     { whatToShow === \"Scooter\" ? (\n//         <>\n//         <div> <p>Scooter ID: </p>{content._id} </div>\n//         <div><p> Batteri: </p> {content.battery}</div>\n//         <div> <p>Stad: </p> {content.city_location} </div>\n//         <div> <p>Position: </p> Latitude {content.position.lat} Longitude: {content.position.lng} </div>\n//         <div> <p> Hastighet: </p>{content.speed} km/h </div>\n//         <div> <p> Starttid: </p>{content.start_time} </div>\n//         <MoveBike \n//             id = {content._id}\n//             city = {content.city_location}\n//             position = {content.position}\n//             battery = {content.battery}\n//             speed = {content.speed}\n//             >\n//         </MoveBike>\n//         </>\n//         ) : null }\n\n//     { whatToShow === \"City\" ? (\n//         <>\n//         <div> <p>Stad</p> {content.city}</div>\n//         <div><p> Antal cyklar </p>{content.amount_of_bikes} </div>\n//         </>\n//         ) : null } \n\n//     {  whatToShow === \"LoadStation\" ? (\n//         <>\n//         <div> <p>Position:</p> (Visar endast 2 av positionerna nu\n//             {content.position.polygonePart1.lat }\n//             { content.position.polygonePart2.lng }\n//         </div>\n//         <div><p> Antal cyklar</p> ??????</div>\n//         </>\n//         ) : null } \n//     </PopUpStyle>\t\n// );\n\n\n\n\n\n\n\n//  fungerar som REACt component till kartan\n\n// import React from \"react\";\n\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n\n// export default PopUp;\n\n"]},"metadata":{},"sourceType":"module"}