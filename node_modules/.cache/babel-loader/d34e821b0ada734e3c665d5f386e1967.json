{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Map\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useRef } from \"react\"; //googlemap\n\nimport GoogleMapReact from \"google-map-react\"; //components\n\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useLoadStationsToMap from \"../../Hooks/loadStationsToMap\";\nimport useCityToMap from \"../../Hooks/loadCitysToMap\";\nimport PopUp from \"../PopUp\"; //styles & img\n\nimport { StyleMap, PopUpStyle2 } from './Form.styles';\nimport bikeimg from '../../images/bike.png';\nimport personimg from '../../images/person.png'; // options till userLocation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 1000 * 60 * 1,\n  // 1 min\n  maximumAge: 1000 * 60 * 60 // 1 hour\n\n};\nexport default function MapContainer(props) {\n  _s();\n\n  //hooks\n  const mapRef = useRef();\n  const {\n    loadStationContent,\n    err1,\n    showInfoForLoadStation\n  } = useLoadStationsToMap(mapRef, props);\n  const {\n    cityContent,\n    errorForCity,\n    showInfoForCity\n  } = useCityToMap(mapRef, props);\n  const {\n    location,\n    err\n  } = useCurrentLocation(options);\n  const [scooter, setScooter] = useState([]);\n  const [PopupInfo, setPopupInfo] = useState(null); ///Variabel\n\n  const loadScooters = props.ifToShowScooter;\n  const ScooterArray = props.ifToShowScooter.content; // ScooterArray =  bikeArray.slice(0, 200); // innan jag fixar med cluster max 200\n\n  const Marker = _ref => {\n    let {\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }, this);\n  }; // Dessa tre useEffect sätter de andra värdena till false så att rätt info visas i rutan för innehåll\n  //fundera på om det finns något bättre/snyggare sätt om man ska kunna toggla mellan de olika\n  // Alternativ är att ladda in allt här, men då blir index.js kladdig \n  // Har flera fetch vilket är ganska onödigt men om vi ska använda graphql senare så är strukturen m hooks att föredra.\n  // Om vi inte använder graphQl så hämta allt på en gång kanske och spara i state => populera\n\n\n  useEffect(() => {\n    if (scooter.showScooter === true) {\n      showInfoForCity(false);\n      showInfoForLoadStation(false);\n      setPopupInfo({\n        content: scooter.scooter,\n        whatToShow: \"Scooter\"\n      });\n    }\n  }, [scooter.showScooter]);\n  useEffect(() => {\n    if (loadStationContent.showLoadStations === true) {\n      setScooter(prevState => ({\n        scooter: prevState.scooter,\n        showScooter: false\n      }));\n      showInfoForCity(false);\n      setPopupInfo({\n        content: loadStationContent.loadStations,\n        whatToShow: \"LoadStation\"\n      });\n    }\n  }, [loadStationContent.showLoadStations]);\n  useEffect(() => {\n    if (cityContent.showLoadCitys === true) {\n      setScooter(prevState => ({\n        scooter: prevState.scooter,\n        showScooter: false\n      }));\n      showInfoForLoadStation(false);\n      setPopupInfo({\n        content: cityContent.city,\n        whatToShow: \"City\"\n      });\n    }\n  }, [cityContent.showLoadCitys]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyleMap, {\n      children: location ? /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n        },\n        defaultCenter: {\n          lat: location.latitude,\n          lng: location.longitude\n        },\n        defaultZoom: 10,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: _ref2 => {\n          let {\n            map,\n            maps\n          } = _ref2;\n          mapRef.current = {\n            map,\n            maps\n          };\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          lat: location.latitude,\n          lng: location.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crime-marker\",\n              src: personimg,\n              alt: \"person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), loadScooters.loadScooters && ScooterArray.map(scooter => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            lat: scooter.position.lat,\n            lng: scooter.position.lng,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setScooter({\n                scooter,\n                showScooter: true\n              }),\n              className: \"crime-marker\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"scooter\",\n                src: bikeimg,\n                alt: \"scooter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }, this)\n          }, scooter._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PopUpStyle2, {\n      children: scooter || cityContent || loadStationContent ? /*#__PURE__*/_jsxDEV(PopUp, {\n        PopupInfo: PopupInfo\n      }, \"popupkey\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapContainer, \"Z27242TXGGuEoAizm38/WaH8JqU=\", false, function () {\n  return [useLoadStationsToMap, useCityToMap, useCurrentLocation];\n});\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/index.js"],"names":["React","useEffect","useState","useRef","GoogleMapReact","useCurrentLocation","useLoadStationsToMap","useCityToMap","PopUp","StyleMap","PopUpStyle2","bikeimg","personimg","options","enableHighAccuracy","timeout","maximumAge","MapContainer","props","mapRef","loadStationContent","err1","showInfoForLoadStation","cityContent","errorForCity","showInfoForCity","location","err","scooter","setScooter","PopupInfo","setPopupInfo","loadScooters","ifToShowScooter","ScooterArray","content","Marker","children","showScooter","whatToShow","showLoadStations","prevState","loadStations","showLoadCitys","city","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","lat","latitude","lng","longitude","map","maps","current","position","_id"],"mappings":"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","sourcesContent":["import {React, useEffect, useState, useRef } from \"react\";\n//googlemap\nimport GoogleMapReact from \"google-map-react\";\n//components\nimport useCurrentLocation from \"../../Hooks/currentPosition\";\nimport useLoadStationsToMap from \"../../Hooks/loadStationsToMap\";\nimport useCityToMap from \"../../Hooks/loadCitysToMap\";\nimport PopUp from \"../PopUp\";\n//styles & img\nimport {StyleMap, PopUpStyle2} from './Form.styles'\nimport bikeimg from '../../images/bike.png'\nimport personimg from '../../images/person.png'\n\n// options till userLocation\nconst options = {\n\tenableHighAccuracy: true,\n\ttimeout: 1000 * 60 * 1, // 1 min\n\tmaximumAge: 1000 * 60 * 60, // 1 hour\n};\n\n\nexport default function MapContainer(props) {\n\t//hooks\n\tconst mapRef = useRef();\n\tconst { loadStationContent, err1, showInfoForLoadStation } = useLoadStationsToMap(mapRef, props);\n\tconst { cityContent, errorForCity, showInfoForCity } = useCityToMap(mapRef, props);\n\tconst { location, err } = useCurrentLocation(options);\n\tconst [scooter, setScooter] = useState([]);\n\tconst [PopupInfo, setPopupInfo] = useState(null);\n\n\t///Variabel\n\tconst loadScooters = props.ifToShowScooter;\n\tconst ScooterArray = props.ifToShowScooter.content; \t// ScooterArray =  bikeArray.slice(0, 200); // innan jag fixar med cluster max 200\n\tconst Marker = ({ children }) => <div>{children}</div>;\n\n\t// Dessa tre useEffect sätter de andra värdena till false så att rätt info visas i rutan för innehåll\n\t//fundera på om det finns något bättre/snyggare sätt om man ska kunna toggla mellan de olika\n\t// Alternativ är att ladda in allt här, men då blir index.js kladdig \n\t// Har flera fetch vilket är ganska onödigt men om vi ska använda graphql senare så är strukturen m hooks att föredra.\n\t// Om vi inte använder graphQl så hämta allt på en gång kanske och spara i state => populera\n\tuseEffect(() => {\n\t\tif (scooter.showScooter === true) {\n\t\t\tshowInfoForCity(false)\n\t\t\tshowInfoForLoadStation(false)\n\t\t\tsetPopupInfo({content: scooter.scooter, whatToShow: \"Scooter\"});\n\t\t}\n\t},[scooter.showScooter])\n\n\n\tuseEffect(() => {\n\t\tif (loadStationContent.showLoadStations === true) {\n\t\t\tsetScooter(prevState => ({\n\t\t\t\tscooter: prevState.scooter,\n\t\t\t\tshowScooter: false\n\t\t\t}));\n\t\t\tshowInfoForCity(false);\n\t\t\tsetPopupInfo({content: loadStationContent.loadStations, whatToShow: \"LoadStation\"});\n\t\t}\n\t},[loadStationContent.showLoadStations])\n\n\n\tuseEffect(() => {\n\t\tif (cityContent.showLoadCitys === true) {\n\t\t\tsetScooter(prevState => ({\n\t\t\t\tscooter: prevState.scooter,\n\t\t\t\tshowScooter: false\n\t\t\t}));\n\t\t\tshowInfoForLoadStation(false);\n\t\t\tsetPopupInfo({content: cityContent.city, whatToShow: \"City\"});\n\t\t}\n\t},[cityContent.showLoadCitys])\n\n\treturn (\n\t\t<Container>\n\t\t\t<StyleMap>\n\t\t\t\t{/*KARTA*/}\n\t\t\t\t{location ? (\n\t\t\t\t<GoogleMapReact \n\t\t\t\t\tbootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n\t\t\t\t\tdefaultCenter={{ lat: location.latitude, lng: location.longitude}}\n\t\t\t\t\tdefaultZoom={10}\n\t\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\t\tonGoogleApiLoaded= {({map, maps}) => {\n\t\t\t\t\t\tmapRef.current = {map, maps};\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{/*1 Person*/}\n\n\t\t\t\t\t<Marker \n\t\t\t\t\t\tkey={1} \n\t\t\t\t\t\tlat={location.latitude} \n\t\t\t\t\t\tlng={location.longitude}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<img className = \"crime-marker\" src={personimg} alt=\"person\" />\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t</Marker>\n\t\t\t\t\t{/*Alla cyklar*/}\n\n\t\t\t\t\t{loadScooters.loadScooters && (\n\t\t\t\t\tScooterArray.map(scooter => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t<Marker \n\t\t\t\t\t\t\tkey={scooter._id} \n\t\t\t\t\t\t\tlat={scooter.position.lat} \n\t\t\t\t\t\t\tlng={scooter.position.lng}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div onClick={() => setScooter({scooter, showScooter: true})}className=\"crime-marker\">\n\t\t\t\t\t\t\t<img className = \"scooter\" src={bikeimg} alt=\"scooter\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Marker>)\n\t\t\t\t\t\t})\n\t\t\t\t\t)}\n\t\t\t\t</GoogleMapReact>\n\t\t\t\t):(<p>Loading...</p> )}\n\n\n\t\t\t</StyleMap>\n\t\t\t<PopUpStyle2>\n\t\t\t\t{/*POPUP*/}\n\t\t\t\t{scooter || cityContent || loadStationContent ? (\n\t\t\t\t\t<PopUp key={\"popupkey\"} PopupInfo={PopupInfo}></PopUp>\n\t\t\t\t\t): (null) }\n\t\t\t</PopUpStyle2>\n\t\t</Container>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}