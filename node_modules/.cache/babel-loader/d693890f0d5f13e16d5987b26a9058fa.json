{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\routes\\\\History\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from \"react\"; //components\n\nimport MapForUser from '../../components/MapForUser/index';\nimport Loader from '../../components/loader/loader'; //styles\n\nimport { Container, Main, UserHistory, MapContainer } from './Form.styles'; //other\n\nimport Api from \"../../api\";\nimport Appcontext from '../../AppContext';\nimport { checkIfCoordInParkingZone, checkIfCoordInChargingPost } from '../../helperfunction/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  showMap: false,\n  startCoord: \"\",\n  stopCoord: \"\"\n};\n\nconst History = () => {\n  _s();\n\n  console.log(props, \"häär\");\n  const [userHistory, setUserHistory] = useState([]);\n  const [showMapForUser, setShowMapForUser] = useState(initialValue);\n  const [message, setMessage] = useState(\"Loading.....\");\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userInvoice, setUserInvoice] = useState([]);\n  const myContext = useContext(Appcontext);\n  let user = myContext.userHook;\n  let data;\n  /* Hämtar städer */\n\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    checkAllUsersTrips();\n  }, [userHistory, setUserHistory]);\n  /* hämtar användare */\n\n  useEffect(() => {\n    async function fetchData() {\n      if (user && user.value.id) {\n        let id = user.value.id;\n        /* Om props läs därifrån */\n\n        if (props && props.customer) {\n          id = props.customer.id;\n        }\n\n        let res = await Api.getAUser(id);\n\n        if (res && res.data) {\n          data = res.data;\n\n          if (data.trips.length > 0) {\n            setUserHistory(data.trips);\n          } else {\n            setMessage(\"Ingen resa gjord\");\n          }\n        }\n      }\n    }\n\n    fetchData();\n  }, [user]);\n  /* Ritar om, om userInvoice ändras */\n\n  useEffect(() => {}, [setUserInvoice, userInvoice]);\n  /* Loopar igenom alla användarens resor och \n      kontrollerar resedetaljer mha de andra funktionerna\n  */\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    userHistory.forEach(trip => {\n      var startFee = 10;\n      var discount = 0;\n      let time = getTimeOfTrip(trip.start.time, trip.stop.time);\n      let timeFee = 2.5 * time;\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n      var startAtParkingZone = checkIfCoordInParkingZone(tripStarted, allParkingZones);\n      var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded, allParkingZones);\n      var startChargePoint = checkIfCoordInChargingPost(tripStarted, allCharging_posts);\n      var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded, allCharging_posts);\n      /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n\n      if (startAtParkingZone === undefined || startChargePoint === undefined) {\n        if (endedAtParkingZone === true || endedAtChargePoint === true) {\n          startFee = 8;\n          discount = 2;\n        }\n      }\n      /* extra avg om man ej lämnar inom stationerna */\n\n\n      if (endedAtParkingZone === undefined && endedAtChargePoint === undefined) {\n        startFee = 12;\n      }\n\n      const atrip = {\n        tripId: trip.id,\n        date: trip.date,\n        startTime: trip.start.time,\n        stopTime: trip.stop.time,\n        tripStartedPos: tripStarted,\n        tripEndedPos: tripEnded,\n        startAtParkingZone: startAtParkingZone,\n        endedAtParkingZone: endedAtParkingZone,\n        startChargePoint: startChargePoint,\n        endedAtChargePoint: endedAtChargePoint,\n        timeOfTrip: time,\n        startFee: startFee,\n        timeFee: timeFee,\n        discount: discount,\n        totalCost: timeFee + startFee\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips);\n    return userInvoice;\n  }\n  /* Räknar ut tiden för resan, gör om till sekunder \n      subtraherar och dividerar för att få ut minuter\n  */\n\n\n  function getTimeOfTrip(starttime, stoptime) {\n    var arrStarttime = starttime.split(\".\");\n    var arrStoptime = stoptime.split(\".\");\n    arrStarttime[0] = arrStarttime[0] * 60 * 60;\n    arrStarttime[1] = arrStarttime[1] * 60;\n    arrStoptime[0] = arrStoptime[0] * 60 * 60;\n    arrStoptime[1] = arrStoptime[1] * 60;\n    var stopTime = arrStoptime[0] + arrStoptime[1];\n    var startTime = arrStarttime[0] + arrStarttime[1];\n    var time = (stopTime - startTime) / 60;\n    return time;\n  }\n  /*  visa kartar upp karta, beroende på var användaren klickar */\n\n\n  function showMap(startCoord, stopCoord, e) {\n    console.log(startCoord, stopCoord);\n    let pageY = e.pageY;\n\n    if (props && props.customer) {\n      pageY = pageY - 200;\n    }\n\n    setShowMapForUser({\n      showMap: !showMapForUser.showMap,\n      startCoord: startCoord,\n      stopCoord: stopCoord,\n      pageY: pageY\n    });\n  }\n  /* ritar om  */\n\n\n  useEffect(() => {}, [showMapForUser, setShowMapForUser]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      showMap: showMapForUser.showMap,\n      children: /*#__PURE__*/_jsxDEV(UserHistory, {\n        children: userInvoice.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n            children: \" Historik \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Starttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Sluttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Total tid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Start avgift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Rabatt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Tid avgift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Visa p\\xE5 karta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Total kostnad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userInvoice.map(elem => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Datum\",\n                children: [\" \", elem.date, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Starttid\",\n                children: [elem.startTime, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Sluttid\",\n                children: [elem.stopTime, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Total tid\",\n                children: [elem.timeOfTrip, \" min \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Start avgift\",\n                children: [elem.startFee, \":-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Rabatt\",\n                children: [elem.discount, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Minutpris\",\n                children: [elem.timeFee, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Visa p\\xE5 karta\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button vertical-align:middle\",\n                  onClick: e => showMap(elem.tripStartedPos, elem.tripEndedPos, e),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"F\\xE4rd \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 85\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Total kostnad\",\n                children: [elem.totalCost, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      showMap: showMapForUser.showMap,\n      pageY: showMapForUser.pageY,\n      children: showMapForUser.showMap && /*#__PURE__*/_jsxDEV(MapForUser, {\n        showMapForUser: showMapForUser,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s(History, \"7QPnPeTLAejODESlYeEgxBEl41M=\");\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/routes/History/index.js"],"names":["React","useState","useEffect","useContext","MapForUser","Loader","Container","Main","UserHistory","MapContainer","Api","Appcontext","checkIfCoordInParkingZone","checkIfCoordInChargingPost","initialValue","showMap","startCoord","stopCoord","History","console","log","props","userHistory","setUserHistory","showMapForUser","setShowMapForUser","message","setMessage","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userInvoice","setUserInvoice","myContext","user","userHook","data","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","checkAllUsersTrips","fetchData","value","id","customer","res","getAUser","trips","length","arrayOfTrips","trip","startFee","discount","time","getTimeOfTrip","start","stop","timeFee","tripEnded","position","lat","lng","tripStarted","startAtParkingZone","endedAtParkingZone","startChargePoint","endedAtChargePoint","undefined","atrip","tripId","date","startTime","stopTime","tripStartedPos","tripEndedPos","timeOfTrip","totalCost","push","starttime","stoptime","arrStarttime","split","arrStoptime","e","pageY","map","elem"],"mappings":"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","sourcesContent":["import {React, useState, useEffect, useContext} from \"react\";\n\n//components\nimport MapForUser from '../../components/MapForUser/index'\nimport Loader from '../../components/loader/loader'\n//styles\nimport {Container, Main, UserHistory, MapContainer} from './Form.styles'\n//other\nimport Api from \"../../api\";\nimport Appcontext from '../../AppContext'\nimport {checkIfCoordInParkingZone, checkIfCoordInChargingPost } from '../../helperfunction/helpers'\n\nconst initialValue = {\n    showMap: false,\n    startCoord: \"\",\n    stopCoord: \"\",\n}\n\nconst History = ()  => {\n    console.log(props, \"häär\")\n\n    const [userHistory, setUserHistory] = useState([]);\n    const [showMapForUser, setShowMapForUser] = useState(initialValue);\n    const [message, setMessage] = useState(\"Loading.....\");\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userInvoice, setUserInvoice] = useState([])\n\n\n    const myContext = useContext(Appcontext)\n    let user = myContext.userHook;\n    let data;\n   \n\n    /* Hämtar städer */\n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        checkAllUsersTrips()\n\n    }, [userHistory, setUserHistory])\n\n    /* hämtar användare */\n    useEffect(() => {\n        async function fetchData() {\n            if(user && user.value.id) {\n                let id = user.value.id;\n                /* Om props läs därifrån */\n                if(props && props.customer) {\n                    id = props.customer.id;\n                }\n                let res = await Api.getAUser(id);\n                if (res && res.data) {\n                    data = res.data;\n                    if(data.trips.length > 0) {\n                        setUserHistory(data.trips)\n                    } else {\n                        setMessage(\"Ingen resa gjord\")\n                    }\n                }\n            }\n        }\n        fetchData();\n    }, [user])\n\n    /* Ritar om, om userInvoice ändras */\n    useEffect(() => {\n    }, [setUserInvoice, userInvoice])\n\n    /* Loopar igenom alla användarens resor och \n        kontrollerar resedetaljer mha de andra funktionerna\n    */\n    function checkAllUsersTrips() {\n        let arrayOfTrips = []\n        userHistory.forEach(trip => {\n            var startFee = 10;\n            var discount = 0;\n            let time = getTimeOfTrip(trip.start.time, trip.stop.time)\n            let timeFee = 2.5 * time;\n\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n            var startAtParkingZone = checkIfCoordInParkingZone(tripStarted, allParkingZones);\n            var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded, allParkingZones);\n            var startChargePoint = checkIfCoordInChargingPost(tripStarted, allCharging_posts);\n            var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded, allCharging_posts);\n\n            /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n            if(startAtParkingZone === undefined || startChargePoint === undefined) {\n                if (endedAtParkingZone === true || endedAtChargePoint === true) {\n                    startFee = 8;\n                    discount = 2;\n                }\n            }\n            /* extra avg om man ej lämnar inom stationerna */\n            if(endedAtParkingZone === undefined && endedAtChargePoint === undefined) {\n                startFee = 12;\n            }\n\n            const atrip = { \n\t\t\t\ttripId: trip.id,\n                date: trip.date,\n                startTime: trip.start.time,\n                stopTime: trip.stop.time,\n                tripStartedPos: tripStarted,\n                tripEndedPos: tripEnded,\n                startAtParkingZone: startAtParkingZone,\n                endedAtParkingZone: endedAtParkingZone,\n                startChargePoint: startChargePoint,\n                endedAtChargePoint: endedAtChargePoint,\n                timeOfTrip: time,\n                startFee: startFee,\n                timeFee: timeFee,\n                discount: discount,\n                totalCost: (timeFee + startFee)\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n        return userInvoice\n    }\n\n    /* Räknar ut tiden för resan, gör om till sekunder \n        subtraherar och dividerar för att få ut minuter\n    */\n    function getTimeOfTrip(starttime, stoptime) {\n\n        var arrStarttime = starttime.split(\".\");\n        var arrStoptime = stoptime.split(\".\"); \n\n        arrStarttime[0] = arrStarttime[0] * 60 * 60;\n        arrStarttime[1] = arrStarttime[1] * 60;\n        arrStoptime[0] = arrStoptime[0] * 60 * 60;\n        arrStoptime[1] = arrStoptime[1] * 60;\n        \n        var stopTime = arrStoptime[0] + arrStoptime[1];\n        var startTime = arrStarttime[0] + arrStarttime[1];\n        var time = (stopTime - startTime) / 60;\n\n        return time\n    }\n\n    /*  visa kartar upp karta, beroende på var användaren klickar */\n    function showMap(startCoord, stopCoord, e) {\n        console.log(startCoord, stopCoord)\n        let pageY = e.pageY;\n            if(props && props.customer) {\n                pageY = pageY - 200;\n            }\n\n        setShowMapForUser({\n            showMap: !showMapForUser.showMap,\n            startCoord: startCoord,\n            stopCoord: stopCoord,\n            pageY: pageY\n        })\n    }\n    /* ritar om  */\n    useEffect(() => {\n    }, [showMapForUser, setShowMapForUser])\n\n\treturn (\n        <Container>  \n            <Main showMap = {showMapForUser.showMap} >\n                <UserHistory> \n                {userInvoice.length > 0 ? (\n                <table>\n                    <caption> Historik </caption>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Datum</th>\n                            <th scope=\"col\">Starttid</th>\n                            <th scope=\"col\">Sluttid</th>\n                            <th scope=\"col\">Total tid</th>\n                            <th scope=\"col\">Start avgift</th>\n                            <th scope=\"col\">Rabatt</th>\n                            <th scope=\"col\">Tid avgift</th>\n                            <th scope=\"col\">Visa på karta</th>\n                            <th scope=\"col\">Total kostnad</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {userInvoice.map(elem => \n                        <tr>\n                            <td data-label=\"Datum\"> {elem.date} </td>\n                            <td data-label=\"Starttid\">{elem.startTime} </td>\n                            <td data-label=\"Sluttid\">{elem.stopTime} </td>\n                            <td data-label=\"Total tid\">{elem.timeOfTrip} min </td>\n                            <td data-label=\"Start avgift\" >{elem.startFee}:-</td>\n                            <td data-label=\"Rabatt\">{elem.discount}:- </td>\n                            <td data-label=\"Minutpris\">{elem.timeFee}:- </td>\n                            <td data-label=\"Visa på karta\" >\n                            { <button className=\"button vertical-align:middle\" onClick={(e) => \n                                showMap(elem.tripStartedPos, elem.tripEndedPos, e)}><span>Färd </span></button>}\n                            </td>\n                            <td data-label=\"Total kostnad\">{elem.totalCost}:- </td>\n                        </tr>\n                        )}\n                    </tbody>\n                    </table>\n                    ) : (\n\n                       <Loader> <p>{message}</p> </Loader>\n\n                    )}\n                </UserHistory>\n            </Main>\n            <MapContainer showMap = {showMapForUser.showMap} pageY={showMapForUser.pageY} >\n                {showMapForUser.showMap &&\n                    <MapForUser showMapForUser = {showMapForUser}> </MapForUser>\n                }\n            </MapContainer>\n\n\n        </Container>\n    )\n}\n\nexport default History\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}