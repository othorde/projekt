{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Api from '../api';\n\nasync function useLoadStationsForMap() {\n  _s();\n\n  let mapRef = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [loadStationObject, setLoadStationObject] = useState([]);\n  const [loadStationContent, setLoadStationContent] = useState(\"\");\n  const [loadStationError, setLoadStationError] = useState(\"\");\n  let res;\n  useEffect(async () => {}, [mapRef]);\n  console.log(loadStationObject);\n  return loadStationObject;\n}\n\n_s(useLoadStationsForMap, \"Z2StwFpu8xRziRcoJD4AnOGzhO4=\");\n\n;\nexport default useLoadStationsForMap; //     const[location, setLocation] = useState(\"\");\n//     const [error, setError] = useState();\n//     const handleSucces = (pos) => {\n//         const {latitude, longitude } = pos.coords;\n//         setLocation({\n//             latitude,\n//             longitude\n//         });\n//     };\n//     const handleError = (error) => {\n//         setError(error.message);\n//     };\n//     useEffect(() => {\n//         const {geolocation} = navigator;\n//         if (!geolocation) {\n//             setError(\"Geolocation not supported\")\n//             return;\n//         }\n//         geolocation.getCurrentPosition(handleSucces, handleError, options)\n//     },[options])\n//     return {location, error};\n// };","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/Hooks/currentMarkerPosition.js"],"names":["useState","useEffect","Api","useLoadStationsForMap","mapRef","loadStationObject","setLoadStationObject","loadStationContent","setLoadStationContent","loadStationError","setLoadStationError","res","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,eAAeC,qBAAf,GAAiD;AAAA;;AAAA,MAAZC,MAAY,uEAAL,EAAK;AAChD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CN,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AAEG,MAAIW,GAAJ;AACAV,EAAAA,SAAS,CAAC,YAAa,CAEtB,CAFQ,EAEN,CAACG,MAAD,CAFM,CAAT;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,iBAAZ;AACA,SAAOA,iBAAP;AACH;;GAXcF,qB;;AAWd;AACD,eAAeA,qBAAf,C,CAmCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import {useState, useEffect} from 'react';\nimport Api from '../api';\n\nasync function useLoadStationsForMap(mapRef={})  {\n\tconst [loadStationObject, setLoadStationObject] = useState([]);\n\tconst [loadStationContent, setLoadStationContent] = useState(\"\");\n\tconst [loadStationError, setLoadStationError] = useState(\"\");\n\n    let res;\n    useEffect(async () =>  {\n        \n    }, [mapRef])\n    console.log(loadStationObject)\n    return loadStationObject;\n};\nexport default useLoadStationsForMap;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//     const[location, setLocation] = useState(\"\");\n//     const [error, setError] = useState();\n//     const handleSucces = (pos) => {\n//         const {latitude, longitude } = pos.coords;\n\n//         setLocation({\n//             latitude,\n//             longitude\n//         });\n//     };\n\n//     const handleError = (error) => {\n//         setError(error.message);\n//     };\n\n//     useEffect(() => {\n//         const {geolocation} = navigator;\n\n//         if (!geolocation) {\n//             setError(\"Geolocation not supported\")\n//             return;\n//         }\n//         geolocation.getCurrentPosition(handleSucces, handleError, options)\n//     },[options])\n\n//     return {location, error};\n// };\n"]},"metadata":{},"sourceType":"module"}