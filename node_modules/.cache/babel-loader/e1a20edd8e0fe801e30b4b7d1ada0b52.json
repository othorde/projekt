{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Invoice\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\"; //components\n\nimport Api from '../../api'; //styles & img\n\nimport { Container } from './Form.styles'; //other\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar pointInPolygon = require('point-in-polygon');\n\nconst userInvoiceInitialValue = {\n  tripId: \"\",\n  endedAtChargePoint: false,\n  endedAtLoadStation: \"\",\n  timeOfTrip: \"\",\n  startFee: 10,\n  discountStartFee: \"\",\n  fromFreePark2Defined: \"\"\n};\nexport default function Invoice(props) {\n  _s();\n\n  //hooks\n  // måste ha resan och koordinaterna\n  // måste senare räkna ut var koordinaterna ligger och jmföra\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n  const [userInvoice, setUserInvoice] = useState([userInvoiceInitialValue]);\n  /* Sparara alla ladda och parkeringszoner i state */\n\n  console.log(userInvoice);\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    setUserTrips(props);\n  }, [props]);\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    userTrips.props.forEach(trip => {\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n      const atrip = {\n        tripId: trip.id,\n        startAtParkingZone: checkIfCoordInParkingZone(tripstart),\n        endedAtParkingZone: checkIfCoordInParkingZone(tripEnded),\n        startChargePoint: checkIfCoordInChargingPost(tripEnded),\n        endedAtChargePoint: checkIfCoordInChargingPost(tripEnded),\n        timeOfTrip: \"\",\n        startFee: 10,\n        timeFee: \"\",\n        discountStartFee: \"\"\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips);\n  }\n  /*  loopara igenom alla chargingposts, \n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInParkingZone(tripEnded) {\n    let res;\n\n    for (var elem of allParkingZones) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /*  loopara igenom alla chargingposts,\n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInChargingPost(tripEnded) {\n    let res;\n\n    for (var elem of allCharging_posts) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  async function calculateCost() {\n    checkAllUsersTrips();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: calculateCost,\n    children: \"Faktura\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Invoice, \"T3Qm/KWOkE+ohdeV589GLCKLJtg=\");\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Invoice/index.js"],"names":["React","useEffect","useState","Api","Container","pointInPolygon","require","userInvoiceInitialValue","tripId","endedAtChargePoint","endedAtLoadStation","timeOfTrip","startFee","discountStartFee","fromFreePark2Defined","Invoice","props","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","userInvoice","setUserInvoice","console","log","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","checkAllUsersTrips","arrayOfTrips","trip","tripEnded","stop","position","lat","lng","tripStarted","start","atrip","id","startAtParkingZone","checkIfCoordInParkingZone","tripstart","endedAtParkingZone","startChargePoint","checkIfCoordInChargingPost","timeFee","push","res","elem","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","point","polygone","calculateCost"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,WAAhB,C,CACA;;AACA,SAAQC,SAAR,QAAwB,eAAxB,C,CACA;;;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAGA,MAAMC,uBAAuB,GAAG;AAC5BC,EAAAA,MAAM,EAAE,EADoB;AAE5BC,EAAAA,kBAAkB,EAAE,KAFQ;AAG5BC,EAAAA,kBAAkB,EAAE,EAHQ;AAI5BC,EAAAA,UAAU,EAAE,EAJgB;AAK5BC,EAAAA,QAAQ,EAAE,EALkB;AAM5BC,EAAAA,gBAAgB,EAAE,EANU;AAO5BC,EAAAA,oBAAoB,EAAE;AAPM,CAAhC;AAWA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtC;AACG;AACA;AAEA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,EAAD,CAA1D,CALmC,CAK4B;;AAC/D,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,CAACK,uBAAD,CAAD,CAA9C;AACA;;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,YAAY,GAAG,YAAY;AAEjC,UAAIC,SAAS,GAAG,MAAMzB,GAAG,CAAC0B,WAAJ,EAAtB;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkBC,OAAO,IAAI;AACzBb,QAAAA,oBAAoB,CAACa,OAAO,CAACC,cAAT,CAApB;AACAZ,QAAAA,kBAAkB,CAACW,OAAO,CAACE,aAAT,CAAlB;AACC,OAHL;AAIC,KAPD;;AAQAN,IAAAA,YAAY;AACZL,IAAAA,YAAY,CAACN,KAAD,CAAZ;AAEH,GAZQ,EAYN,CAACA,KAAD,CAZM,CAAT;;AAeA,WAASkB,kBAAT,GAA8B;AAC1B,QAAIC,YAAY,GAAG,EAAnB;AAEAd,IAAAA,SAAS,CAACL,KAAV,CAAgBc,OAAhB,CAAwBM,IAAI,IAAI;AAC5B,UAAIC,SAAS,GAAG,CAACD,IAAI,CAACE,IAAL,CAAUC,QAAV,CAAmBC,GAApB,EAAyBJ,IAAI,CAACE,IAAL,CAAUC,QAAV,CAAmBE,GAA5C,CAAhB;AACA,UAAIC,WAAW,GAAG,CAACN,IAAI,CAACO,KAAL,CAAWJ,QAAX,CAAoBC,GAArB,EAA0BJ,IAAI,CAACO,KAAL,CAAWJ,QAAX,CAAoBE,GAA9C,CAAlB;AAEA,YAAMG,KAAK,GAAG;AACtBpC,QAAAA,MAAM,EAAE4B,IAAI,CAACS,EADS;AAEVC,QAAAA,kBAAkB,EAAEC,yBAAyB,CAACC,SAAD,CAFnC;AAGVC,QAAAA,kBAAkB,EAAEF,yBAAyB,CAACV,SAAD,CAHnC;AAIVa,QAAAA,gBAAgB,EAAEC,0BAA0B,CAACd,SAAD,CAJlC;AAKV5B,QAAAA,kBAAkB,EAAE0C,0BAA0B,CAACd,SAAD,CALpC;AAMV1B,QAAAA,UAAU,EAAE,EANF;AAOVC,QAAAA,QAAQ,EAAE,EAPA;AAQVwC,QAAAA,OAAO,EAAE,EARC;AASVvC,QAAAA,gBAAgB,EAAE;AATR,OAAd;AAWAsB,MAAAA,YAAY,CAACkB,IAAb,CAAkBT,KAAlB;AACH,KAhBD;AAiBApB,IAAAA,cAAc,CAACW,YAAD,CAAd;AACH;AAGD;AACJ;AACA;;;AACI,WAASY,yBAAT,CAAmCV,SAAnC,EAA8C;AAC1C,QAAIiB,GAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiBpC,eAAjB,EAAkC;AAC9B,UAAIqC,OAAO,GAAG,CACV,CAACD,IAAI,CAAChB,QAAL,CAAckB,aAAd,CAA4BjB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAckB,aAAd,CAA4BhB,GAD5B,CADU,EAGV,CAACc,IAAI,CAAChB,QAAL,CAAcmB,aAAd,CAA4BlB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAcmB,aAAd,CAA4BjB,GAD5B,CAHU,EAKV,CAACc,IAAI,CAAChB,QAAL,CAAcoB,aAAd,CAA4BnB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAcoB,aAAd,CAA4BlB,GAD5B,CALU,EAOV,CAACc,IAAI,CAAChB,QAAL,CAAcqB,aAAd,CAA4BpB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAcqB,aAAd,CAA4BnB,GAD5B,CAPU,CAAd;AAUAa,MAAAA,GAAG,GAAGO,qBAAqB,CAACxB,SAAD,EAAYmB,OAAZ,CAA3B;;AAEA,UAAGF,GAAG,KAAK,IAAX,EAAiB;AACb,eAAO,IAAP;AACH;AACJ;AACJ;AAED;AACJ;AACA;;;AACI,WAASH,0BAAT,CAAoCd,SAApC,EAA+C;AAC3C,QAAIiB,GAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiBtC,iBAAjB,EAAoC;AAChC,UAAIuC,OAAO,GAAG,CACV,CAACD,IAAI,CAAChB,QAAL,CAAckB,aAAd,CAA4BjB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAckB,aAAd,CAA4BhB,GAD5B,CADU,EAGV,CAACc,IAAI,CAAChB,QAAL,CAAcmB,aAAd,CAA4BlB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAcmB,aAAd,CAA4BjB,GAD5B,CAHU,EAKV,CAACc,IAAI,CAAChB,QAAL,CAAcoB,aAAd,CAA4BnB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAcoB,aAAd,CAA4BlB,GAD5B,CALU,EAOV,CAACc,IAAI,CAAChB,QAAL,CAAcqB,aAAd,CAA4BpB,GAA7B,EACAe,IAAI,CAAChB,QAAL,CAAcqB,aAAd,CAA4BnB,GAD5B,CAPU,CAAd;AAUAa,MAAAA,GAAG,GAAGO,qBAAqB,CAACxB,SAAD,EAAYmB,OAAZ,CAA3B;;AAEA,UAAGF,GAAG,KAAK,IAAX,EAAiB;AACb,eAAO,IAAP;AACH;AACL;AACH;;AAGD,WAASO,qBAAT,CAA+BC,KAA/B,EAAsCC,QAAtC,EAAgD;AAE5C,WAAO1D,cAAc,CAACyD,KAAD,EAAQC,QAAR,CAArB;AACH;;AAED,iBAAeC,aAAf,GAA+B;AAC3B9B,IAAAA,kBAAkB;AACrB;;AAEJ,sBACO;AAAQ,IAAA,OAAO,EAAE8B,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAGA;;GAjHuBjD,O;;KAAAA,O","sourcesContent":["import {React, useEffect, useState } from \"react\";\n\n//components\nimport Api from '../../api'\n//styles & img\nimport {Container} from './Form.styles'\n//other\nvar pointInPolygon = require('point-in-polygon');\n\n\nconst userInvoiceInitialValue = {\n    tripId: \"\",\n    endedAtChargePoint: false,\n    endedAtLoadStation: \"\",\n    timeOfTrip: \"\",\n    startFee: 10,\n    discountStartFee: \"\",\n    fromFreePark2Defined: \"\"\n}\n\n\nexport default function Invoice(props) {\n\t//hooks\n    // måste ha resan och koordinaterna\n    // måste senare räkna ut var koordinaterna ligger och jmföra\n\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState([]);\n    const [userInvoice, setUserInvoice] = useState([userInvoiceInitialValue])\n    /* Sparara alla ladda och parkeringszoner i state */\n    \n    console.log(userInvoice)\n\n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        setUserTrips(props)\n        \n    }, [props])\n\n\n    function checkAllUsersTrips() {\n        let arrayOfTrips = []\n\n        userTrips.props.forEach(trip => {\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n\n            const atrip = { \n\t\t\t\ttripId: trip.id,\n                startAtParkingZone: checkIfCoordInParkingZone(tripstart),\n                endedAtParkingZone: checkIfCoordInParkingZone(tripEnded),\n                startChargePoint: checkIfCoordInChargingPost(tripEnded),\n                endedAtChargePoint: checkIfCoordInChargingPost(tripEnded),\n                timeOfTrip: \"\",\n                startFee: 10,\n                timeFee: \"\",\n                discountStartFee: \"\",\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n    }\n\n    \n    /*  loopara igenom alla chargingposts, \n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInParkingZone(tripEnded) {\n        let res;\n        for (var elem of allParkingZones) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n        }\n    }\n\n    /*  loopara igenom alla chargingposts,\n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInChargingPost(tripEnded) {\n        let res;\n        for (var elem of allCharging_posts) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n       } \n    }\n\n\n    function checkIfPointInPolyGon(point, polygone) {\n\n        return pointInPolygon(point, polygone);\n    }\n\n    async function calculateCost() { \n        checkAllUsersTrips()\n    }\n\n\treturn (\n        <button onClick={calculateCost}>Faktura</button>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}