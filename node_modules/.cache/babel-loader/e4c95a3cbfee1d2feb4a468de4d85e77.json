{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\loggin\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Wrapper } from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nexport default function Login() {\n  _s();\n\n  const [data, setData] = useState({\n    errorMessage: \"\",\n    isLoading: false\n  });\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\"); // If Github API returns the code parameter\n\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      window.history.pushState({}, null, newUrl[0]);\n      setData({ ...data,\n        isLoading: true\n      });\n      const requestData = {\n        code: newUrl[1]\n      };\n      const proxy_url = \"http://localhost:1337/authenticate\"; // Use code parameter and other parameters to make POST request to proxy_server\n\n      fetch(proxy_url, {\n        method: \"POST\",\n        body: JSON.stringify(requestData)\n      }).then(response => response.json()).then(data => {\n        console.log(data, \" IGENOM\");\n      }).catch(error => {\n        console.log(error);\n        setData({\n          isLoading: false,\n          errorMessage: \"Sorry! Login failed\"\n        });\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Super amazing app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: data.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-container\",\n          children: data.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"login-link\",\n              href: `https://github.com/login/oauth/authorize?scope=user&client_id=7c488a6f93e063d494fb&redirect_uri=http://localhost:3000/login`,\n              onClick: () => {\n                setData({ ...data,\n                  errorMessage: \"\"\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(GithubIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login with GitHub\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"+o/aPN0HmoOh/R4RFDKbirQwrBY=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/loggin/index.js"],"names":["React","useState","useEffect","useContext","Navigate","Wrapper","AppContext","Api","require","config","Login","data","setData","errorMessage","isLoading","url","window","location","href","hasCode","includes","newUrl","split","history","pushState","requestData","code","proxy_url","fetch","method","body","JSON","stringify","then","response","json","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport {Wrapper} from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\n\nrequire('dotenv').config()\n\n\nexport default function Login() {\n  const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\");\n\n    // If Github API returns the code parameter\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      window.history.pushState({}, null, newUrl[0]);\n      setData({ ...data, isLoading: true });\n\n      const requestData = {\n        code: newUrl[1]\n      };\n\n      \n      const proxy_url = \"http://localhost:1337/authenticate\";\n      // Use code parameter and other parameters to make POST request to proxy_server\n      fetch(proxy_url, {\n        method: \"POST\",\n        body: JSON.stringify(requestData)\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data, \" IGENOM\")\n         \n        })\n        \n        .catch(error => {\n          console.log(error)\n          setData({\n            isLoading: false,\n            errorMessage: \"Sorry! Login failed\"\n          });\n        });\n    }\n  }, [data]);\n\n\n\n  return (\n    <Wrapper>\n      <section className=\"container\">\n        <div>\n          <h1>Welcome</h1>\n          <span>Super amazing app</span>\n          <span>{data.errorMessage}</span>\n          <div className=\"login-container\">\n            {data.isLoading ? (\n              <div className=\"loader-container\">\n                <div className=\"loader\"></div>\n              </div>\n            ) : (\n              <>\n                {\n                  // Link to request GitHub access\n                }\n                <a\n                  className=\"login-link\"\n                  href={`https://github.com/login/oauth/authorize?scope=user&client_id=7c488a6f93e063d494fb&redirect_uri=http://localhost:3000/login`}\n                  onClick={() => {\n                    setData({ ...data, errorMessage: \"\" });\n                  }}\n                >\n                  <GithubIcon />\n                  <span>Login with GitHub</span>\n                </a>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}