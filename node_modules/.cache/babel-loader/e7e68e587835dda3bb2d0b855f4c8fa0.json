{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Api from \"../api\";\nexport const useFetchAUser = id => {\n  _s();\n\n  const [aUser, setAUser] = useState([]);\n  const [aUserLoading, setUserLoading] = useState(false);\n  const [aUserMessage, setUserMessage] = useState(\"Loading...\");\n\n  const fetchData = async id => {\n    let data;\n\n    try {\n      setUserLoading(true);\n      const res = await Api.getAUser(id);\n      data = res.data;\n      data.trips.length > 0 ? setAUser(data.trips) : setUserMessage(\"Ingen resa gjord\");\n    } catch (error) {\n      setUserMessage(\"Något gick fel vid hämtningen från servern\");\n    }\n\n    setUserLoading(false);\n  }; // initial render\n\n\n  useEffect(() => {\n    fetchData(id);\n  }, []);\n  return {\n    aUser,\n    aUserLoading,\n    aUserMessage\n  };\n};\n\n_s(useFetchAUser, \"DvckrHcpmMiU7qHFqmej4IgPceI=\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/Hooks/useFetchAUser.js"],"names":["useState","useEffect","Api","useFetchAUser","id","aUser","setAUser","aUserLoading","setUserLoading","aUserMessage","setUserMessage","fetchData","data","res","getAUser","trips","length","error"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAGA,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAQ;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,YAAD,EAAeC,cAAf,IAAiCR,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAACS,YAAD,EAAeC,cAAf,IAAiCV,QAAQ,CAAC,YAAD,CAA/C;;AAEA,QAAMW,SAAS,GAAG,MAAOP,EAAP,IAAc;AAC5B,QAAIQ,IAAJ;;AACA,QAAI;AACAJ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMK,GAAG,GAAG,MAAMX,GAAG,CAACY,QAAJ,CAAaV,EAAb,CAAlB;AACAQ,MAAAA,IAAI,GAAGC,GAAG,CAACD,IAAX;AACAA,MAAAA,IAAI,CAACG,KAAL,CAAWC,MAAX,GAAoB,CAApB,GAAuBV,QAAQ,CAACM,IAAI,CAACG,KAAN,CAA/B,GAA8CL,cAAc,CAAC,kBAAD,CAA5D;AAEH,KAND,CAME,OAAOO,KAAP,EAAc;AACZP,MAAAA,cAAc,CAAC,4CAAD,CAAd;AACH;;AACDF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAZD,CALiC,CAmBjC;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS,CAACP,EAAD,CAAT;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAO;AAACC,IAAAA,KAAD;AAAQE,IAAAA,YAAR;AAAsBE,IAAAA;AAAtB,GAAP;AACH,CAzBM;;GAAMN,a","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Api from \"../api\";\n\n\nexport const useFetchAUser = (id) => {\n    const [aUser, setAUser] = useState([]);\n    const [aUserLoading, setUserLoading] = useState(false);\n    const [aUserMessage, setUserMessage] = useState(\"Loading...\");\n\n    const fetchData = async (id) => {\n        let data;\n        try {\n            setUserLoading(true)\n            const res = await Api.getAUser(id)\n            data = res.data;\n            data.trips.length > 0 ?setAUser(data.trips) : setUserMessage(\"Ingen resa gjord\");\n            \n        } catch (error) {\n            setUserMessage(\"Något gick fel vid hämtningen från servern\")\n        }\n        setUserLoading(false)\n    }  \n    \n    // initial render\n    useEffect(() => {\n        fetchData(id);\n    },[]);\n\n    return {aUser, aUserLoading, aUserMessage}\n}\n\n"]},"metadata":{},"sourceType":"module"}