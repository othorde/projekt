{"ast":null,"code":"import { React, useState } from \"react\";\n\nasync function loadStationsToMap() {\n  try {\n    let res = await Api.getAllCitys();\n\n    if (res !== null && mapRef.current !== null) {\n      console.log(res);\n      var cityname;\n      const map = mapRef.map;\n      const maps = mapRef.maps;\n      res.map(cityCoords => {\n        cityname = cityCoords.city;\n        let polyGon = [cityCoords.position.polygonePart1, cityCoords.position.polygonePart2, cityCoords.position.polygonePart3, cityCoords.position.polygonePart4];\n        cityname = new maps.Polygon({\n          paths: polyGon,\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.9,\n          strokeWeight: 2,\n          fillColor: \"transparent\",\n          fillOpacity: 0.35\n        });\n        cityname.addListener('click', event => {\n          console.log(\"HEJ\", cityCoords);\n          setPopupInfo({\n            showBike: false,\n            showCity: true,\n            showLocation: false,\n            content: cityCoords\n          });\n        });\n        cityname.setMap(map);\n        setCitysObject(oldArray => [...oldArray, cityname]);\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default loadCitys; //  fungerar som REACt component till kartan\n// import React from \"react\";\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n// export default PopUp;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/helperFunctions/loadCitys.js"],"names":["React","useState","loadStationsToMap","res","Api","getAllCitys","mapRef","current","console","log","cityname","map","maps","cityCoords","city","polyGon","position","polygonePart1","polygonePart2","polygonePart3","polygonePart4","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","addListener","event","setPopupInfo","showBike","showCity","showLocation","content","setMap","setCitysObject","oldArray","error","loadCitys"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA+B,OAA/B;;AAIA,eAAeC,iBAAf,GAAmC;AAC/B,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMC,GAAG,CAACC,WAAJ,EAAhB;;AACA,QAAIF,GAAG,KAAK,IAAR,IAAgBG,MAAM,CAACC,OAAP,KAAmB,IAAvC,EAA6C;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAEA,UAAIO,QAAJ;AACA,YAAMC,GAAG,GAAGL,MAAM,CAACK,GAAnB;AACA,YAAMC,IAAI,GAAGN,MAAM,CAACM,IAApB;AACAT,MAAAA,GAAG,CAACQ,GAAJ,CAAQE,UAAU,IAAI;AAElBH,QAAAA,QAAQ,GAAGG,UAAU,CAACC,IAAtB;AACA,YAAIC,OAAO,GACN,CAACF,UAAU,CAACG,QAAX,CAAoBC,aAArB,EACGJ,UAAU,CAACG,QAAX,CAAoBE,aADvB,EAEGL,UAAU,CAACG,QAAX,CAAoBG,aAFvB,EAGGN,UAAU,CAACG,QAAX,CAAoBI,aAHvB,CADL;AAMAV,QAAAA,QAAQ,GAAG,IAAIE,IAAI,CAACS,OAAT,CAAiB;AACxBC,UAAAA,KAAK,EAAEP,OADiB;AAExBQ,UAAAA,WAAW,EAAE,SAFW;AAGxBC,UAAAA,aAAa,EAAE,GAHS;AAIxBC,UAAAA,YAAY,EAAE,CAJU;AAKxBC,UAAAA,SAAS,EAAE,aALa;AAMxBC,UAAAA,WAAW,EAAE;AANW,SAAjB,CAAX;AASAjB,QAAAA,QAAQ,CAACkB,WAAT,CAAqB,OAArB,EAA+BC,KAAD,IAAW;AACrCrB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBI,UAAnB;AACAiB,UAAAA,YAAY,CAAC;AACTC,YAAAA,QAAQ,EAAE,KADD;AAETC,YAAAA,QAAQ,EAAE,IAFD;AAGTC,YAAAA,YAAY,EAAE,KAHL;AAITC,YAAAA,OAAO,EAAErB;AAJA,WAAD,CAAZ;AAMH,SARD;AASAH,QAAAA,QAAQ,CAACyB,MAAT,CAAgBxB,GAAhB;AACAyB,QAAAA,cAAc,CAACC,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAc3B,QAAd,CAAb,CAAd;AAEC,OA9BL;AA+BC;AAER,GAzCD,CAyCE,OAAO4B,KAAP,EAAc;AACZ9B,IAAAA,OAAO,CAACC,GAAR,CAAY6B,KAAZ;AACH;AACJ;;AACD,eAAeC,SAAf,C,CAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import {React, useState } from \"react\";\n\n\n\nasync function loadStationsToMap() {\n    try {\n        let res = await Api.getAllCitys();\n        if (res !== null && mapRef.current !== null) {\n            console.log(res)\n\n            var cityname;\n            const map = mapRef.map;\n            const maps = mapRef.maps;\n            res.map(cityCoords => {\n\n                cityname = cityCoords.city\n                let polyGon = \n                    ([cityCoords.position.polygonePart1,\n                        cityCoords.position.polygonePart2,\n                        cityCoords.position.polygonePart3,\n                        cityCoords.position.polygonePart4\n                    ]);\n                cityname = new maps.Polygon({\n                    paths: polyGon,\n                    strokeColor: \"#FF0000\",\n                    strokeOpacity: 0.9,\n                    strokeWeight: 2,\n                    fillColor: \"transparent\",\n                    fillOpacity: 0.35,\n                    });\n                \n                cityname.addListener('click', (event) => {\n                    console.log(\"HEJ\", cityCoords)\n                    setPopupInfo({\t\n                        showBike: false,\n                        showCity: true,\n                        showLocation: false,\n                        content: cityCoords\n                    })\n                });\n                cityname.setMap(map);\n                setCitysObject(oldArray => [...oldArray, cityname]);\n\n                })\n            }\n\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport default loadCitys\n\n\n\n//  fungerar som REACt component till kartan\n\n// import React from \"react\";\n\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n\n// export default PopUp;\n\n"]},"metadata":{},"sourceType":"module"}