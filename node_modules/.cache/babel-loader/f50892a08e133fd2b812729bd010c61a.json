{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Oauth\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Wrapper } from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config(); // clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n// clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n// accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n// authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n// redirectUri: \"http://localhost:3000/login/home\",\n// scopes: [\"identity\"],\n\n\nexport default function Logins() {\n  _s();\n\n  const [data, setData] = useState({\n    errorMessage: \"\",\n    isLoading: false\n  });\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\");\n    console.log(hasCode); // If Github API returns the code parameter\n\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      console.log((\"HÄÄÄÄÄÄÄÄR, \", hasCode));\n      setData({ ...data,\n        isLoading: true\n      });\n      const requestData = {\n        client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n        client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n        code: newUrl[1],\n        redirect_uri: \"http://localhost:3000/loggin/oauth\"\n      };\n      const postUrl = \"https://github.com/login/oauth/access_token\";\n\n      async function hej() {\n        const endpoint = `${postUrl}`;\n\n        try {\n          const document = await (await fetch(endpoint, {\n            method: 'POST',\n            body: JSON.stringify({\n              client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n              client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n              code: newUrl[1],\n              redirect_uri: \"http://localhost:3000/loggin/oauth\"\n            })\n          })).json();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      hej();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"HEJDU\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Logins, \"+o/aPN0HmoOh/R4RFDKbirQwrBY=\");\n\n_c = Logins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logins\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Oauth/index.js"],"names":["React","useState","useEffect","useContext","Navigate","Wrapper","AppContext","Api","require","config","Logins","data","setData","errorMessage","isLoading","url","window","location","href","hasCode","includes","console","log","newUrl","split","requestData","client_id","process","env","REACT_APP_GITHUB_CLIENT_ID","client_secret","REACT_APP_GITHUB_CLIENT_SECRET","code","redirect_uri","postUrl","hej","endpoint","document","fetch","method","body","JSON","stringify","json","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAGI;AACA;AACA;AACA;AACA;AACA;;;AAKJ,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAAD,CAAhC;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACE,UAAMa,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,UAAMC,OAAO,GAAGJ,GAAG,CAACK,QAAJ,CAAa,QAAb,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAJY,CAMd;;AACA,QAAIA,OAAJ,EAAa;AACX,YAAMI,MAAM,GAAGR,GAAG,CAACS,KAAJ,CAAU,QAAV,CAAf;AACAH,MAAAA,OAAO,CAACC,GAAR,EAAa,gBAAgBH,OAA7B;AACAP,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,QAAAA,SAAS,EAAE;AAAtB,OAAD,CAAP;AAGA,YAAMW,WAAW,GAAG;AAChBC,QAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADP;AAEhBC,QAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFX;AAGhBC,QAAAA,IAAI,EAAET,MAAM,CAAC,CAAD,CAHI;AAIhBU,QAAAA,YAAY,EAAE;AAJE,OAApB;AAQA,YAAMC,OAAO,GAAG,6CAAhB;;AAEA,qBAAeC,GAAf,GAAoB;AAEzB,cAAMC,QAAQ,GAAI,GAAEF,OAAQ,EAA5B;;AAEA,YAAI;AACH,gBAAMG,QAAQ,GAAG,MAAM,CACtB,MAAMC,KAAK,CAACF,QAAD,EAAW;AACtBG,YAAAA,MAAM,EAAE,MADc;AAEtBC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB;AACrBhB,cAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADF;AAErBC,cAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFN;AAGrBC,cAAAA,IAAI,EAAET,MAAM,CAAC,CAAD,CAHS;AAIrBU,cAAAA,YAAY,EAAE;AAJO,aAAhB;AAFgB,WAAX,CADW,EAUrBU,IAVqB,EAAvB;AAYA,SAbD,CAaE,OAAOC,KAAP,EAAc;AACfvB,UAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ;AAEA;AAGK;;AACDT,MAAAA,GAAG;AAEF;AACF,GAlDM,EAkDJ,EAlDI,CAAT;AAuDA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAnEqBzB,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport {Wrapper} from \"./Form.styles\";\nimport { AppContext } from \"../../AppContext\";\nimport Api from \"../../api\";\n\nrequire('dotenv').config()\n\n\n    // clientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\n    // clientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n    // accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n    // authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n    // redirectUri: \"http://localhost:3000/login/home\",\n    // scopes: [\"identity\"],\n\n\n\n\nexport default function Logins() {\n    const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n\n  \n    useEffect(() => {\n      // After requesting Github access, Github redirects back to your app with a code parameter\n        const url = window.location.href;\n        const hasCode = url.includes(\"?code=\");\n        console.log(hasCode);\n\n      // If Github API returns the code parameter\n      if (hasCode) {\n        const newUrl = url.split(\"?code=\");\n        console.log((\"HÄÄÄÄÄÄÄÄR, \", hasCode))\n        setData({ ...data, isLoading: true });\n\n        \n        const requestData = {\n            client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n            client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n            code: newUrl[1],\n            redirect_uri: \"http://localhost:3000/loggin/oauth\"\n        };\n        \n\n        const postUrl = \"https://github.com/login/oauth/access_token\";\n\n        async function hej(){\n            \n\t\t\tconst endpoint = `${postUrl}`\n\n\t\t\ttry {\n\t\t\t\tconst document = await (\n\t\t\t\t\tawait fetch(endpoint, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify( {\n\t\t\t\t\t\tclient_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n\t\t\t\t\t\tclient_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n\t\t\t\t\t\tcode: newUrl[1],\n\t\t\t\t\t\tredirect_uri: \"http://localhost:3000/loggin/oauth\"\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t).json();\n\t\t\t\t\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\t\n\t\t\t}\n\n\n        }\n        hej()\n            \n        }\n      }, []);\n\n\n  \n  \n    return (\n      <Wrapper>\n        <>\n           HEJDU\n        </>\n       \n      </Wrapper>\n    );\n  }\n  \n"]},"metadata":{},"sourceType":"module"}