{"ast":null,"code":"import useSwr from \"swr\";\nconst Api = {\n  // GetCrimes: async ()=> {\n  //     const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n  //     const fetcher = (...args) => fetch(...args).then(response => response.json()); //gör om denna sen\n  //     const {data, error} = useSwr(url, fetcher) //gör om denna sen\n  //     const crimes = data && !error ? data.slice(0, 200) : [];\n  //     return crimes;\n  // },\n  getAllCrimes: async () => {\n    const endpoint = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\";\n    let res = await (await fetch(endpoint)).json();\n    return res;\n  },\n  getAllCrimes2: async () => {\n    const endpoint = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\";\n    let res = await (await fetch(endpoint)).json();\n    return res;\n  },\n  getAllCitys: async () => {\n    const data = [{\n      _id: \"1231231\",\n      city: \" Åhus\",\n      amount_of_bikes: \"10\",\n      position: {\n        polygonePart1: {\n          lat: 56.012562,\n          lng: 14.115424\n        },\n        polygonePart2: {\n          lat: 55.925155,\n          lng: 14.073078\n        },\n        polygonePart3: {\n          lat: 55.931968,\n          lng: 14.289134\n        },\n        polygonePart4: {\n          lat: 56.037256,\n          lng: 14.306297\n        }\n      }\n    }, {\n      _id: \"123123221\",\n      city: \" Stockholm\",\n      amount_of_bikes: \"100\",\n      position: {\n        polygonePart1: {\n          lat: 59.389894,\n          lng: 17.875983\n        },\n        polygonePart2: {\n          lat: 59.152629,\n          lng: 17.868818\n        },\n        polygonePart3: {\n          lat: 59.189469,\n          lng: 18.319379\n        },\n        polygonePart4: {\n          lat: 59.484114,\n          lng: 18.359537\n        }\n      }\n    }];\n    return data;\n  }\n};\nexport default Api;","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/api.js"],"names":["useSwr","Api","getAllCrimes","endpoint","res","fetch","json","getAllCrimes2","getAllCitys","data","_id","city","amount_of_bikes","position","polygonePart1","lat","lng","polygonePart2","polygonePart3","polygonePart4"],"mappings":"AACA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,MAAMC,GAAG,GAAI;AAET;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIHC,EAAAA,YAAY,EAAE,YAAY;AACzB,UAAMC,QAAQ,GAAG,6FAAjB;AACA,QAAIC,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACM,WAAOF,GAAP;AACN,GAlBW;AAoBTG,EAAAA,aAAa,EAAE,YAAY;AAC7B,UAAMJ,QAAQ,GAAG,6FAAjB;AACA,QAAIC,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAhB;AACM,WAAOF,GAAP;AACN,GAxBW;AA4BTI,EAAAA,WAAW,EAAE,YAAY;AACrB,UAAMC,IAAI,GAAG,CACT;AACIC,MAAAA,GAAG,EAAE,SADT;AAEIC,MAAAA,IAAI,EAAE,OAFV;AAGIC,MAAAA,eAAe,EAAE,IAHrB;AAIIC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,aAAa,EAAE;AACXC,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SADT;AAKNC,QAAAA,aAAa,EAAE;AACXF,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SALT;AASNE,QAAAA,aAAa,EAAE;AACXH,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SATT;AAaNG,QAAAA,aAAa,EAAE;AACXJ,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM;AAbT;AAJd,KADS,EAwBT;AACIN,MAAAA,GAAG,EAAE,WADT;AAEIC,MAAAA,IAAI,EAAE,YAFV;AAGIC,MAAAA,eAAe,EAAE,KAHrB;AAIIC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,aAAa,EAAE;AACXC,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SADT;AAKNC,QAAAA,aAAa,EAAE;AACXF,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SALT;AASNE,QAAAA,aAAa,EAAE;AACXH,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SATT;AAaNG,QAAAA,aAAa,EAAE;AACXJ,UAAAA,GAAG,EAAE,SADM;AAEXC,UAAAA,GAAG,EAAE;AAFM;AAbT;AAJd,KAxBS,CAAb;AAkDA,WAAOP,IAAP;AACN;AAhFW,CAAb;AAmFA,eAAeR,GAAf","sourcesContent":["\nimport useSwr from \"swr\";\n\nconst Api =  {\n\n    // GetCrimes: async ()=> {\n    //     const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n    //     const fetcher = (...args) => fetch(...args).then(response => response.json()); //gör om denna sen\n    //     const {data, error} = useSwr(url, fetcher) //gör om denna sen\n    //     const crimes = data && !error ? data.slice(0, 200) : [];\n\n    //     return crimes;\n\n    // },\n\n\n    \n\tgetAllCrimes: async () => {\n\t\tconst endpoint = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n\t\tlet res = await (await fetch(endpoint)).json();\n        return res\n\t},\n\n    getAllCrimes2: async () => {\n\t\tconst endpoint = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2020-01\"\n\t\tlet res = await (await fetch(endpoint)).json();\n        return res\n\t},\n\n\n\n    getAllCitys: async () => {\n        const data = [\n            {\n                _id: \"1231231\",\n                city: \" Åhus\",\n                amount_of_bikes: \"10\",\n                position: {\n                    polygonePart1: {\n                        lat: 56.012562,\n                        lng: 14.115424 \n                    },\n                    polygonePart2: {\n                        lat: 55.925155,\n                        lng: 14.073078 \n                    },\n                    polygonePart3: {\n                        lat: 55.931968,\n                        lng: 14.289134 \n                    },\n                    polygonePart4: {\n                        lat: 56.037256,\n                        lng: 14.306297 \n                    },\n                },\n            },\n            {\n                _id: \"123123221\",\n                city: \" Stockholm\",\n                amount_of_bikes: \"100\",\n                position: {\n                    polygonePart1: {\n                        lat: 59.389894,\n                        lng: 17.875983 \n                    },\n                    polygonePart2: {\n                        lat: 59.152629,\n                        lng: 17.868818\n                    },\n                    polygonePart3: {   \n                        lat: 59.189469,\n                        lng: 18.319379\n                    },\n                    polygonePart4: {\n                        lat: 59.484114,     \n                        lng: 18.359537\n                    }\n                }\n            }\n            \n\n        ]\n        return data\n\t},\n}\n\nexport default Api\n"]},"metadata":{},"sourceType":"module"}