{"ast":null,"code":"import { React, useState } from \"react\";\n\nconst LoadCitys = (mapRef, props) => {\n  if (props.content.length > 0 && mapRef.map !== null) {\n    var cityname;\n    const map = mapRef.map;\n    const maps = mapRef.maps;\n    props.content.map(coords => {\n      cityname = coords.city;\n      let polyGon = [coords.position.polygonePart1, coords.position.polygonePart2, coords.position.polygonePart3, coords.position.polygonePart4];\n\n      if (props.getStations === true) {\n        cityname = new maps.Polygon({\n          paths: polyGon,\n          strokeColor: \"black\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35\n        });\n        cityname.setMap(map);\n        cityname.onClick = {\n          handleToggle() {\n            console.log(\"HEasdasaddsaJ\");\n          }\n\n        };\n      }\n    });\n  }\n};\n\n_c = LoadCitys;\nexport default LoadCitys; //  fungerar som REACt component till kartan\n// import React from \"react\";\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n// export default PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadCitys\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Map/helperFunctions/loadCitys.js"],"names":["React","useState","LoadCitys","mapRef","props","content","length","map","cityname","maps","coords","city","polyGon","position","polygonePart1","polygonePart2","polygonePart3","polygonePart4","getStations","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","setMap","onClick","handleToggle","console","log"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA+B,OAA/B;;AAEA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAEpC,MAAIA,KAAK,CAACC,OAAN,CAAcC,MAAd,GAAuB,CAAvB,IAA4BH,MAAM,CAACI,GAAP,KAAe,IAA/C,EAAqD;AACpD,QAAIC,QAAJ;AACA,UAAMD,GAAG,GAAGJ,MAAM,CAACI,GAAnB;AACA,UAAME,IAAI,GAAGN,MAAM,CAACM,IAApB;AAEAL,IAAAA,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAkBG,MAAM,IACvB;AACAF,MAAAA,QAAQ,GAAGE,MAAM,CAACC,IAAlB;AACA,UAAIC,OAAO,GACT,CAACF,MAAM,CAACG,QAAP,CAAgBC,aAAjB,EACAJ,MAAM,CAACG,QAAP,CAAgBE,aADhB,EAEAL,MAAM,CAACG,QAAP,CAAgBG,aAFhB,EAGAN,MAAM,CAACG,QAAP,CAAgBI,aAHhB,CADF;;AAOA,UAAIb,KAAK,CAACc,WAAN,KAAsB,IAA1B,EAAgC;AAC/BV,QAAAA,QAAQ,GAAG,IAAIC,IAAI,CAACU,OAAT,CAAiB;AAC3BC,UAAAA,KAAK,EAAER,OADoB;AAE3BS,UAAAA,WAAW,EAAE,OAFc;AAG3BC,UAAAA,aAAa,EAAE,GAHY;AAI3BC,UAAAA,YAAY,EAAE,CAJa;AAK3BC,UAAAA,SAAS,EAAE,SALgB;AAM3BC,UAAAA,WAAW,EAAE;AANc,SAAjB,CAAX;AAQAjB,QAAAA,QAAQ,CAACkB,MAAT,CAAgBnB,GAAhB;AACAC,QAAAA,QAAQ,CAACmB,OAAT,GAAiB;AAACC,UAAAA,YAAY,GAAG;AAChCC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA;;AAFgB,SAAjB;AAIC;AACD,KAzBF;AA0BC;AACF,CAlCD;;KAAM5B,S;AAmCN,eAAeA,SAAf,C,CAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import {React, useState } from \"react\";\n\nconst LoadCitys = (mapRef, props) => {\n\n\tif (props.content.length > 0 && mapRef.map !== null) {\n\t\tvar cityname;\n\t\tconst map = mapRef.map;\n\t\tconst maps = mapRef.maps;\n\n\t\tprops.content.map(coords =>\n\t\t\t{\n\t\t\tcityname = coords.city\n\t\t\tlet polyGon = \n\t\t\t\t([coords.position.polygonePart1,\n\t\t\t\t\tcoords.position.polygonePart2,\n\t\t\t\t\tcoords.position.polygonePart3,\n\t\t\t\t\tcoords.position.polygonePart4\n\t\t\t\t]);\n\n\t\t\tif (props.getStations === true) {\n\t\t\t\tcityname = new maps.Polygon({\n\t\t\t\t\tpaths: polyGon,\n\t\t\t\t\tstrokeColor: \"black\",\n\t\t\t\t\tstrokeOpacity: 0.8,\n\t\t\t\t\tstrokeWeight: 2,\n\t\t\t\t\tfillColor: \"#FF0000\",\n\t\t\t\t\tfillOpacity: 0.35,\n\t\t\t\t\t});\n\t\t\t\tcityname.setMap(map);\n\t\t\t\tcityname.onClick={handleToggle() {\n\t\t\t\t\tconsole.log(\"HEasdasaddsaJ\")\n\t\t\t\t}}\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n}\nexport default LoadCitys\n\n\n\n//  fungerar som REACt component till kartan\n\n// import React from \"react\";\n\n// const PopUp = ({ text, tooltip, store }) => (\n//   <div className=\"circle\">\n//     <span className=\"circleText\" title={tooltip}>\n//       {text, store}\n//     </span>\n//   </div>\n// );\n\n// export default PopUp;\n\n"]},"metadata":{},"sourceType":"module"}