{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\components\\\\Oauth\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { RequestAuthorizationCode, AuthorizationCodeCallback } from \"react-oauth2-auth-code-flow\";\nimport ClientOAuth2 from \"client-oauth2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst oauthClient = new ClientOAuth2({\n  clientId: process.env.GITHUB_CLIENT_ID,\n  clientSecret: process.env.GITHUB_CLIENT_SECRET,\n  accessTokenUri: `https://github.com/login/oauth/access_token`,\n\n  /* måste va rätt */\n  authorizationUri: \"https://github.com/login/oauth/authorize\",\n\n  /* måste ocksåva rätt */\n  redirectUri: \"http://localhost:3000/login/home\",\n  scopes: [\"identity\"]\n});\nexport default class ReceiveFromDropbox extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSuccess = async (accessToken, _ref) => {\n      let {\n        response,\n        state\n      } = _ref;\n      console.log(\"Successfully authorized\");\n      await setProfileFromDropbox(accessToken);\n      await redirect(state.from);\n    };\n\n    this.handleError = error => {\n      console.error(\"An error occurred\");\n      console.error(error.message);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AuthorizationCodeCallback, {\n      oauthClient: oauthClient,\n      onAuthSuccess: this.handleSuccess,\n      onAuthError: this.handleError,\n      render: _ref2 => {\n        let {\n          processing,\n          state,\n          error\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [processing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Authorizing now...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 28\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: [\"An error occurred: \", error.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n} // import React, {useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { RequestAuthorizationCode } from \"react-oauth2-auth-code-flow\";\n// import ClientOAuth2 from \"client-oauth2\";\n// import { AuthorizationCodeCallback  } from \"react-oauth2-auth-code-flow\";\n// //styles\n// import { Wrapper, Content, SignIn, Delimiter, ScooterImg } from './Form.styles.js'\n// import scooterPic from '../../images/scooter.png'\n// //other\n// import AppContext from '../../AppContext';\n// import Api from \"../../api.js\";\n// require('dotenv').config()\n// const oauthClient = new ClientOAuth2({\n//     clientId: process.env.GITHUB_CLIENT_ID,\n//     clientSecret: process.env.GITHUB_CLIENT_SECRET,\n//     accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n//     authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n//     redirectUri: \"http://localhost:3000/login/home\",\n//     scopes: [\"identity\"],\n// });\n// const Oauth = () => {\n//     console.log(\"HEJ\")\n//     const handleSubmit2 = async (event)  => {\n//         // kontrollera inlogg, kolla med servern om användaruppg är ok\n//         // nu sparar jag lösen som vnaligt lösen, fixa\n//         let res = oauthClient;\n//         console.log(res)\n//         // localStorage.setItem('user', JSON.stringify(inputs));\n//         // myContext.toggleAuth(true);\n//         // navigate(\"/home\")\n//         event.preventDefault();\n//     }\n//     handleSuccess = async (accessToken, { response, state }) => {\n//           console.log(\"Successfully authorized\");\n//           await setProfileFromDropbox(accessToken);\n//           await redirect(state.from);\n//         };\n//     handleError = (error) => {\n//           console.error(\"An error occurred\");\n//           console.error(error.message);\n//         };\n//     return (\n//         <Wrapper>\n//         <AuthorizationCodeCallback\n//             oauthClient={oauthClient}\n//             onAuthSuccess={handleSuccess()}\n//             onAuthError={handleError()}\n//             render={({ processing, state, error }) => (\n//                 <div>\n//                 {processing && <p>Authorizing now...</p>}\n//                 {error && (\n//                     <p className=\"error\">An error occurred: {error.message}</p>\n//                 )}\n//                 </div>\n//             )}\n//         />\n//         </Wrapper>\n//       );\n// }\n// export default Oauth","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/components/Oauth/index.js"],"names":["React","Component","RequestAuthorizationCode","AuthorizationCodeCallback","ClientOAuth2","oauthClient","clientId","process","env","GITHUB_CLIENT_ID","clientSecret","GITHUB_CLIENT_SECRET","accessTokenUri","authorizationUri","redirectUri","scopes","ReceiveFromDropbox","handleSuccess","accessToken","response","state","console","log","setProfileFromDropbox","redirect","from","handleError","error","message","render","processing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,EAAmCC,yBAAnC,QAAoE,6BAApE;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,WAAW,GAAG,IAAID,YAAJ,CAAiB;AACjCE,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADW;AAEjCC,EAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFO;AAGjCC,EAAAA,cAAc,EAAG,6CAHgB;;AAG8B;AAC/DC,EAAAA,gBAAgB,EAAE,0CAJe;;AAI6B;AAC9DC,EAAAA,WAAW,EAAE,kCALoB;AAMjCC,EAAAA,MAAM,EAAE,CAAC,UAAD;AANyB,CAAjB,CAApB;AAWA,eAAe,MAAMC,kBAAN,SAAiCf,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACxDgB,aADwD,GACxC,OAAOC,WAAP,WAA4C;AAAA,UAAxB;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAwB;AAC1DC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,YAAMC,qBAAqB,CAACL,WAAD,CAA3B;AACA,YAAMM,QAAQ,CAACJ,KAAK,CAACK,IAAP,CAAd;AACD,KALuD;;AAAA,SAOxDC,WAPwD,GAOzCC,KAAD,IAAW;AACvBN,MAAAA,OAAO,CAACM,KAAR,CAAc,mBAAd;AACAN,MAAAA,OAAO,CAACM,KAAR,CAAcA,KAAK,CAACC,OAApB;AACD,KAVuD;AAAA;;AAYxDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,yBAAD;AACE,MAAA,WAAW,EAAExB,WADf;AAEE,MAAA,aAAa,EAAE,KAAKY,aAFtB;AAGE,MAAA,WAAW,EAAE,KAAKS,WAHpB;AAIE,MAAA,MAAM,EAAE;AAAA,YAAC;AAAEI,UAAAA,UAAF;AAAcV,UAAAA,KAAd;AAAqBO,UAAAA;AAArB,SAAD;AAAA,4BACN;AAAA,qBACGG,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADjB,EAEGH,KAAK,iBACJ;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,8CAAyCA,KAAK,CAACC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA5BuD,C,CAqC1D;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { RequestAuthorizationCode, AuthorizationCodeCallback } from \"react-oauth2-auth-code-flow\";\nimport ClientOAuth2 from \"client-oauth2\";\n\nconst oauthClient = new ClientOAuth2({\n    clientId: process.env.GITHUB_CLIENT_ID,\n    clientSecret: process.env.GITHUB_CLIENT_SECRET,\n    accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n    authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n    redirectUri: \"http://localhost:3000/login/home\",\n    scopes: [\"identity\"],\n});\n\n\n\nexport default class ReceiveFromDropbox extends Component {\n  handleSuccess = async (accessToken, { response, state }) => {\n    console.log(\"Successfully authorized\");\n    await setProfileFromDropbox(accessToken);\n    await redirect(state.from);\n  };\n\n  handleError = (error) => {\n    console.error(\"An error occurred\");\n    console.error(error.message);\n  };\n\n  render() {\n    return (\n      <AuthorizationCodeCallback\n        oauthClient={oauthClient}\n        onAuthSuccess={this.handleSuccess}\n        onAuthError={this.handleError}\n        render={({ processing, state, error }) => (\n          <div>\n            {processing && <p>Authorizing now...</p>}\n            {error && (\n              <p className=\"error\">An error occurred: {error.message}</p>\n            )}\n          </div>\n        )}\n      />\n    );\n  }\n}\n\n\n\n\n\n\n\n// import React, {useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { RequestAuthorizationCode } from \"react-oauth2-auth-code-flow\";\n// import ClientOAuth2 from \"client-oauth2\";\n// import { AuthorizationCodeCallback  } from \"react-oauth2-auth-code-flow\";\n\n// //styles\n// import { Wrapper, Content, SignIn, Delimiter, ScooterImg } from './Form.styles.js'\n// import scooterPic from '../../images/scooter.png'\n\n// //other\n// import AppContext from '../../AppContext';\n// import Api from \"../../api.js\";\n// require('dotenv').config()\n\n\n// const oauthClient = new ClientOAuth2({\n//     clientId: process.env.GITHUB_CLIENT_ID,\n//     clientSecret: process.env.GITHUB_CLIENT_SECRET,\n//     accessTokenUri: `https://github.com/login/oauth/access_token`, /* måste va rätt */\n//     authorizationUri: \"https://github.com/login/oauth/authorize\", /* måste ocksåva rätt */\n//     redirectUri: \"http://localhost:3000/login/home\",\n//     scopes: [\"identity\"],\n// });\n\n\n// const Oauth = () => {\n//     console.log(\"HEJ\")\n\n\n  \n//     const handleSubmit2 = async (event)  => {\n//         // kontrollera inlogg, kolla med servern om användaruppg är ok\n//         // nu sparar jag lösen som vnaligt lösen, fixa\n        \n\n//         let res = oauthClient;\n//         console.log(res)\n//         // localStorage.setItem('user', JSON.stringify(inputs));\n//         // myContext.toggleAuth(true);\n//         // navigate(\"/home\")\n//         event.preventDefault();\n//     }\n\n\n    \n//     handleSuccess = async (accessToken, { response, state }) => {\n//           console.log(\"Successfully authorized\");\n//           await setProfileFromDropbox(accessToken);\n//           await redirect(state.from);\n//         };\n      \n//     handleError = (error) => {\n//           console.error(\"An error occurred\");\n//           console.error(error.message);\n//         };\n\n//     return (\n//         <Wrapper>\n//         <AuthorizationCodeCallback\n//             oauthClient={oauthClient}\n//             onAuthSuccess={handleSuccess()}\n//             onAuthError={handleError()}\n//             render={({ processing, state, error }) => (\n//                 <div>\n//                 {processing && <p>Authorizing now...</p>}\n//                 {error && (\n//                     <p className=\"error\">An error occurred: {error.message}</p>\n//                 )}\n//                 </div>\n//             )}\n//         />\n//         </Wrapper>\n//       );\n// }\n\n// export default Oauth\n"]},"metadata":{},"sourceType":"module"}