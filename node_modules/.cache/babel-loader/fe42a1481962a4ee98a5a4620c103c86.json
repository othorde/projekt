{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Othor\\\\dbwebb-kurser\\\\frontendphp\\\\webbclient\\\\src\\\\routes\\\\History\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from \"react\"; //components\n\nimport MapForUser from '../../components/MapForUser/index';\nimport Invoice from \"../../components/Invoice\"; //styles\n\nimport { Container, Main, UserHistory, MapContainer } from './Form.styles'; //other\n\nimport Api from \"../../api\";\nimport Appcontext from '../../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar pointInPolygon = require('point-in-polygon');\n\nconst initialValue = {\n  showMap: false,\n  startCoord: \"\",\n  stopCoord: \"\"\n};\nconst userInvoiceInitialValue = {\n  tripId: \"\",\n  endedAtChargePoint: false,\n  endedAtLoadStation: \"\",\n  timeOfTrip: \"\",\n  startFee: 10,\n  discountStartFee: \"\",\n  fromFreePark2Defined: \"\"\n};\n\nconst History = props => {\n  _s();\n\n  const [userHistory, setUserHistory] = useState([]);\n  const [showMapForUser, setShowMapForUser] = useState(initialValue);\n  const [message, setMessage] = useState(\"Loading.....\");\n  const [allCharging_posts, setAllCharging_posts] = useState([]); //parkering och laddstationer\n\n  const [allParkingZones, setAllParkingZones] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n  const [userInvoice, setUserInvoice] = useState([]);\n  const myContext = useContext(Appcontext);\n  let user = myContext.userHook;\n  let data;\n  useEffect(() => {\n    const getAllCities = async () => {\n      let allCities = await Api.getAllCitys();\n      allCities.forEach(element => {\n        setAllCharging_posts(element.charging_posts);\n        setAllParkingZones(element.parking_zones);\n      });\n    };\n\n    getAllCities();\n    setUserTrips(props);\n    checkAllUsersTrips();\n  }, [props]);\n  useEffect(() => {}, [setUserInvoice, userInvoice]);\n\n  function checkAllUsersTrips() {\n    let arrayOfTrips = [];\n    userTrips.props.forEach(trip => {\n      var startFee = 10;\n      var discount = 0;\n      let time = getTimeOfTrip(trip.start.time, trip.stop.time);\n      let timeFee = 2.5 * time;\n      var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n      var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n      var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n      var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n      var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n      var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n      /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n\n      if (startAtParkingZone === undefined || startChargePoint === undefined) {\n        if (endedAtParkingZone === true || endedAtChargePoint === true) {\n          startFee = startFee * 0.85;\n          discount = 10 - startFee;\n        }\n      }\n\n      const atrip = {\n        tripId: trip.id,\n        date: trip.date,\n        startTime: trip.start.time,\n        stopTime: trip.stop.time,\n        startAtParkingZone: startAtParkingZone,\n        endedAtParkingZone: endedAtParkingZone,\n        startChargePoint: startChargePoint,\n        endedAtChargePoint: endedAtChargePoint,\n        timeOfTrip: time,\n        startFee: startFee,\n        timeFee: timeFee,\n        discount: discount,\n        totalCost: timeFee + startFee\n      };\n      arrayOfTrips.push(atrip);\n    });\n    setUserInvoice(arrayOfTrips); //return userInvoice\n  }\n  /*  loopara igenom alla chargingposts, \n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInParkingZone(tripEnded) {\n    let res;\n\n    for (var elem of allParkingZones) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /*  loopara igenom alla chargingposts,\n      ser om koordinaterna finns inuti polygon,\n      retunerar endast true */\n\n\n  function checkIfCoordInChargingPost(tripEnded) {\n    let res;\n\n    for (var elem of allCharging_posts) {\n      let polyGon = [[elem.position.polygonePart1.lat, elem.position.polygonePart1.lng], [elem.position.polygonePart2.lat, elem.position.polygonePart2.lng], [elem.position.polygonePart3.lat, elem.position.polygonePart3.lng], [elem.position.polygonePart4.lat, elem.position.polygonePart4.lng]];\n      res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n      if (res === true) {\n        return true;\n      }\n    }\n  }\n  /* Räknar ut tiden för resan, gör om till sekunder \n      subtraherar och dividerar för att få ut minuter\n  */\n\n\n  function getTimeOfTrip(starttime, stoptime) {\n    var arrStarttime = starttime.split(\".\");\n    var arrStoptime = stoptime.split(\".\");\n    arrStarttime[0] = arrStarttime[0] * 60 * 60;\n    arrStarttime[1] = arrStarttime[1] * 60;\n    arrStoptime[0] = arrStoptime[0] * 60 * 60;\n    arrStoptime[1] = arrStoptime[1] * 60;\n    var stopTime = arrStoptime[0] + arrStoptime[1];\n    var startTime = arrStarttime[0] + arrStarttime[1];\n    var time = (stopTime - startTime) / 60;\n    return time;\n  }\n\n  function checkIfPointInPolyGon(point, polygone) {\n    return pointInPolygon(point, polygone);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      if (user && user.value.id) {\n        let id = user.value.id;\n        /* Om props läs därifrån */\n\n        if (props && props.customer) {\n          id = props.customer.id;\n        }\n\n        let res = await Api.getAUser(id);\n\n        if (res && res.data) {\n          data = res.data;\n\n          if (data.trips.length > 0) {\n            setUserHistory(data.trips);\n          } else {\n            setMessage(\"Ingen resa gjord\");\n          }\n        }\n      }\n    }\n\n    fetchData();\n  }, [user]); /// visa karta\n\n  function showMap(startCoord, stopCoord, e) {\n    let pageY = e.pageY;\n\n    if (props && props.customer) {\n      pageY = pageY - 200;\n    }\n\n    setShowMapForUser({\n      showMap: !showMapForUser.showMap,\n      startCoord: startCoord,\n      stopCoord: stopCoord,\n      pageY: pageY\n    });\n  }\n\n  useEffect(() => {}, [showMapForUser, setShowMapForUser]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      showMap: showMapForUser.showMap,\n      children: /*#__PURE__*/_jsxDEV(UserHistory, {\n        children: userInvoice.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n            children: \" Resekostnader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Starttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Sluttid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Total tid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Start avgift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Rabatt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Tid avgift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Total kostnad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userInvoice.map(elem => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Datum\",\n                children: [\" \", elem.date, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Starttid\",\n                children: [elem.startTime, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Sluttid\",\n                children: [elem.stopTime, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Total tid\",\n                children: [elem.timeOfTrip, \" min \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Start avgift\",\n                children: [elem.startFee, \":-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Rabatt\",\n                children: [elem.discount, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Minutpris\",\n                children: [elem.timeFee, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Total kostnad\",\n                children: [elem.totalCost, \":- \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this) : console.log(\"HEJ\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      showMap: showMapForUser.showMap,\n      pageY: showMapForUser.pageY,\n      children: showMapForUser.showMap && /*#__PURE__*/_jsxDEV(MapForUser, {\n        showMapForUser: showMapForUser,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n\n_s(History, \"BGU/xYqaXvZ8QwJ345qcXlTLSwY=\");\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/Othor/dbwebb-kurser/frontendphp/webbclient/src/routes/History/index.js"],"names":["React","useState","useEffect","useContext","MapForUser","Invoice","Container","Main","UserHistory","MapContainer","Api","Appcontext","pointInPolygon","require","initialValue","showMap","startCoord","stopCoord","userInvoiceInitialValue","tripId","endedAtChargePoint","endedAtLoadStation","timeOfTrip","startFee","discountStartFee","fromFreePark2Defined","History","props","userHistory","setUserHistory","showMapForUser","setShowMapForUser","message","setMessage","allCharging_posts","setAllCharging_posts","allParkingZones","setAllParkingZones","userTrips","setUserTrips","userInvoice","setUserInvoice","myContext","user","userHook","data","getAllCities","allCities","getAllCitys","forEach","element","charging_posts","parking_zones","checkAllUsersTrips","arrayOfTrips","trip","discount","time","getTimeOfTrip","start","stop","timeFee","tripEnded","position","lat","lng","tripStarted","startAtParkingZone","checkIfCoordInParkingZone","endedAtParkingZone","startChargePoint","checkIfCoordInChargingPost","undefined","atrip","id","date","startTime","stopTime","totalCost","push","res","elem","polyGon","polygonePart1","polygonePart2","polygonePart3","polygonePart4","checkIfPointInPolyGon","starttime","stoptime","arrStarttime","split","arrStoptime","point","polygone","fetchData","value","customer","getAUser","trips","length","e","pageY","map","console","log"],"mappings":"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","sourcesContent":["import {React, useState, useEffect, useContext} from \"react\";\n\n//components\nimport MapForUser from '../../components/MapForUser/index'\nimport Invoice from \"../../components/Invoice\";\n//styles\nimport {Container, Main, UserHistory, MapContainer} from './Form.styles'\n//other\nimport Api from \"../../api\";\nimport Appcontext from '../../AppContext'\nvar pointInPolygon = require('point-in-polygon');\n\nconst initialValue = {\n    showMap: false,\n    startCoord: \"\",\n    stopCoord: \"\",\n}\n\n\nconst userInvoiceInitialValue = {\n    tripId: \"\",\n    endedAtChargePoint: false,\n    endedAtLoadStation: \"\",\n    timeOfTrip: \"\",\n    startFee: 10,\n    discountStartFee: \"\",\n    fromFreePark2Defined: \"\"\n}\n\nconst History = (props)  => {\n\n    const [userHistory, setUserHistory] = useState([]);\n    const [showMapForUser, setShowMapForUser] = useState(initialValue);\n    const [message, setMessage] = useState(\"Loading.....\");\n    const [allCharging_posts, setAllCharging_posts] = useState([]) //parkering och laddstationer\n    const [allParkingZones, setAllParkingZones] = useState([])\n    const [userTrips, setUserTrips] = useState([]);\n    const [userInvoice, setUserInvoice] = useState([])\n\n\n    const myContext = useContext(Appcontext)\n    let user = myContext.userHook;\n    let data;\n   \n    useEffect(() => {\n        const getAllCities = async () => {\n\n        let allCities = await Api.getAllCitys();\n        allCities.forEach(element => {\n            setAllCharging_posts(element.charging_posts)\n            setAllParkingZones(element.parking_zones)\n            });\n        }\n        getAllCities()\n        setUserTrips(props)\n        checkAllUsersTrips()\n\n    }, [props])\n\n    useEffect(() => {\n    }, [setUserInvoice, userInvoice])\n\n    \n    function checkAllUsersTrips() {\n        let arrayOfTrips = []\n        \n        userTrips.props.forEach(trip => {\n            var startFee = 10;\n            var discount = 0;\n            let time = getTimeOfTrip(trip.start.time, trip.stop.time)\n            let timeFee = 2.5 * time;\n\n            var tripEnded = [trip.stop.position.lat, trip.stop.position.lng];\n            var tripStarted = [trip.start.position.lat, trip.start.position.lng];\n            var startAtParkingZone = checkIfCoordInParkingZone(tripStarted);\n            var endedAtParkingZone = checkIfCoordInParkingZone(tripEnded);\n            var startChargePoint = checkIfCoordInChargingPost(tripStarted);\n            var endedAtChargePoint = checkIfCoordInChargingPost(tripEnded);\n\n            /* Om en resa börjar i fri parkering och slutar på en definerad blir startavg lägre */\n            if(startAtParkingZone === undefined || startChargePoint === undefined) {\n                if (endedAtParkingZone === true || endedAtChargePoint === true) {\n                    startFee = startFee * 0.85;\n                    discount = 10 - startFee;\n                }\n            }\n\n            const atrip = { \n\t\t\t\ttripId: trip.id,\n                date: trip.date,\n                startTime: trip.start.time,\n                stopTime: trip.stop.time,\n                startAtParkingZone: startAtParkingZone,\n                endedAtParkingZone: endedAtParkingZone,\n                startChargePoint: startChargePoint,\n                endedAtChargePoint: endedAtChargePoint,\n                timeOfTrip: time,\n                startFee: startFee,\n                timeFee: timeFee,\n                discount: discount,\n                totalCost: (timeFee + startFee)\n\n            }\n            arrayOfTrips.push(atrip);\n        })\n        setUserInvoice(arrayOfTrips)\n        //return userInvoice\n    }\n\n    \n    /*  loopara igenom alla chargingposts, \n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInParkingZone(tripEnded) {\n        let res;\n        for (var elem of allParkingZones) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n        }\n    }\n\n    /*  loopara igenom alla chargingposts,\n        ser om koordinaterna finns inuti polygon,\n        retunerar endast true */\n    function checkIfCoordInChargingPost(tripEnded) {\n        let res;\n        for (var elem of allCharging_posts) {\n            let polyGon = [\n                [elem.position.polygonePart1.lat,\n                elem.position.polygonePart1.lng],\n                [elem.position.polygonePart2.lat,\n                elem.position.polygonePart2.lng],\n                [elem.position.polygonePart3.lat,\n                elem.position.polygonePart3.lng],\n                [elem.position.polygonePart4.lat,\n                elem.position.polygonePart4.lng]\n            ]\n            res = checkIfPointInPolyGon(tripEnded, polyGon);\n\n            if(res === true) {\n                return true\n            }\n       } \n    }\n\n    /* Räknar ut tiden för resan, gör om till sekunder \n        subtraherar och dividerar för att få ut minuter\n    */\n    function getTimeOfTrip(starttime, stoptime) {\n\n        var arrStarttime = starttime.split(\".\");\n        var arrStoptime = stoptime.split(\".\"); \n\n        arrStarttime[0] = arrStarttime[0] * 60 * 60;\n        arrStarttime[1] = arrStarttime[1] * 60;\n        arrStoptime[0] = arrStoptime[0] * 60 * 60;\n        arrStoptime[1] = arrStoptime[1] * 60;\n        \n        var stopTime = arrStoptime[0] + arrStoptime[1];\n        var startTime = arrStarttime[0] + arrStarttime[1];\n        var time = (stopTime - startTime) / 60;\n\n        return time\n    }\n\n    function checkIfPointInPolyGon(point, polygone) {\n\n        return pointInPolygon(point, polygone);\n    }\n\n\n\n    useEffect(() => {\n        async function fetchData() {\n            if(user && user.value.id) {\n                let id = user.value.id;\n                /* Om props läs därifrån */\n                if(props && props.customer) {\n                    id = props.customer.id;\n                }\n                let res = await Api.getAUser(id);\n                if (res && res.data) {\n\n                    data = res.data;\n\n                    if(data.trips.length > 0) {\n                        setUserHistory(data.trips)\n                    } else {\n                        setMessage(\"Ingen resa gjord\")\n                    }\n                }\n            }\n        }\n        fetchData();\n    }, [user])\n\n    /// visa karta\n    function showMap(startCoord, stopCoord, e) {\n        let pageY = e.pageY;\n            if(props && props.customer) {\n                pageY = pageY - 200;\n            }\n\n\n        setShowMapForUser({\n            showMap: !showMapForUser.showMap,\n            startCoord: startCoord,\n            stopCoord: stopCoord,\n            pageY: pageY\n        })\n    }\n\n    useEffect(() => {\n      \n    }, [showMapForUser, setShowMapForUser])\n\n\treturn (\n        <Container>  \n            <Main showMap = {showMapForUser.showMap} >\n                <UserHistory> \n                {userInvoice.length > 0 ? (\n            <table>\n                    <caption> Resekostnader</caption>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Datum</th>\n                            <th scope=\"col\">Starttid</th>\n                            <th scope=\"col\">Sluttid</th>\n                            <th scope=\"col\">Total tid</th>\n                            <th scope=\"col\">Start avgift</th>\n                            <th scope=\"col\">Rabatt</th>\n                            <th scope=\"col\">Tid avgift</th>\n                            <th scope=\"col\">Total kostnad</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {userInvoice.map(elem => \n                        <tr>\n                            <td data-label=\"Datum\"> {elem.date} </td>\n                            <td data-label=\"Starttid\">{elem.startTime} </td>\n                            <td data-label=\"Sluttid\">{elem.stopTime} </td>\n                            <td data-label=\"Total tid\">{elem.timeOfTrip} min </td>\n                            <td data-label=\"Start avgift\" >{elem.startFee}:-</td>\n                            <td data-label=\"Rabatt\">{elem.discount}:- </td>\n                            <td data-label=\"Minutpris\">{elem.timeFee}:- </td>\n                            <td data-label=\"Total kostnad\">{elem.totalCost}:- </td>\n                        </tr>\n                        )}\n                   \n                    </tbody>\n                    </table>\n                    ) : (\n\n                        console.log(\"HEJ\")\n                    )}\n                </UserHistory>\n            </Main>\n            <MapContainer showMap = {showMapForUser.showMap} pageY={showMapForUser.pageY} >\n                {showMapForUser.showMap &&\n                    <MapForUser showMapForUser = {showMapForUser}> </MapForUser>\n                }\n            </MapContainer>\n            \n\n        </Container>\n    )\n}\n\nexport default History\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}